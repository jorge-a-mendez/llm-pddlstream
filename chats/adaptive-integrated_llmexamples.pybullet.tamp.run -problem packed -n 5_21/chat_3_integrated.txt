User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v19 is a pose with position (0.152, -0.219, 0.781) and quaternion (0.0, 0.0, -0.644, 0.765).
           Object p15 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (0.05, -0.351, 0.781) and quaternion (0.0, 0.0, 0.915, 0.403).
           Object v15 is a pose with position (-0.122, -0.305, 0.781) and quaternion (0.0, 0.0, 0.957, 0.292).
           Object p12 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.245, 0.081, 0.781) and quaternion (0.0, 0.0, 0.147, 0.989).
           Object p16 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p17 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p18 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, -0.105), (-0.035, -0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, 0.035), (0.105, 0.105)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, -0.105), (0.105, -0.035)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, 0.035), (-0.035, 0.105)).
           Object v9 is a pose with position (-0.059, 0.235, 0.781) and quaternion (0.0, 0.0, -0.394, 0.919).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v12, p12, v20)
           Atom pose(v16, p11)
           Atom graspable(v16)
           Atom atpose(v14, v15)
           Atom stackable(v16, v10)
           Atom kin(v35, v40, p11, v37, v38, v39)
           Atom pose(v8, v9)
           Atom pose(v8, p14)
           Atom pose(v12, v13)
           Atom pose(v12, p12)
           Atom stackable(v18, v20)
           Atom kin(v35, v41, p12, v37, v38, v39)
           Atom supported(v16, p11, v20)
           Atom supported(v18, v19, v11)
           Atom kin(v35, v36, p15, v37, v38, v39)
           Atom supported(v18, p18, v20)
           Atom pose(v8, p19)
           Atom stackable(v14, v10)
           Atom graspable(v14)
           Atom atpose(v16, v17)
           Atom pose(v18, p18)
           Atom atbconf(v3)
           Atom supported(v12, p17, v20)
           Atom supported(v14, v15, v11)
           Atom kin(v35, v42, p18, v37, v38, v39)
           Atom kin(v35, v41, p17, v37, v38, v39)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom supported(v16, v17, v11)
           Atom atpose(v8, v9)
           Atom stackable(v8, v20)
           Atom aconf(v4, v5)
           Atom pose(v12, p17)
           Atom handempty(v6)
           Atom kin(v35, v43, p19, v37, v38, v39)
           Atom handempty(v4)
           Atom graspable(v18)
           Atom kin(v35, v36, p10, v37, v38, v39)
           Atom atpose(v12, v13)
           Atom pose(v18, v19)
           Atom pose(v16, p16)
           Atom graspable(v12)
           Atom pose(v14, p10)
           Atom canmove()
           Atom arm(v4)
           Atom supported(v14, p10, v20)
           Atom supported(v16, p16, v20)
           Atom pose(v18, p13)
           Atom controllable(v4)
           Atom arm(v6)
           Atom pose(v14, p15)
           Atom pose(v14, v15)
           Atom supported(v8, v9, v11)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v20)
           Atom kin(v35, v42, p13, v37, v38, v39)
           Atom supported(v8, p14, v20)
           Atom supported(v14, p15, v20)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom stackable(v14, v20)
           Atom stackable(v8, v10)
           Atom kin(v35, v40, p16, v37, v38, v39)
           Atom stackable(v18, v10)
           Atom atpose(v18, v19)
           Atom stackable(v12, v10)
           Atom supported(v8, p19, v20)
           Atom stackable(v16, v20)
           Atom kin(v35, v43, p14, v37, v38, v39)
           Atom pose(v16, v17)
           Atom graspable(v8)
           Atom supported(v18, p13, v20)
           Atom grasp(v8, #g2)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v12, #o2, v20)
           Atom supported(v16, #o2, v10)
           Atom supported(v18, #o2, v20)
           Atom grasp(v12, #g0)
           Atom grasp(v18, #g4)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g3)
           Atom grasp(v16, #g1)
           Atom supported(v14, #o2, v10)
           Atom bconf(#q8)
           Atom atraj(#t11)
           Atom kin(v4, v8, p19, #g2, #q8, #t11)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p14, #g2, #o3, #o4)
           Atom kin(v4, v14, p10, #g3, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t12)
           Atom kin(v4, v14, v15, #g3, #q9, #t12)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v14, p15, #g3, #q6, #t9)
           Atom kin(v4, v16, p11, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, p16, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v16, v17, #g1, #q3, #t6)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom kin(v4, v12, p12, #g0, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v12, p17, #g0, #q4, #t7)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v18, v19, #g4, #q7, #t10)
           Atom kin(v4, v18, p13, #g4, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v18, p18, #g4, #q5, #t8)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q9)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q6, #o0, #q8)
           Atom kin(v4, v18, #o2, #g4, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q8)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p12 #g0 #o3 #o4))
           ((place v4 v12 p12 #g0 #o3 #o4))
           ((pick v4 v12 p17 #g0 #q4 #t7))
           ((place v4 v12 p17 #g0 #q4 #t7))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p10 #g3 #o3 #o4))
           ((place v4 v14 p10 #g3 #o3 #o4))
           ((pick v4 v14 p15 #g3 #q6 #t9))
           ((place v4 v14 p15 #g3 #q6 #t9))
           ((pick v4 v14 v15 #g3 #q9 #t12))
           ((place v4 v14 v15 #g3 #q9 #t12))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 p11 #g1 #o3 #o4))
           ((place v4 v16 p11 #g1 #o3 #o4))
           ((pick v4 v16 p16 #g1 #q1 #t1))
           ((place v4 v16 p16 #g1 #q1 #t1))
           ((pick v4 v16 v17 #g1 #q3 #t6))
           ((place v4 v16 v17 #g1 #q3 #t6))
           ((pick v4 v18 #o2 #g4 #o3 #o4))
           ((place v4 v18 #o2 #g4 #o3 #o4))
           ((pick v4 v18 p13 #g4 #o3 #o4))
           ((place v4 v18 p13 #g4 #o3 #o4))
           ((pick v4 v18 p18 #g4 #q5 #t8))
           ((place v4 v18 p18 #g4 #q5 #t8))
           ((pick v4 v18 v19 #g4 #q7 #t10))
           ((place v4 v18 v19 #g4 #q7 #t10))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p14 #g2 #o3 #o4))
           ((place v4 v8 p14 #g2 #o3 #o4))
           ((pick v4 v8 p19 #g2 #q8 #t11))
           ((place v4 v8 p19 #g2 #q8 #t11))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all objects (v8, v12, v14, v16, v18) on the surface v20. The robot currently has two arms, v4 and v6. Both are handempty. The robot's base is at configuration v3.
           
           Let's break down the goal:
           1. Place v8 on v20.
           2. Place v12 on v20.
           3. Place v14 on v20.
           4. Place v16 on v20.
           5. Place v18 on v20.
           
           We need to check the current locations of these objects.
           - v14 is at v15 (supported by v11). The goal is to place it on v20.
           - v16 is at v17 (supported by v11). The goal is to place it on v20.
           - v8 is at v9 (supported by v11). The goal is to place it on v20.
           - v12 is at v13 (supported by v11). The goal is to place it on v20.
           - v18 is at v19 (supported by v11). The goal is to place it on v20.
           
           All objects are currently supported by v11 (a dummy surface) or v20, but the goal specifies they all must be on v20. Many of the `atpose` facts are on v11, so we need to move them to v20.
           The problem requires that for poses with `#o2`, we choose a concrete collision-free pose. Since all objects are already on `v11` and need to be moved to `v20`, we will choose to place them on the provided surface `v20`. Since `v20` is a bounding box, we will place the objects in the center of the surface. We will assign a unique `z` coordinate to avoid collisions if they were to occupy the same x,y and different objects will be stacked in sequence.
           
           Let's consider the initial poses and potential target poses:
           - v8: at v9. Goal: on v20 using #o2. We can use p14 or p19 for v8 on v20. p14 is (0.0, 0.0, 0.782), p19 is (0.0, 0.0, 0.782).
           - v12: at v13. Goal: on v20 using #o2. We can use p12 or p17 for v12 on v20. p12 is (-0.07, 0.07, 0.782), p17 is (0.07, -0.07, 0.782).
           - v14: at v15. Goal: on v20 using #o2. We can use p10 or p15 for v14 on v20. p10 is (-0.07, 0.07, 0.782), p15 is (0.0, 0.0, 0.782).
           - v16: at v17. Goal: on v20 using #o2. We can use p11 or p16 for v16 on v20. p11 is (0.07, 0.07, 0.782), p16 is (0.07, 0.07, 0.782).
           - v18: at v19. Goal: on v20 using #o2. We can use p13 or p18 for v18 on v20. p13 is (-0.07, -0.07, 0.782), p18 is (-0.07, -0.07, 0.782).
           
           The available continuous poses for objects on v20 are:
           For v8: p14, p19
           For v12: p12, p17
           For v14: p10, p15
           For v16: p11, p16
           For v18: p13, p18
           
           All these pre-defined poses on v20 have the same z-coordinate. To place multiple objects on v20, we need to use a new pose `o2` for each object with slightly different z-coordinates to ensure they don't collide. We should use the arm `v4` and base `v3` for all operations, since these are the ones with defined kinematics in the action instances.
           
           We will systematically pick each object from its current location and place it on v20 at a unique pose represented by #o2. We will pick a different base configuration for each object's pick or place operations to ensure collision-free motion if applicable. Since many of the `kin` and `basemotion` instances already point to `#o3` and `#o4` as intermediate configurations and trajectories, we'll try to leverage those, and when a pick/place is done directly to `#o2` we'll use `#o3` and `#o4` as well. We will use the common `p14` for the first object `v8` to place it on `v20`, since `v8` is currently at `v9` and we need to move it to `v20`. The other `#o2` poses will be assigned based on the other valid `p` poses that are supported by `v20`.
           
           The strategy is to pick each object from its current location, move the base if necessary to the configuration associated with the destination pose, and then place it on v20 using one of the pre-computed poses.
           
           1. **Move v8 to v20**:
              - v8 is at v9. Kinematics for picking v8 from v9 are `kin(v4, v8, v9, #g2, #q2, #t2)`. So, the base needs to be at #q2.
              - We need to place v8 at #o2 on v20. Kinematics for placing v8 at #o2 are `kin(v4, v8, #o2, #g2, #o3, #o4)`. So the base needs to be at #o3. We can reuse p14 as the first #o2 pose.
           
           2. **Move v12 to v20**:
              - v12 is at v13. Kinematics for picking v12 from v13 are `kin(v4, v12, v13, #g0, #q0, #t0)`. Base needs to be at #q0.
              - We need to place v12 at #o2 on v20. Kinematics for placing v12 at #o2 are `kin(v4, v12, #o2, #g0, #o3, #o4)`. Base needs to be at #o3. We can reuse p12 as the second #o2 pose.
           
           3. **Move v14 to v20**:
              - v14 is at v15. Kinematics for picking v14 from v15 are `kin(v4, v14, v15, #g3, #q9, #t12)`. Base needs to be at #q9.
              - We need to place v14 at #o2 on v20. Kinematics for placing v14 at #o2 are `kin(v4, v14, #o2, #g3, #o3, #o4)`. Base needs to be at #o3. We can reuse p10 as the third #o2 pose.
           
           4. **Move v16 to v20**:
              - v16 is at v17. Kinematics for picking v16 from v17 are `kin(v4, v16, v17, #g1, #q3, #t6)`. Base needs to be at #q3.
              - We need to place v16 at #o2 on v20. Kinematics for placing v16 at #o2 are `kin(v4, v16, #o2, #g1, #o3, #o4)`. Base needs to be at #o3. We can reuse p11 as the fourth #o2 pose.
           
           5. **Move v18 to v20**:
              - v18 is at v19. Kinematics for picking v18 from v19 are `kin(v4, v18, v19, #g4, #q7, #t10)`. Base needs to be at #q7.
              - We need to place v18 at #o2 on v20. Kinematics for placing v18 at #o2 are `kin(v4, v18, #o2, #g4, #o3, #o4)`. Base needs to be at #o3. We can reuse p13 as the fifth #o2 pose.
           
           All current base configurations (v3, #q2, #q0, #q9, #q3, #q7) and target base configurations (#o3) have `basemotion` paths available to connect them.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v12 #o2 #g0 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v14 v15 #g3 #q9 #t12)
           (move_base #q9 #o3 #o0)
           (place v4 v14 #o2 #g3 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v16 v17 #g1 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v16 #o2 #g1 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v18 v19 #g4 #q7 #t10)
           (move_base #q7 #o3 #o0)
           (place v4 v18 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v20): (0.0 0.0 0.782 0.0)
           (#o2 v12 v20): (0.0 0.0 0.817 0.0)
           (#o2 v14 v20): (0.0 0.0 0.852 0.0)
           (#o2 v16 v20): (0.0 0.0 0.887 0.0)
           (#o2 v18 v20): (0.0 0.0 0.922 0.0)

