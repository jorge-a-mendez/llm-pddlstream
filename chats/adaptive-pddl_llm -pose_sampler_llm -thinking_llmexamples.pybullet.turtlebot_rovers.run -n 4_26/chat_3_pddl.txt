User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v14)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom lander(v9)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom rock(v5)
           Atom rock(v3)
           Atom rover(v12)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom store(v16)
           Atom rock(v1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q4, #y3, v20)
           Atom imagerange(v12, #q4, v20)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q5, v3)
           Atom conf(v12, #q5)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v8)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t9, #q8)
           Atom motion(v12, v13, #t4, #q0)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q6, #t8, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q3, #t10, #q0)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #t12, v15)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q8, #t7, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q4, #t11, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #t3, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #t1, #q1)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #t2, #q2)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q5 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t2 #q2))
           ((move v12 #q1 #t3 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t10 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t8 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #t12 v15))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t7 #q7))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t9 #q8))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v20 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for Achieving `new-axiom@0()`**
           
           Okay, here's my plan to tackle this. First, I need to break down the goal `new-axiom@0()`. It involves getting images from multiple sources and performing analyses on specific soil and rock samples. Since I'm an expert, I'll streamline this:
           
           1.  **Preparation**: My initial state is good. Two rovers, `v12` and `v14`, are ready to go. `v12` is at `v13` and `v14` is at `v15`. They each have the store `v16` available. Both rovers have the onboard camera `v10` supporting mode `v11`.
           
           2.  **Analysis Phase (Rover v12)**:
               *   I'll have `v12` handle the analysis tasks.
               *   Move `v12` to `#q5` (it's accessible via `#o2`) to get `v3` (stone) and analyze it.
               *   Take a rock sample, `sample_rock v12 #q5 v3 v16`, this stores the sample in `v16` and analyzes it.
               *   Move `v12` to `#q1` for communication.
               *   Send the analysis to the lander `(send_analysis v12 #q1 #y1 v9 v3)`
               *   Drop the rock sample to free the store (I'm using `drop_rock v12 v16`).
               *   Move `v12` to `#o5` via `#o2` to take a sample of `v7` (soil).
               *   Sample the soil, `sample_rock v12 #o5 v7 v16`.
               *   Move to `#q1` for communication.
               *   Send the soil analysis, `send_analysis v12 #q1 #y1 v9 v7`.
               *   **Crucially**: I need `v12` back at `v13` after finishing the analysis tasks for safety and reusability, so I'll move it back there.
           
           3.  **Image Phase (Rover v14)**:
               *   `v14` is the image specialist. I'll utilize it to capture images.
               *   Move `v14` to `#o3` (this is accessible via `#o2`).
               *   Calibrate `v14` and its camera `v10` for each of the targets (`v17`, `v18`, `v19`, `v20`).
               *   Then, `take_image` using the calibration (`calibrate`).
               *   I'll then move the rover from `#o3` to `#q7`, which has good communication.
               *   I'll send each image over to the lander.
               *   Now, I have images and analysis ready, and the plan is complete.
           
           4.  **Final step**: Finally, to ensure I've returned the rovers to their initial configurations, I'll move `v14` back to `v15`.
           
           **This is the complete sequence of actions:**
           
           1.  `(move v12 v13 #o2 #q5)`
           2.  `(sample_rock v12 #q5 v3 v16)`
           3.  `(move v12 #q5 #o2 #q1)`
           4.  `(send_analysis v12 #q1 #y1 v9 v3)`
           5.  `(drop_rock v12 v16)`
           6.  `(move v12 #q1 #o2 #o5)`
           7.  `(sample_rock v12 #o5 v7 v16)`
           8.  `(move v12 #o5 #o2 #q1)`
           9.  `(send_analysis v12 #q1 #y1 v9 v7)`
           10. `(drop_rock v12 v16)`
           11. `(move v12 #q1 #t3 v13)`
           12. `(move v14 v15 #o2 #o3)`
           13. `(calibrate v14 #o3 #o4 v17 v10)`
           14. `(take_image v14 #o3 #o4 v17 v10 v11)`
           15. `(calibrate v14 #o3 #o4 v18 v10)`
)

Model:     **Finalized Plan for Achieving `new-axiom@0()`**
           
           Okay, here's my plan to tackle this. First, I need to break down the goal `new-axiom@0()`. It involves getting images from multiple sources and performing analyses on specific soil and rock samples. Since I'm an expert, I'll streamline this:
           
           1.  **Preparation**: My initial state is good. Two rovers, `v12` and `v14`, are ready to go. `v12` is at `v13` and `v14` is at `v15`. They each have the store `v16` available. Both rovers have the onboard camera `v10` supporting mode `v11`.
           
           2.  **Analysis Phase (Rover v12)**:
               *   I'll have `v12` handle the analysis tasks.
               *   Move `v12` to `#q5` (it's accessible via `#o2`) to get `v3` (stone) and analyze it.
               *   Take a rock sample, `sample_rock v12 #q5 v3 v16`, this stores the sample in `v16` and analyzes it.
               *   Move `v12` to `#q1` for communication.
               *   Send the analysis to the lander `(send_analysis v12 #q1 #y1 v9 v3)`
               *   Drop the rock sample to free the store (I'm using `drop_rock v12 v16`).
               *   Move `v12` to `#o5` via `#o2` to take a sample of `v7` (soil).
               *   Sample the soil, `sample_rock v12 #o5 v7 v16`.
               *   Move to `#q1` for communication.
               *   Send the soil analysis, `send_analysis v12 #q1 #y1 v9 v7`.
               *   **Crucially**: I need `v12` back at `v13` after finishing the analysis tasks for safety and reusability, so I'll move it back there.
           
           3.  **Image Phase (Rover v14)**:
               *   `v14` is the image specialist. I'll utilize it to capture images.
               *   Move `v14` to `#o3` (this is accessible via `#o2`).
               *   Calibrate `v14` and its camera `v10` for each of the targets (`v17`, `v18`, `v19`, `v20`).
               *   Then, `take_image` using the calibration (`calibrate`).
               *   I'll then move the rover from `#o3` to `#q7`, which has good communication.
               *   I'll send each image over to the lander.
               *   Now, I have images and analysis ready, and the plan is complete.
           
           4.  **Final step**: Finally, to ensure I've returned the rovers to their initial configurations, I'll move `v14` back to `v15`.
           
           **This is the complete sequence of actions:**
           
           1.  `(move v12 v13 #o2 #q5)`
           2.  `(sample_rock v12 #q5 v3 v16)`
           3.  `(move v12 #q5 #o2 #q1)`
           4.  `(send_analysis v12 #q1 #y1 v9 v3)`
           5.  `(drop_rock v12 v16)`
           6.  `(move v12 #q1 #o2 #o5)`
           7.  `(sample_rock v12 #o5 v7 v16)`
           8.  `(move v12 #o5 #o2 #q1)`
           9.  `(send_analysis v12 #q1 #y1 v9 v7)`
           10. `(drop_rock v12 v16)`
           11. `(move v12 #q1 #t3 v13)`
           12. `(move v14 v15 #o2 #o3)`
           13. `(calibrate v14 #o3 #o4 v17 v10)`
           14. `(take_image v14 #o3 #o4 v17 v10 v11)`
           15. `(calibrate v14 #o3 #o4 v18 v10)`

