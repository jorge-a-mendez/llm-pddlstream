User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom rock(v1)
           Atom rock(v8)
           Atom objective(v17)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom camera(v10)
           Atom objective(v19)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom lander(v9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom comvisible(v14, #q5, #y4, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q3, #y2, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q13, #y6, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y6)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom imagevisible(v14, #q4, #y3, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q12, #y5, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y5)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q14, #y7, v17)
           Atom imagerange(v12, #q14, v17)
           Atom conf(v12, #q14)
           Atom ray(#y7)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v8)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #t17, #q3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t0, #q2)
           Atom motion(v14, #q5, #t15, #q8)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #t19, #q9)
           Atom motion(v14, #q5, #t5, v15)
           Atom motion(v14, #q3, #t7, #q5)
           Atom motion(v14, #q0, #t6, #q5)
           Atom motion(v14, #q5, #t11, #q3)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q9, #t18, #q5)
           Atom motion(v14, #q11, #t30, #q5)
           Atom motion(v14, #q8, #t13, #q5)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q5, #t10, #q4)
           Atom motion(v14, #q3, #t16, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #t8, #q5)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t3, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q5, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #t20, #q5)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, v15, #t29, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #t25, #q11)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #t27, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, v13, #t26, #q12)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t12, #q5)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q5, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #t28, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q12, #t22, #q1)
           Atom motion(v12, #q14, #t24, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q1, #t9, v13)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q13, #t23, #q1)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t9 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t22 #q1))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q1))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t24 #q1))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q2))
           ((move v12 v13 #t26 #q12))
           ((move v12 v13 #t27 #q13))
           ((move v12 v13 #t28 #q14))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t17 #q3))
           ((move v14 #q0 #t6 #q5))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q5))
           ((move v14 #q10 #t25 #q11))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t30 #q5))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t16 #q4))
           ((move v14 #q3 #t7 #q5))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #t10 #q4))
           ((move v14 #q5 #t11 #q3))
           ((move v14 #q5 #t14 #q7))
           ((move v14 #q5 #t15 #q8))
           ((move v14 #q5 #t19 #q9))
           ((move v14 #q5 #t21 #q10))
           ((move v14 #q5 #t5 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q5))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t13 #q5))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q5))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t29 #q10))
           ((move v14 v15 #t3 #q4))
           ((calibrate v12 #q12 #y5 v19 v10))
           ((calibrate v12 #q13 #y6 v18 v10))
           ((calibrate v12 #q14 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q3 #y2 v18 v10))
           ((calibrate v14 #q4 #y3 v19 v10))
           ((take_image v12 #q12 #y5 v19 v10 v11))
           ((take_image v12 #q13 #y6 v18 v10 v11))
           ((take_image v12 #q14 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q3 #y2 v18 v10 v11))
           ((take_image v14 #q4 #y3 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y4 v9 v3))
           ((send_analysis v14 #q5 #y4 v9 v1))
           ((send_analysis v14 #q5 #y4 v9 v7))
           ((send_analysis v14 #q5 #y4 v9 v4))
           ((send_analysis v14 #q5 #y4 v9 v8))
           ((send_analysis v14 #q5 #y4 v9 v5))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q5 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, let's break down this planning problem.** I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the `rovers` domain.  Essentially, this goal is a conjunction of several conditions related to image acquisition, image sending, and rock analysis. The initial state provides crucial information, like the initial positions of the rovers and the availability of resources.
           
           My first step was to decompose the goal and identify the necessary actions. I saw that I needed to: 1) obtain images of three objects (`v17`, `v18`, `v19`), 2) analyze a specific rock of type `v2` (which I decided to be `v1`) and a specific rock of type `v6` (which I decided to be `v7`), and 3) communicate those images and analyses back to the base.
           
           To achieve image acquisition (`receivedimage`), I recognized the standard sequence of calibrating the camera, taking the image, and then sending it.  I've got two rovers, `v12` and `v14`, and I see that `v14` is in a better position to handle image-related tasks, as it has a camera that can work with all three images. Thus I decided to use `v14` for imaging, as it's at `v15` which would allow it to take a series of images in the vicinity and send them.  I will have it go to each visible location to each object, take an image and send it, then repeat with the next one.
           
           For analysis (`receivedanalysis`), the plan involves sampling a rock and sending the analysis. The rover `v12` can handle this by moving to the locations of rocks `v1` and `v7`, sampling them, and then communicating the analysis back to base.  I chose rover `v12` for this because it is initially `free` and in a position to execute these tasks.  I am very aware of the constraint that the rover's store must be free before a rock sample is taken, thus I added `drop_rock`.
           
           Once the sub-goals are understood, I needed to combine the plan. The order within each rover's actions is critical because actions depend on prior actions' completion. I made sure to sequence each rover's tasks accordingly. Rover `v14` first moves, calibrates, takes, moves, sends, and then moves for each image. Rover `v12` must move, sample, move, send, and then drop its store before continuing to the next.
           
           I then integrated these plans into a single, comprehensive plan. I carefully considered each step, ensuring the preconditions were met and that the effects of each action would lead to the next.  I meticulously checked for potential conflicts and order dependencies. I did a full, linear walk through, confirming that all steps lined up with the initial and derived facts, making sure that it all makes sense. After the careful considerations, I've produced a plan that appears to satisfy all the conditions necessary to achieve the `new-axiom@0()` goal. The solution includes the motions to each visible location and to the analysis locations, ensuring the store is available to each rover, and the communication steps to each rover. The ordering ensures that all preconditions are met at each step.
           
)

Model:     **Okay, let's break down this planning problem.** I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the `rovers` domain.  Essentially, this goal is a conjunction of several conditions related to image acquisition, image sending, and rock analysis. The initial state provides crucial information, like the initial positions of the rovers and the availability of resources.
           
           My first step was to decompose the goal and identify the necessary actions. I saw that I needed to: 1) obtain images of three objects (`v17`, `v18`, `v19`), 2) analyze a specific rock of type `v2` (which I decided to be `v1`) and a specific rock of type `v6` (which I decided to be `v7`), and 3) communicate those images and analyses back to the base.
           
           To achieve image acquisition (`receivedimage`), I recognized the standard sequence of calibrating the camera, taking the image, and then sending it.  I've got two rovers, `v12` and `v14`, and I see that `v14` is in a better position to handle image-related tasks, as it has a camera that can work with all three images. Thus I decided to use `v14` for imaging, as it's at `v15` which would allow it to take a series of images in the vicinity and send them.  I will have it go to each visible location to each object, take an image and send it, then repeat with the next one.
           
           For analysis (`receivedanalysis`), the plan involves sampling a rock and sending the analysis. The rover `v12` can handle this by moving to the locations of rocks `v1` and `v7`, sampling them, and then communicating the analysis back to base.  I chose rover `v12` for this because it is initially `free` and in a position to execute these tasks.  I am very aware of the constraint that the rover's store must be free before a rock sample is taken, thus I added `drop_rock`.
           
           Once the sub-goals are understood, I needed to combine the plan. The order within each rover's actions is critical because actions depend on prior actions' completion. I made sure to sequence each rover's tasks accordingly. Rover `v14` first moves, calibrates, takes, moves, sends, and then moves for each image. Rover `v12` must move, sample, move, send, and then drop its store before continuing to the next.
           
           I then integrated these plans into a single, comprehensive plan. I carefully considered each step, ensuring the preconditions were met and that the effects of each action would lead to the next.  I meticulously checked for potential conflicts and order dependencies. I did a full, linear walk through, confirming that all steps lined up with the initial and derived facts, making sure that it all makes sense. After the careful considerations, I've produced a plan that appears to satisfy all the conditions necessary to achieve the `new-axiom@0()` goal. The solution includes the motions to each visible location and to the analysis locations, ensuring the store is available to each rover, and the communication steps to each rover. The ordering ensures that all preconditions are met at each step.
           

