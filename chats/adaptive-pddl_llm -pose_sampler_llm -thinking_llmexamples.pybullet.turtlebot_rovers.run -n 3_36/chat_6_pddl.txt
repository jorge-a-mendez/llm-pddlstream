User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom rock(v1)
           Atom rock(v8)
           Atom objective(v17)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom camera(v10)
           Atom objective(v19)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom lander(v9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q3, #y2, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q5, #y4, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #q4, #y3, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v8)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q8, #t13, #q5)
           Atom motion(v14, #q5, #t21, #q10)
           Atom motion(v14, #q5, #t5, v15)
           Atom motion(v14, #q5, #t15, #q8)
           Atom motion(v14, #q10, #t20, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q9, #t18, #q5)
           Atom motion(v14, #q5, #t19, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t7, #q5)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q5, #t11, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v12, #q1, #t9, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q3, #t16, #q4)
           Atom motion(v14, v15, #t3, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q5, #t10, #q4)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #t8, #q5)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #t12, #q5)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q5, #t14, #q7)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #t6, #q5)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t17, #q3)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q2)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o3)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q2))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t9 v13))
           ((move v12 #q2 #o2 #o3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t17 #q3))
           ((move v14 #q0 #t6 #q5))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q5))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t16 #q4))
           ((move v14 #q3 #t7 #q5))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #t10 #q4))
           ((move v14 #q5 #t11 #q3))
           ((move v14 #q5 #t14 #q7))
           ((move v14 #q5 #t15 #q8))
           ((move v14 #q5 #t19 #q9))
           ((move v14 #q5 #t21 #q10))
           ((move v14 #q5 #t5 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q5))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t13 #q5))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q5))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t3 #q4))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q3 #y2 v18 v10))
           ((calibrate v14 #q4 #y3 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q3 #y2 v18 v10 v11))
           ((take_image v14 #q4 #y3 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y4 v9 v3))
           ((send_analysis v14 #q5 #y4 v9 v7))
           ((send_analysis v14 #q5 #y4 v9 v1))
           ((send_analysis v14 #q5 #y4 v9 v4))
           ((send_analysis v14 #q5 #y4 v9 v8))
           ((send_analysis v14 #q5 #y4 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q5 #y4 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q5 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of conditions regarding configuration, image reception, object analysis (stone and soil), and communications.  The initial state provides some key starting points: both rovers (`v12`, `v14`) are in their respective initial configurations and storage units are available, which simplifies things. The main challenge lies in satisfying the "image received" and "analysis received" predicates for specific rock and soil samples.
           
           My strategy is as follows:
           
           1.  **Imaging Operations:** Rover `v12` is tasked with capturing and transmitting the necessary images.  Since `imagevisible` and `comvisible` predicates are present for rover `v12` in the initial state, I'll leverage that.  The plan involves `v12` moving to a position (`#o3`) for image acquisition, calibrating the camera (`v10`) for each target object, taking the image, moving to a communication position (`#q1`), and then sending the images to the lander (`v9`).
           
           2.  **Analysis Operations:** Concurrently, rover `v14` will handle the sample analysis.  I've identified the rocks of interest: one of type `v2` (stone) identified as `v1`, and one of type `v6` (soil) identified as `v7`.  Rover `v14` will move to each sampling location (`#q10` for stone `v1` and `#o5` for soil `v7`), perform the sample_rock action, freeing the store `v16`, and then dropping the rock. The rover will move to the appropriate communication location (`#q5`) and transmit the analysis results to the lander (`v9`).
           
           3.  **Coordination and Sequencing:**  The overall plan I envision involves two phases:
               1.  Rover `v12` executes a sequence of calibration, image capture, and transmission actions.  After, returning to its original config (`v13`).
               2.  Rover `v14` executes the sampling, dropping the rock, moving and then transmitting the analysis actions. Afterward, returning to its original config (`v15`).
           
           This plan covers all prerequisites and preconditions, ensures the state changes are properly handled, and should lead to satisfying the target axiom. It utilizes the available resources effectively and leverages the initial state. Let's execute!
           
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of conditions regarding configuration, image reception, object analysis (stone and soil), and communications.  The initial state provides some key starting points: both rovers (`v12`, `v14`) are in their respective initial configurations and storage units are available, which simplifies things. The main challenge lies in satisfying the "image received" and "analysis received" predicates for specific rock and soil samples.
           
           My strategy is as follows:
           
           1.  **Imaging Operations:** Rover `v12` is tasked with capturing and transmitting the necessary images.  Since `imagevisible` and `comvisible` predicates are present for rover `v12` in the initial state, I'll leverage that.  The plan involves `v12` moving to a position (`#o3`) for image acquisition, calibrating the camera (`v10`) for each target object, taking the image, moving to a communication position (`#q1`), and then sending the images to the lander (`v9`).
           
           2.  **Analysis Operations:** Concurrently, rover `v14` will handle the sample analysis.  I've identified the rocks of interest: one of type `v2` (stone) identified as `v1`, and one of type `v6` (soil) identified as `v7`.  Rover `v14` will move to each sampling location (`#q10` for stone `v1` and `#o5` for soil `v7`), perform the sample_rock action, freeing the store `v16`, and then dropping the rock. The rover will move to the appropriate communication location (`#q5`) and transmit the analysis results to the lander (`v9`).
           
           3.  **Coordination and Sequencing:**  The overall plan I envision involves two phases:
               1.  Rover `v12` executes a sequence of calibration, image capture, and transmission actions.  After, returning to its original config (`v13`).
               2.  Rover `v14` executes the sampling, dropping the rock, moving and then transmitting the analysis actions. Afterward, returning to its original config (`v15`).
           
           This plan covers all prerequisites and preconditions, ensures the state changes are properly handled, and should lead to satisfying the target axiom. It utilizes the available resources effectively and leverages the initial state. Let's execute!
           

