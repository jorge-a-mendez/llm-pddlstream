User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom rock(v1)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom imagevisible(v12, #q1, #y0, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q3, v4)
           Atom conf(v12, #q3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q8, #y3, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y3)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q0, v8)
           Atom conf(v12, #q0)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q10, #y4, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v5)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q0, #t1, #q2)
           Atom motion(v12, #q3, #t2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t8, #q6)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q2, #t9, #q7)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t5, #q0)
           Atom motion(v12, #q2, #t6, #q3)
           Atom motion(v12, #q2, #t4, v13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q2, #t7, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v8 v16))
           ((sample_rock v12 #q3 v4 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q2))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t4 v13))
           ((move v12 #q2 #t5 #q0))
           ((move v12 #q2 #t6 #q3))
           ((move v12 #q2 #t7 #q5))
           ((move v12 #q2 #t8 #q6))
           ((move v12 #q2 #t9 #q7))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q2))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q1))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q1 #y0 v20 v10))
           ((calibrate v12 #q10 #y4 v18 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q8 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v20 v10 v11))
           ((take_image v12 #q10 #y4 v18 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q8 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The goal `new-axiom@0()` requires:
           1. Both rovers (v12 and v14) to be at some configuration. This is already true as `atconf(v12, v13)` and `atconf(v14, v15)` are given.
           2. Both rovers to have a free store. This is true as `free(v12, v16)` and `free(v14, v16)` are given.
           3. Images of objectives v17, v18, v19, and v20 to be received. This means taking an image and sending it to the lander.
           4. Rock analysis to be received for rocks of type `v2` (stone) and `v6` (soil). Rocks of type `v2` are v1, v3, v4. Rocks of type `v6` are v5, v7, v8. This means sampling rocks of these types and sending the analysis.
           
           Let's break down the goal:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` where `type(?stone, v2)` (v1, v3, v4)
           - `receivedanalysis(?soil)` where `type(?soil, v6)` (v5, v7, v8)
           
           To achieve the image goals, we need to:
           1. Calibrate a camera.
           2. Take an image of the objective.
           3. Send the image.
           
           To achieve the analysis goals, we need to:
           1. Move the rover above a rock.
           2. Sample the rock.
           3. Send the analysis.
           
           We will try to use rover v12 for most of the tasks since it has more direct visibility to objectives and rocks from various configurations.
           
           For images:
           - v20: `imagevisible(v12, #q1, #y0, v20)`
           - v17: `imagevisible(v12, #q4, #y2, v17)`
           - v19: `imagevisible(v12, #q8, #y3, v19)`
           - v18: `imagevisible(v12, #q10, #y4, v18)`
           
           For rock analysis:
           - Rocks of type `v2` (stone): v1, v3, v4.
               - v4: `above(v12, #q3, v4)`
               - v3: `above(v12, #q9, v3)`
               - v1: `above(v12, #q7, v1)`
           - Rocks of type `v6` (soil): v5, v7, v8.
               - v8: `above(v12, #q0, v8)`
               - v7: `above(v12, #q6, v7)`
               - v5: `above(v12, #q5, v5)`
           
           We need to make sure we don't pick the same type of rock more than once if not needed. The axiom states `receivedanalysis(?stone)` and `receivedanalysis(?soil)`, implying at least one of each type. We have 3 of each type, we only need to analyze one of each.
           
           We will start with rover v12 since it is at `v13` and has several direct actions from this or nearby configurations.
           The rover v12 is at `v13`.
           
           Plan:
           1. Move v12 to #q1 (to image v20).
           2. Calibrate the camera v10 for v20 at #q1.
           3. Take image of v20 at #q1.
           4. Move v12 to #q2 (for communication).
           5. Send image of v20.
           6. Move v12 to #q4 (to image v17).
           7. Calibrate the camera v10 for v17 at #q4.
           8. Take image of v17 at #q4.
           9. Move v12 to #q2 (for communication).
           10. Send image of v17.
           11. Move v12 to #q8 (to image v19).
           12. Calibrate the camera v10 for v19 at #q8.
           13. Take image of v19 at #q8.
           14. Move v12 to #q2 (for communication).
           15. Send image of v19.
           16. Move v12 to #q10 (to image v18).
           17. Calibrate the camera v10 for v18 at #q10.
           18. Take image of v18 at #q10.
           19. Move v12 to #q2 (for communication).
           20. Send image of v18.
           
           Now for rock analysis:
           We need one rock of type v2 (stone) and one of type v6 (soil).
           Let's choose v4 (type v2, stone) and v8 (type v6, soil).
           21. Move v12 to #q3 (to sample v4).
           22. Sample rock v4.
           23. Move v12 to #q2 (for communication).
           24. Send analysis of v4.
           25. Move v12 to #q0 (to sample v8).
           26. Sample rock v8.
           27. Move v12 to #q2 (for communication).
           28. Send analysis of v8.
           
           This should fulfill all the requirements of the goal.
           
           --Plan--:
           (move v12 v13 #t3 #q1)
           (calibrate v12 #q1 #y0 v20 v10)
           (take_image v12 #q1 #y0 v20 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v20 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q8)
           (calibrate v12 #q8 #y3 v19 v10)
           (take_image v12 #q8 #y3 v19 v10 v11)
           (move v12 #q8 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #o2 #q10)
           (calibrate v12 #q10 #y4 v18 v10)
           (take_image v12 #q10 #y4 v18 v10 v11)
           (move v12 #q10 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t6 #q3)
           (sample_rock v12 #q3 v4 v16)
           (move v12 #q3 #t2 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (move v12 #q2 #t5 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t1 #q2)
           (send_analysis v12 #q2 #y1 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the axiom `new-axiom@0()` was not satisfied. This means that at the end of the plan, all the individual conditions within the axiom were not met. Let's re-evaluate the conditions for `new-axiom@0()`:
           
           1.  `atconf(v12, v13)`: Rover v12 needs to be at configuration v13.
           2.  `atconf(v14, v15)`: Rover v14 needs to be at configuration v15.
           3.  `free(v12, v16)`: Rover v12's store v16 needs to be free.
           4.  `free(v14, v16)`: Rover v14's store v16 needs to be free.
           5.  `receivedimage(v17, v11)`: Image of objective v17 needs to be received.
           6.  `receivedimage(v18, v11)`: Image of objective v18 needs to be received.
           7.  `receivedimage(v19, v11)`: Image of objective v19 needs to be received.
           8.  `receivedimage(v20, v11)`: Image of objective v20 needs to be received.
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type `v2` (stone, i.e., v1, v3, v4) needs to be analyzed and received.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type `v6` (soil, i.e., v5, v7, v8) needs to be analyzed and received.
           
           Initial State Check:
           - `atconf(v12, v13)`: True
           - `atconf(v14, v15)`: True
           - `free(v12, v16)`: True
           - `free(v14, v16)`: True
           
           The problem with the previous plan was that after sampling rocks, the stores `v16` for rover `v12` would become `full`. The axiom requires the stores to be `free`. To rectify this, after sampling and sending analysis for a rock, the rover must `drop_rock` to make the store free again, *before* the end of the plan.
           
           Revised Plan Strategy:
           For each analysis required:
           1. Move to the rock.
           2. Sample the rock.
           3. Move to a communication point.
           4. Send the analysis.
           5. Drop the rock to free the store.
           
           For images:
           1. Move to the objective.
           2. Calibrate camera.
           3. Take image.
           4. Move to a communication point.
           5. Send image.
           
           Let's use rover v12 for all tasks as it seems to have good access to all required points.
           We need to analyze one rock of type v2 (stone, e.g., v4) and one of type v6 (soil, e.g., v8).
           We need to get images for v17, v18, v19, v20.
           
           The order will be important. We'll do all image tasks first, then rock analysis tasks, ensuring the store is free at the end.
           
           --Plan--:
           (move v12 v13 #t3 #q1)
           (calibrate v12 #q1 #y0 v20 v10)
           (take_image v12 #q1 #y0 v20 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v20 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q8)
           (calibrate v12 #q8 #y3 v19 v10)
           (take_image v12 #q8 #y3 v19 v10 v11)
           (move v12 #q8 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #o2 #q10)
           (calibrate v12 #q10 #y4 v18 v10)
           (take_image v12 #q10 #y4 v18 v10 v11)
           (move v12 #q10 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t6 #q3)
           (sample_rock v12 #q3 v4 v16)
           (move v12 #q3 #t2 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t5 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t1 #q2)
           (send_analysis v12 #q2 #y1 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan, despite attempting to address the `free` store condition, still failed to satisfy `new-axiom@0()`. This typically indicates that not all sub-goals of the axiom were met, or that a precondition was violated. Let's re-examine the `new-axiom@0()` conditions carefully and trace the state changes.
           
           The axiom `new-axiom@0()` requires:
           1.  `atconf(v12, v13)`: Rover v12 needs to be at configuration v13.
           2.  `atconf(v14, v15)`: Rover v14 needs to be at configuration v15.
           3.  `free(v12, v16)`: Rover v12's store v16 needs to be free.
           4.  `free(v14, v16)`: Rover v14's store v16 needs to be free.
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `receivedimage(v20, v11)`
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)` (e.g., v1, v3, or v4)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (e.g., v5, v7, or v8)
           
           My previous plan used rover v12 for all tasks and ended with `drop_rock v12 v16`, making `free(v12, v16)` true. Rover v14 was not used, so `atconf(v14, v15)` and `free(v14, v16)` remain true from the initial state. The image and analysis goals were targeted.
           
           A possible issue could be with the `atconf` requirements at the *very end* of the plan. The axiom states `atconf(v12, v13)` and `atconf(v14, v15)`. My previous plan ended with rover v12 at configuration `#q2`. To satisfy `atconf(v12, v13)`, rover v12 needs to be moved back to `v13` at the very end of the plan.
           
           Let's modify the end of the plan to move `v12` back to `v13`.
           
           --Plan--:
           (move v12 v13 #t3 #q1)
           (calibrate v12 #q1 #y0 v20 v10)
           (take_image v12 #q1 #y0 v20 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v20 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q8)
           (calibrate v12 #q8 #y3 v19 v10)
           (take_image v12 #q8 #y3 v19 v10 v11)
           (move v12 #q8 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #o2 #q10)
           (calibrate v12 #q10 #y4 v18 v10)
           (take_image v12 #q10 #y4 v18 v10 v11)
           (move v12 #q10 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t6 #q3)
           (sample_rock v12 #q3 v4 v16)
           (move v12 #q3 #t2 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t5 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t1 #q2)
           (send_analysis v12 #q2 #y1 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q2 #t4 v13)

