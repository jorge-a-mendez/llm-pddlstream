User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom rock(v1)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v1)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6), and objectives (v17, v18, v19, v20). There is also a lander (v9) for communication. Both rovers are currently at a specific configuration (v13 for v12, v15 for v14) and are free to store samples.
           
           The goal `new-axiom@0()` is an axiom that evaluates to true if several conditions are met, which are:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is already true.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers' stores are free. This is already true.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives (v17, v18, v19, v20) must be received in mode v11. This requires taking images and sending them.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type v2 must be analyzed and the analysis received. Rocks v1, v3, v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type v6 must be analyzed and the analysis received. Rocks v5, v7, v8 are of type v6.
           
           Since the goal is an axiom, and the initial state already satisfies the `atconf` and `free` predicates within the axiom, the primary tasks are to obtain and send images for all objectives and analyze and send analysis for at least one rock of type v2 and one rock of type v6.
           
           Let's break down the required steps:
           
           For images:
           - Calibrate the camera (v10) on either rover (v12 or v14) for any objective.
           - Take images of v17, v18, v19, v20 using v10 on either rover.
           - Send these images to the lander (v9).
           
           For rock analysis:
           - Sample a rock of type v2 (e.g., v4) using either rover (v12 or v14).
           - Send the analysis of this rock to the lander (v9).
           - Sample a rock of type v6 (e.g., v7) using either rover (v12 or v14).
           - Send the analysis of this rock to the lander (v9).
           
           The available actions are only `move` and `drop_rock`. This means the robot cannot take images, calibrate cameras, send images, sample rocks, or send analysis. Therefore, the goal is unreachable with the given allowed actions.
           
           The goal `new-axiom@0()` depends on a series of actions that are not available in the provided list of valid action instances. Specifically, there are no `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` actions available. Without these actions, the rover cannot achieve the `receivedimage` and `receivedanalysis` predicates required for the axiom to become true. Therefore, the goal is unreachable.

