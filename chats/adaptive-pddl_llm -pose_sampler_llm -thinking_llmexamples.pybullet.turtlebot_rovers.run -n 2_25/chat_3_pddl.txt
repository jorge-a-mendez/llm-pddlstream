User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom type(v7, v6)
           Atom objective(v18)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom rover(v12)
           Atom rock(v3)
           Atom rock(v5)
           Atom mode(v11)
           Atom rock(v4)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #t8, #q6)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #t7, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, v15, #t3, #q0)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v12, #q3, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t6, #q4)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t5, v13)
           Atom motion(v12, #q4, #t2, #q2)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q7, #t12, #q1)
           Atom motion(v14, #q1, #t4, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t13, #q7)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q6, #t9, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #t10, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, v13, #t11, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #t5 v13))
           ((move v12 #q2 #t6 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q5))
           ((move v12 v13 #t7 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #t13 #q7))
           ((move v14 #q1 #t4 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t9 #q1))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q0))
           ((move v14 v15 #t8 #q6))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Fulfilling the Axiom: A Detailed Plan**
           
           Alright, here's the game plan to achieve the goal `new-axiom@0()` (remembering that each instance is identical, so we're just tackling one). This is how I'm thinking about it:
           
           First, let's break down that axiom.  It boils down to this: *both* rovers need to be in their initial positions, their stores empty, images received, and analyses completed for specific stone and soil samples.  Simple enough, but it requires a structured approach.
           
           **Initial Considerations:**
           *   **Rovers:** We're dealing with two rovers, `v12` and `v14`, both equipped with a camera (`v10`).  They need to move, calibrate, sample, image, analyze, send, and then get back to their starting spots.
           *   **Objects:** `v1`, `v3`, and `v4` are stones, and `v5`, `v7`, and `v8` are soils.  We need to analyze one stone and one soil.
           *   **Communication:**  A lander (`v9`) is the recipient for both analyses and images.
           
           **My Plan - A Step-by-Step Breakdown:**
           
           1.  **Rover `v14` (Stone & Image `v17`):**
               *   **Phase 1: Sampling & Analysis**
                   *   Move `v14` to `#o5` (where the stone is) because `above(v14, #o5, v1)`.
                   *   Sample the stone (`v1`) - now we have analyzed it (`analyzed(v14, v1)`) and it's *full*.
                   *   Move `v14` to `#q1` to be able to communicate
                   *   Send the analysis of `v1` to the lander. Now, the condition `receivedanalysis(v1)` is met.
                   *   Drop rock! - We need an empty rover at the end, so let's empty it.
               *   **Phase 2: Image Acquisition and Transmission**
                   *   Move `v14` to `#o3` (to take a photo of objective `v17` where `imagevisible(v14, #o3, #o4, v17)`)
                   *   Calibrate the camera (`v10`) on `v14`
                   *   Take an image of `v17`.  We *now* have `haveimage(v14, v17, v11)`.
                   *   Move back to `#q1`
                   *   Send the image of `v17`.  This sets `receivedimage(v17, v11)`.
               *   **Phase 3: Return to Initial**
                   *   Move `v14` back to its initial configuration.
           2.  **Rover `v12` (Soil & Image `v18`):**
               *   **Phase 1: Sampling & Analysis**
                   *   Move `v12` to `#o5` (where the soil is) - `above(v12, #o5, v5)`.
                   *   Sample the soil (`v5`) - `analyzed(v12, v5)` & is full.
                   *   Move `v12` to `#q2` for communication.
                   *   Send analysis of `v5` - `receivedanalysis(v5)` is true now.
                   *   Drop the rock.
               *   **Phase 2: Image Acquisition and Transmission**
                   *   Move `v12` to `#q3` (where `imagevisible(v12, #q3, #y2, v18)`)
                   *   Calibrate `v10` on `v12`.
                   *   Take image of `v18`. We now have `haveimage(v12, v18, v11)`.
                   *   Move back to `#q2`
                   *   Send the image. That satisfies `receivedimage(v18, v11)`.
               *   **Phase 3: Return to Initial**
                   *   Move `v12` back to its initial configuration.
           
           **Final Thoughts and Key Points:**
           
           *   **Order is Key:** The movements and actions *must* be sequenced to ensure the preconditions for each action are met.
           *   **Returning Roams:** Ensuring both rovers return to their initial configurations *and* are empty is crucial to satisfy the axiom completely. Otherwise, it is going to
)

Model:     **Fulfilling the Axiom: A Detailed Plan**
           
           Alright, here's the game plan to achieve the goal `new-axiom@0()` (remembering that each instance is identical, so we're just tackling one). This is how I'm thinking about it:
           
           First, let's break down that axiom.  It boils down to this: *both* rovers need to be in their initial positions, their stores empty, images received, and analyses completed for specific stone and soil samples.  Simple enough, but it requires a structured approach.
           
           **Initial Considerations:**
           *   **Rovers:** We're dealing with two rovers, `v12` and `v14`, both equipped with a camera (`v10`).  They need to move, calibrate, sample, image, analyze, send, and then get back to their starting spots.
           *   **Objects:** `v1`, `v3`, and `v4` are stones, and `v5`, `v7`, and `v8` are soils.  We need to analyze one stone and one soil.
           *   **Communication:**  A lander (`v9`) is the recipient for both analyses and images.
           
           **My Plan - A Step-by-Step Breakdown:**
           
           1.  **Rover `v14` (Stone & Image `v17`):**
               *   **Phase 1: Sampling & Analysis**
                   *   Move `v14` to `#o5` (where the stone is) because `above(v14, #o5, v1)`.
                   *   Sample the stone (`v1`) - now we have analyzed it (`analyzed(v14, v1)`) and it's *full*.
                   *   Move `v14` to `#q1` to be able to communicate
                   *   Send the analysis of `v1` to the lander. Now, the condition `receivedanalysis(v1)` is met.
                   *   Drop rock! - We need an empty rover at the end, so let's empty it.
               *   **Phase 2: Image Acquisition and Transmission**
                   *   Move `v14` to `#o3` (to take a photo of objective `v17` where `imagevisible(v14, #o3, #o4, v17)`)
                   *   Calibrate the camera (`v10`) on `v14`
                   *   Take an image of `v17`.  We *now* have `haveimage(v14, v17, v11)`.
                   *   Move back to `#q1`
                   *   Send the image of `v17`.  This sets `receivedimage(v17, v11)`.
               *   **Phase 3: Return to Initial**
                   *   Move `v14` back to its initial configuration.
           2.  **Rover `v12` (Soil & Image `v18`):**
               *   **Phase 1: Sampling & Analysis**
                   *   Move `v12` to `#o5` (where the soil is) - `above(v12, #o5, v5)`.
                   *   Sample the soil (`v5`) - `analyzed(v12, v5)` & is full.
                   *   Move `v12` to `#q2` for communication.
                   *   Send analysis of `v5` - `receivedanalysis(v5)` is true now.
                   *   Drop the rock.
               *   **Phase 2: Image Acquisition and Transmission**
                   *   Move `v12` to `#q3` (where `imagevisible(v12, #q3, #y2, v18)`)
                   *   Calibrate `v10` on `v12`.
                   *   Take image of `v18`. We now have `haveimage(v12, v18, v11)`.
                   *   Move back to `#q2`
                   *   Send the image. That satisfies `receivedimage(v18, v11)`.
               *   **Phase 3: Return to Initial**
                   *   Move `v12` back to its initial configuration.
           
           **Final Thoughts and Key Points:**
           
           *   **Order is Key:** The movements and actions *must* be sequenced to ensure the preconditions for each action are met.
           *   **Returning Roams:** Ensuring both rovers return to their initial configurations *and* are empty is crucial to satisfy the axiom completely. Otherwise, it is going to

