User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom store(v16)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom objective(v18)
           Atom camera(v10)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom rock(v7)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q9, #y7, v20)
           Atom imagerange(v12, #q9, v20)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #q13, #y8, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom imagevisible(v14, #q1, #y1, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v5)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q14, #y9, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y9)
           Atom above(v14, #q2, v8)
           Atom conf(v14, #q2)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q8, #y6, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t10, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t23, #q3)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, v13, #t5, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, #q4, #t11, v13)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q9, #t13, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q8, #t12, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #t1, #q4)
           Atom motion(v12, #q5, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t30, #q14)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #t26, #q7)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t9, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q7, #t27, #q1)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q1, #t3, #q0)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t7, v15)
           Atom motion(v14, #q13, #t31, #q1)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q13, #t25, #q7)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, v15, #t29, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q7, #t32, #q13)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #t22, #q0)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q0, #t15, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, v15, #t17, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q0, #t14, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #t16, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #t21, #q0)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q3, #t24, #q12)
           Atom motion(v12, #q12, #t28, #q4)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #t8, #q0)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q0, #t0, #q2)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #t6, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #t18, #q8)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q5, #t20, #q6)
           Atom motion(v12, #q6, #t19, #q9)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q11)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q2 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t28 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q4))
           ((move v12 #q3 #t24 #q12))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t11 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t20 #q6))
           ((move v12 #q5 #t4 #q4))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t18 #q8))
           ((move v12 #q6 #t19 #q9))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t12 #q4))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t13 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t23 #q3))
           ((move v12 v13 #t5 #q5))
           ((move v12 v13 #t6 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 #q2))
           ((move v14 #q0 #t14 #q10))
           ((move v14 #q0 #t15 #q11))
           ((move v14 #q0 #t7 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q0))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t21 #q0))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t22 #q0))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t25 #q7))
           ((move v14 #q13 #t31 #q1))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t26 #q7))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t8 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t27 #q1))
           ((move v14 #q7 #t32 #q13))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q7))
           ((move v14 v15 #t16 #q10))
           ((move v14 v15 #t17 #q11))
           ((move v14 v15 #t29 #q13))
           ((move v14 v15 #t30 #q14))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q8 #y6 v18 v10))
           ((calibrate v12 #q9 #y7 v20 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q13 #y8 v19 v10))
           ((calibrate v14 #q14 #y9 v17 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q8 #y6 v18 v10 v11))
           ((take_image v12 #q9 #y7 v20 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q13 #y8 v19 v10 v11))
           ((take_image v14 #q14 #y9 v17 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so the goal is `new-axiom@0()`, right?  That means getting those images and analyses.  Let's break this down.  First, the initial state checks are easy. We're good there. The real work is in the `receivedimage` and `receivedanalysis` predicates.
           
           For the images, I need to use `send_image`. This requires getting the images with `take_image` and, crucially, calibrating the camera beforehand with `calibrate`. Since I have two rovers, v12 and v14, let's divide the work. Each needs to move to image-visible configurations, calibrate the camera, take pictures, and then move to a comms location to send them off to the lander, v9.  The camera, v10, needs to be calibrated for each rover, v12, and v14, which are at locations #q5, #q8, #q13, and #q1, respectively. Then, the comm location is at #q4 for v12 and #q0 for v14.
           
           For `v12`, I need to take images of objects v17 and v18. I'll have v12 take images and send them from #q4.
           
           For `v14`, I'll do the same. This way, the tasks are separated. `v14` needs to handle the images for `v19` and `v20`.
           
           The plan goes like this for **v12**:
           
           1.  **Move** from initial position `v13` to image configuration `#q5`.
           2.  **Calibrate** the camera (`v10`) for v17.
           3.  **Take** the image of `v17`.
           4.  **Move** to image configuration `#q8`.
           5.  **Calibrate** the camera (`v10`) for v18.
           6.  **Take** the image of `v18`.
           7.  **Move** to sample location `#q3`.
           8.  **Sample** rock `v1`.
           9.  **Drop** rock `v16`.
           10. **Move** to comm location `#q4`.
           11. **Send** both images.
           12. **Send** the analysis of `v1`.
           13. **Return** to the initial position `v13`.
           
           For **v14**:
           1.  **Move** from initial position `v15` to image configuration `#q13`.
           2.  **Calibrate** the camera (`v10`) for `v19`.
           3.  **Take** the image of `v19`.
           4.  **Move** to image configuration `#q1`.
           5.  **Calibrate** the camera (`v10`) for `v20`.
           6.  **Take** the image of `v20`.
           7. **Move** to sample location `#q2`.
           8.  **Sample** rock `v8`.
           9.  **Drop** rock `v16`.
           10. **Move** to comm location `#q0`.
           11. **Send** both images.
           12. **Send** the analysis of `v8`.
           13. **Return** to the initial position `v15`.
           
           The trick here is to make sure the rovers get back to their starting spots and that the camera is calibrated when needed. The two actions of `sample_rock` are very similar, with different rock and position inputs.
           
           Let me make it really clear I'll need `drop_rock` after `sample_rock`.
           And the goal is now achieved.
           
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so the goal is `new-axiom@0()`, right?  That means getting those images and analyses.  Let's break this down.  First, the initial state checks are easy. We're good there. The real work is in the `receivedimage` and `receivedanalysis` predicates.
           
           For the images, I need to use `send_image`. This requires getting the images with `take_image` and, crucially, calibrating the camera beforehand with `calibrate`. Since I have two rovers, v12 and v14, let's divide the work. Each needs to move to image-visible configurations, calibrate the camera, take pictures, and then move to a comms location to send them off to the lander, v9.  The camera, v10, needs to be calibrated for each rover, v12, and v14, which are at locations #q5, #q8, #q13, and #q1, respectively. Then, the comm location is at #q4 for v12 and #q0 for v14.
           
           For `v12`, I need to take images of objects v17 and v18. I'll have v12 take images and send them from #q4.
           
           For `v14`, I'll do the same. This way, the tasks are separated. `v14` needs to handle the images for `v19` and `v20`.
           
           The plan goes like this for **v12**:
           
           1.  **Move** from initial position `v13` to image configuration `#q5`.
           2.  **Calibrate** the camera (`v10`) for v17.
           3.  **Take** the image of `v17`.
           4.  **Move** to image configuration `#q8`.
           5.  **Calibrate** the camera (`v10`) for v18.
           6.  **Take** the image of `v18`.
           7.  **Move** to sample location `#q3`.
           8.  **Sample** rock `v1`.
           9.  **Drop** rock `v16`.
           10. **Move** to comm location `#q4`.
           11. **Send** both images.
           12. **Send** the analysis of `v1`.
           13. **Return** to the initial position `v13`.
           
           For **v14**:
           1.  **Move** from initial position `v15` to image configuration `#q13`.
           2.  **Calibrate** the camera (`v10`) for `v19`.
           3.  **Take** the image of `v19`.
           4.  **Move** to image configuration `#q1`.
           5.  **Calibrate** the camera (`v10`) for `v20`.
           6.  **Take** the image of `v20`.
           7. **Move** to sample location `#q2`.
           8.  **Sample** rock `v8`.
           9.  **Drop** rock `v16`.
           10. **Move** to comm location `#q0`.
           11. **Send** both images.
           12. **Send** the analysis of `v8`.
           13. **Return** to the initial position `v15`.
           
           The trick here is to make sure the rovers get back to their starting spots and that the camera is calibrated when needed. The two actions of `sample_rock` are very similar, with different rock and position inputs.
           
           Let me make it really clear I'll need `drop_rock` after `sample_rock`.
           And the goal is now achieved.
           

