User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v6: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom arm(v6)
           Atom handempty(v6)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g1, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v12, #p1, #g1, #q3, #t7)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t7))
           ((place v4 v12 #p1 #g1 #q3 #t7))
           ((pick v4 v12 v13 #g1 #q2 #t5))
           ((place v4 v12 v13 #g1 #q2 #t5))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know `type(v12, v17)` and `stackable(v12, v18)`.
           We need to achieve `on(v12, v18)`. From the axiom, `on(?o, ?r)` is true if `supported(?o, ?p, ?r)` and `atpose(?o, ?p)` are true. We have `supported(v12, #p1, v18)`. So, we need to achieve `atpose(v12, #p1)`.
           
           Currently, `v12` is at `v13` (`atpose(v12, v13)`). The robot arm `v4` is empty (`handempty(v4)`). The robot base is at `v3` (`atbconf(v3)`).
           
           To move `v12` from `v13` to `#p1`, we need to pick it up from `v13` and place it at `#p1`.
           
           1. **Pick v12 from v13:**
              - We need to find a `pick` action for `v4`, `v12`, `v13`, and a grasp. We have `kin(v4, v12, v13, #g1, #q2, #t5)`.
              - The `pick` action is `(pick v4 v12 v13 #g1 #q2 #t5)`.
              - Preconditions:
                - `kin(v4, v12, v13, #g1, #q2, #t5)`: True in initial state.
                - `atpose(v12, v13)`: True in initial state.
                - `handempty(v4)`: True in initial state.
                - `atbconf(#q2)`: False. Current `atbconf(v3)`. We need to move the base.
                - `NegatedAtom unsafeapproach(v12, v13, #g1)`: Assume false for now as no information is given.
                - `NegatedAtom unsafeatraj(#t5)`: Assume false for now as no information is given.
           
           2. **Move base to #q2:**
              - We need to find a `move_base` action from `v3` to `#q2`. We have `basemotion(v3, #t6, #q2)`.
              - The `move_base` action is `(move_base v3 #q2 #t6)`.
              - Preconditions:
                - `basemotion(v3, #t6, #q2)`: True in initial state.
                - `atbconf(v3)`: True in initial state.
                - `canmove()`: True in initial state.
           
           3. **Place v12 at #p1:**
              - After picking, `v4` will be holding `v12`. We need to place it at `#p1`.
              - We need a `place` action for `v4`, `v12`, `#p1`, and a grasp. We have `kin(v4, v12, #p1, #g1, #q3, #t7)`.
              - The `place` action is `(place v4 v12 #p1 #g1 #q3 #t7)`.
              - Preconditions:
                - `kin(v4, v12, #p1, #g1, #q3, #t7)`: True in initial state.
                - `atgrasp(v4, v12, #g1)`: True after `pick`.
                - `atbconf(#q3)`: False. Current `atbconf(#q2)`. We need to move the base.
                - `NegatedAtom unsafepose(v12, #p1)`: Assume false.
                - `NegatedAtom unsafeapproach(v12, #p1, #g1)`: Assume false.
                - `NegatedAtom unsafeatraj(#t7)`: Assume false.
           
           4. **Move base to #q3:**
              - We need to find a `move_base` action from `#q2` to `#q3`. We have `basemotion(#q2, #o0, #q3)`.
              - The `move_base` action is `(move_base #q2 #q3 #o0)`.
              - Preconditions:
                - `basemotion(#q2, #o0, #q3)`: True in initial state.
                - `atbconf(#q2)`: True after previous `move_base` and `pick`.
                - `canmove()`: True after `pick`.
           
           The final state after these actions will have `atpose(v12, #p1)`, which along with `supported(v12, #p1, v18)` will satisfy `on(v12, v18)`. Since `type(v12, v17)` is already true, the goal `new-axiom@0()` will be satisfied.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v12 v13 #g1 #q2 #t5)
           (move_base #q2 #q3 #o0)
           (place v4 v12 #p1 #g1 #q3 #t7)

