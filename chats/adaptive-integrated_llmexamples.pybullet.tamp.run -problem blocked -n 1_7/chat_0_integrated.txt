User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.325, -0.162), (-4.227, -0.063)).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-4.276, -0.113, 0.801) and quaternion (0.0, 0.0, -0.345, 0.939).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v15, v10)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom supported(v15, v16, v11)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom ataconf(v4, v5)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom arm(v6)
           Atom stackable(v12, v18)
           Atom graspable(v15)
           Atom handempty(v6)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom atpose(v8, v9)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom pose(v15, v16)
           Atom type(v12, v17)
           Atom canmove()
           Atom stackable(v8, v18)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom bconf(v3)
           Atom atpose(v15, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The initial state shows several objects (v8, v12, v15) and their poses (v9, v13, v16), as well as their support surfaces (v11, v14). The robot has two arms (v4, v6) and their configurations (v5, v7), and is at a base configuration (v3). Both arms are handempty. The goal `new-axiom@0()` can be achieved if `on(green, v18)` and `type(green, v17)` are true. From the initial state, we have `type(v8, v17)` and `type(v12, v17)`. Thus, we need to place either `v8` or `v12` on `v18`. Since v18 is an AABB from (4.2, -0.6) to (4.8, 0.0), it represents a surface.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action doesn't change the state in a way that helps achieve the goal (it moves the base from v3 to v3, which is a null move). There are no pick, place, clean or cook actions available. Therefore, the goal is not achievable with the given action instances.

