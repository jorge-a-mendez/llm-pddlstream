User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom objective(v18)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom objective(v19)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q16, #y9, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v14, #q15, #y8, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom above(v14, #q11, v8)
           Atom conf(v14, #q11)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q12, #y6, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q17, v8)
           Atom conf(v12, #q17)
           Atom above(v12, #q18, v5)
           Atom conf(v12, #q18)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q2, v4)
           Atom conf(v12, #q2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q10, v1)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q14, #y7, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom above(v14, #q1, v7)
           Atom conf(v14, #q1)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t30, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v12, v13, #t18, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, v15, #t29, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, v15, #t42, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q16, #t43, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q15, #t27, #q3)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t2, #q1)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #t21, v15)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q1, #t3, #q3)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q14, #t26, #q3)
           Atom motion(v12, #q13, #t23, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q0, #t22, #q13)
           Atom motion(v12, #q5, #t11, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t5, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q12, #t25, #q3)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, #q2, #t44, #q13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t14, #q0)
           Atom motion(v12, #q5, #t41, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #t24, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #t13, #q0)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q0, #t7, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t45, #q2)
           Atom motion(v12, #q6, #t38, #q5)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, v13, #t19, #q6)
           Atom motion(v12, #q6, #t33, #q7)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q0, #t6, #q6)
           Atom motion(v12, #q7, #t36, #q6)
           Atom motion(v12, #q5, #t32, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #t10, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t40, #q7)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q0, #t4, #q4)
           Atom motion(v12, v13, #t17, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #t34, #q5)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #t16, #q0)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q18, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v12, #q2, #t39, #q18)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q18, #t37, #q0)
           Atom motion(v12, #q4, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q2)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q18, #o2, #q7)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q18)
           Atom motion(v12, #q7, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, #q4, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q4)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q17, #t31, #q0)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q8, #o2, #q18)
           Atom motion(v12, #q0, #t9, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #t35, #q17)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q18, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #t15, #q0)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q17 v8 v16))
           ((sample_rock v12 #q18 v5 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q1 v7 v16))
           ((sample_rock v14 #q11 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t22 #q13))
           ((move v12 #q0 #t4 #q4))
           ((move v12 #q0 #t5 #q5))
           ((move v12 #q0 #t6 #q6))
           ((move v12 #q0 #t7 #q7))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q0 #t9 #q8))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q18))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q0))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q4))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q7))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t31 #q0))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q13))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q2))
           ((move v12 #q18 #o2 #q4))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 #q7))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t37 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t14 #q0))
           ((move v12 #q2 #t39 #q18))
           ((move v12 #q2 #t44 #q13))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q17))
           ((move v12 #q4 #o2 #q18))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q0))
           ((move v12 #q4 #t34 #q5))
           ((move v12 #q4 #t40 #q7))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q0))
           ((move v12 #q5 #t32 #q6))
           ((move v12 #q5 #t41 #q2))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q6 #t33 #q7))
           ((move v12 #q6 #t38 #q5))
           ((move v12 #q6 #t45 #q2))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q17))
           ((move v12 #q7 #o2 #q18))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q0))
           ((move v12 #q7 #t36 #q6))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q18))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q0))
           ((move v12 #q8 #t35 #q17))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q4))
           ((move v12 v13 #t18 #q5))
           ((move v12 v13 #t19 #q6))
           ((move v12 v13 #t20 #q7))
           ((move v12 v13 #t24 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t25 #q3))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t26 #q3))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t27 #q3))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t43 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #t2 #q1))
           ((move v14 #q3 #t21 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t29 #q14))
           ((move v14 v15 #t30 #q15))
           ((move v14 v15 #t42 #q16))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v14 #q12 #y6 v17 v10))
           ((calibrate v14 #q14 #y7 v20 v10))
           ((calibrate v14 #q15 #y8 v19 v10))
           ((calibrate v14 #q16 #y9 v18 v10))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v14 #q12 #y6 v17 v10 v11))
           ((take_image v14 #q14 #y7 v20 v10 v11))
           ((take_image v14 #q15 #y8 v19 v10 v11))
           ((take_image v14 #q16 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v20 v11))
           ((send_image v14 #q3 #y1 v9 v19 v11))
           ((send_image v14 #q3 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     This scene contains two rovers, v12 and v14, equipped with a camera v10 that supports mode v11. They also each have a store v16 for samples. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20) to interact with, and a lander v9 to communicate with. The rovers are initially at configurations v13 and v15, respectively. The goal is to receive images for all objectives (v17, v18, v19, v20) in mode v11, and to analyze rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           
           To achieve the goal, both rovers need to:
           1. Calibrate their camera.
           2. Take images of the objectives.
           3. Send the images to the lander.
           4. Sample rocks of both types.
           5. Send the analysis of the sampled rocks to the lander.
           
           Let's break down the tasks for each rover to avoid unnecessary movement and ensure all preconditions are met.
           
           Rover v12 is currently at v13. It has visibility to objectives v17, v18, v19, v20 and can sample rocks v1, v3, v4, v5, v7, v8. It can also communicate with the lander v9 from configuration #q0.
           
           Rover v14 is currently at v15. It has visibility to objectives v17, v18, v19, v20 and can sample rocks v1, v3, v4, v5, v7, v8. It can also communicate with the lander v9 from configuration #q3.
           
           We will have rover v12 handle objectives v17, v18, v19, v20, and sample rocks v1, v3, v4 (type v2) and v5, v7, v8 (type v6). We will use rover v14 as a backup if v12's store becomes full or to send additional analyses. However, given that both rovers are free (v12, v16) and (v14, v16), and each rock is only sampled once, one rover is sufficient for all sampling. We'll use v12 for all sampling and v12 for image capturing and sending.
           
           First, v12 will calibrate its camera, take images of all objectives and send them. Then, v12 will move to the rock locations to sample the rocks and send the analysis.
           
           --Plan--:
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #t40 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #t36 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t38 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t8 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #t44 #q13)
           (sample_rock v12 #q13 v7 v16)
           (drop_rock v12 v16) ; Drop to free space for the next samples
           (move v12 #q13 #o2 #q10)
           (sample_rock v12 #q10 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q10 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #t15 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v7)
           (send_analysis v12 #q0 #y0 v9 v1)
           (send_analysis v12 #q0 #y0 v9 v5)
           (send_analysis v12 #q0 #y0 v9 v8)
           (send_analysis v12 #q0 #y0 v9 v3)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This goal implies several conditions:
           1. `receivedimage` for all objectives (v17, v18, v19, v20) in mode v11.
           2. `receivedanalysis` for rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           3. `atconf` and `free` predicates for the rovers and their stores.
           
           My previous plan attempted to address these. Let's re-evaluate the steps and ensure all `receivedanalysis` and `receivedimage` predicates are met and that the `free` and `full` states of the store are correctly managed, especially after sampling. The `new-axiom@0()` also requires `atconf` and `free` to be true for both rovers and their stores at the end of the plan. Since we are using only `v12` for sampling, the `free(v14, v16)` will remain true, and we need to ensure `free(v12, v16)` is also true at the end. This means any sampled rock must eventually be dropped, or `drop_rock` action should be used if the store is full.
           
           Let's use rover v12 for all image tasks and all sampling tasks.
           
           Here's a revised plan:
           1. Rover v12 calibrates for each objective, takes an image, and then sends all images.
           2. Rover v12 then moves to each rock, samples it, and sends the analysis. It is crucial to manage the store: if the store becomes full after sampling a rock, that rock must be dropped before another rock can be sampled. The store `v16` becomes `full` after `sample_rock`. To sample another rock, `drop_rock` must be used to make `v16` `free` again. Since the goal requires `receivedanalysis` for *all* target rocks, and not for specific samples *in* the store, dropping them after analysis is perfectly fine and necessary to free up space. At the end, both `free(v12, v16)` and `free(v14, v16)` must be true, which is consistent with the initial state and the requirement that `v12` drops its last sampled rock.
           
           --Plan--:
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #t40 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #t36 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t38 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t8 #q2)
           (sample_rock v12 #q2 v4 v16)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t44 #q13)
           (sample_rock v12 #q13 v7 v16)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q13 #o2 #q10)
           (sample_rock v12 #q10 v1 v16)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q10 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q4) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because the rover `v12` was not at `#q4` before attempting to calibrate. I need to ensure that `atconf(v12, current_config)` is always true before any action that requires a specific configuration.
           
           Let's carefully construct the plan, ensuring each `move` action correctly places the rover at the required configuration before the subsequent action.
           
           The initial state shows `atconf(v12, v13)`. All initial `calibrate` and `take_image` actions were attempting to happen at `#q4`, `#q7`, `#q6`, and `#q5`. So, `v12` needs to move from `v13` to each of these locations. Then, `v12` needs to move to `#q0` to `send_image` and `send_analysis` actions. After that, `v12` moves to the locations where the rocks are (e.g., `#q2`, `#q13`, etc.) to `sample_rock`.
           
           Let's refine the plan:
           
           1.  **Move to first image location and take image:** Rover `v12` needs to move from its initial `v13` to `#q4` to image `v17`.
           2.  **Calibrate and take image:** Calibrate and take the image of `v17`.
           3.  **Move to next image location and take image:** Move to `#q7` to image `v18`. Calibrate and take the image.
           4.  **Move to next image location and take image:** Move to `#q6` to image `v19`. Calibrate and take the image.
           5.  **Move to next image location and take image:** Move to `#q5` to image `v20`. Calibrate and take the image.
           6.  **Move to communication configuration:** Move to `#q0` to send all captured images.
           7.  **Send images:** Send all four images (v17, v18, v19, v20).
           8.  **Move to first rock location and sample:** Move to `#q2` to sample `v4`. Sample the rock.
           9.  **Send analysis and drop rock:** Send the analysis of `v4` and then `drop_rock` to free the store.
           10. **Repeat for other rocks:** For each remaining rock (v7, v1, v5, v8, v3), move to its location, sample it, send the analysis, and drop the rock. Make sure to move to `#q0` for sending analyses if the current position does not allow it. Based on the given actions, all `send_analysis` actions are from `#q0`.
           
           Let's check the possible moves for `v12` to `#q4` from `v13`: `(move v12 v13 #t17 #q4)`. This looks good.
           
           --Plan--:
           (move v12 v13 #t17 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #t40 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #t36 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t38 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t8 #q2)
           (sample_rock v12 #q2 v4 v16)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t44 #q13)
           (sample_rock v12 #q13 v7 v16)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q13 #o2 #q10)
           (sample_rock v12 #q10 v1 v16)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q10 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan still fails because the `new-axiom@0()` goal is not fully satisfied, despite my efforts to ensure all `receivedimage` and `receivedanalysis` predicates are met. The `new-axiom@0()` axiom combines several conditions, including `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, all `receivedimage` conditions, and all `receivedanalysis` conditions.
           
           Looking at the goal again, the crucial part I might be missing is the final state of the rovers' configurations and their stores.
           At the end of the plan, the state needs to include:
           *   `atconf(v12, v13)`: Rover `v12` must end up at configuration `v13`.
           *   `atconf(v14, v15)`: Rover `v14` must remain at configuration `v15` (it doesn't move in the plan, so this should hold).
           *   `free(v12, v16)`: Rover `v12`'s store must be free. My `drop_rock` actions ensure this.
           *   `free(v14, v16)`: Rover `v14`'s store must be free. This is true initially and `v14` doesn't interact with its store.
           *   `receivedimage` for `v17, v18, v19, v20` with `v11`. This is handled.
           *   `receivedanalysis` for `v1, v3, v4, v5, v7, v8`. This is handled.
           
           The problem likely lies with `atconf(v12, v13)` at the very end. My current plan has `v12` ending at `#q8` after sampling and sending analysis. I need to add a final `move` action for `v12` to return to `v13`.
           
           Let's adjust the final movement of rover `v12`. After the last `send_analysis` for `v3` from `#q0`, `v12` is at `#q0`. The goal requires `v12` to be at `v13`. I need to find a path from `#q0` to `v13`. Looking at the motion rules for `v12` from `#q0`, there is `(move v12 #q0 #t0 v13)`. This will be the final step.
           
           --Plan--:
           (move v12 v13 #t17 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #t40 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #t36 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t38 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t8 #q2)
           (sample_rock v12 #q2 v4 v16)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t44 #q13)
           (sample_rock v12 #q13 v7 v16)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q13 #o2 #q10)
           (sample_rock v12 #q10 v1 v16)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q10 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13)

