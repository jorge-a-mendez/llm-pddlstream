User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom objective(v18)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom objective(v19)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q15, #y8, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom above(v14, #q11, v8)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q16, #y9, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q12, #y6, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q17, v8)
           Atom conf(v12, #q17)
           Atom above(v12, #q2, v4)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q10, v1)
           Atom conf(v12, #q10)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q14, #y7, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom above(v14, #q1, v7)
           Atom conf(v14, #q1)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v12, v13, #t18, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, v15, #t29, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, v15, #t30, #q15)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q3, #t2, #q1)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q15, #t27, #q3)
           Atom motion(v14, #q3, #t21, v15)
           Atom motion(v14, #q1, #t3, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q14, #t26, #q3)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #t19, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q5, #t32, #q6)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #t25, #q3)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v12, v13, #t20, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q6, #t33, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, v13, #t17, #q4)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #t34, #q5)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #t4, #q4)
           Atom motion(v12, #q0, #t7, #q7)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q7, #t13, #q0)
           Atom motion(v12, #q8, #t15, #q0)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q0, #t22, #q13)
           Atom motion(v12, #q4, #t10, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t6, #q6)
           Atom motion(v12, #q0, #t5, #q5)
           Atom motion(v12, #q0, #t9, #q8)
           Atom motion(v12, #q5, #t11, #q0)
           Atom motion(v12, #q13, #t23, #q0)
           Atom motion(v12, #q10, #t16, #q0)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, v13, #t24, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t14, #q0)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q4, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q4)
           Atom motion(v12, #q17, #t31, #q0)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, #q8, #t35, #q17)
           Atom motion(v12, #q17, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q16)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q17 v8 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q1 v7 v16))
           ((sample_rock v14 #q11 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t22 #q13))
           ((move v12 #q0 #t4 #q4))
           ((move v12 #q0 #t5 #q5))
           ((move v12 #q0 #t6 #q6))
           ((move v12 #q0 #t7 #q7))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q0 #t9 #q8))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q0))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q0))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q4))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q7))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t31 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t14 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q17))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q0))
           ((move v12 #q4 #t34 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q0))
           ((move v12 #q5 #t32 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q6 #t33 #q7))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q17))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q0))
           ((move v12 #q8 #t35 #q17))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q4))
           ((move v12 v13 #t18 #q5))
           ((move v12 v13 #t19 #q6))
           ((move v12 v13 #t20 #q7))
           ((move v12 v13 #t24 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t25 #q3))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t26 #q3))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t27 #q3))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #t2 #q1))
           ((move v14 #q3 #t21 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t29 #q14))
           ((move v14 v15 #t30 #q15))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v14 #q12 #y6 v17 v10))
           ((calibrate v14 #q14 #y7 v20 v10))
           ((calibrate v14 #q15 #y8 v19 v10))
           ((calibrate v14 #q16 #y9 v18 v10))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v14 #q12 #y6 v17 v10 v11))
           ((take_image v14 #q14 #y7 v20 v10 v11))
           ((take_image v14 #q15 #y8 v19 v10 v11))
           ((take_image v14 #q16 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v20 v11))
           ((send_image v14 #q3 #y1 v9 v19 v11))
           ((send_image v14 #q3 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a camera (v10) supporting a mode (v11), a storage unit (v16), a lander (v9), and several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8). The rocks are of two types: v2 and v6. Both rovers are currently at their respective home configurations (v13 for v12, v15 for v14) and have free storage. The goal `new-axiom@0()` requires that both rovers are at some configuration, have free storage, all four objectives (v17, v18, v19, v20) have received images in mode v11, and that at least one rock of type v2 and at least one rock of type v6 have received analysis.
           
           To achieve this goal, we need to:
           1. Ensure both rovers are at some configuration and have free storage (already true in the initial state).
           2. Take images of all four objectives (v17, v18, v19, v20) using the camera v10 in mode v11 and send them to the lander v9. This involves calibrating the camera, taking the image, and then sending it. We have two rovers that can perform these actions.
           3. Analyze at least one rock of type v2 and one rock of type v6 and send the analysis to the lander v9. This involves sampling the rock and then sending the analysis.
           
           Let's break down the image collection and analysis tasks:
           
           **Image Collection:**
           *   Objective v17: Visible to v12 at #q4, and to v14 at #q12.
           *   Objective v18: Visible to v12 at #q7, and to v14 at #q16.
           *   Objective v19: Visible to v12 at #q6, and to v14 at #q15.
           *   Objective v20: Visible to v12 at #q5, and to v14 at #q14.
           
           We can distribute these tasks between the two rovers. For example, rover v12 can handle v17, v18, v19, v20 and then send all of them from a communication configuration.
           
           **Rock Analysis:**
           *   Rocks of type v2: v1, v3, v4.
           *   Rocks of type v6: v5, v7, v8.
           
           We need to sample and send analysis for one rock of type v2 and one of type v6.
           *   Rover v12 can sample v4 (type v2) at #q2 or v1 (type v2) at #q10 or v3 (type v2) at #q8. It can also sample v5 (type v6) at #o5, v7 (type v6) at #q13 or v8 (type v6) at #q17.
           *   Rover v14 can sample v1 (type v2) at #o5 or v3 (type v2) at #o5 or v4 (type v2) at #o5. It can also sample v5 (type v6) at #q9, v7 (type v6) at #q1 or v8 (type v6) at #q11.
           
           Let's use rover v12 for most image and rock collection tasks, and rover v14 can assist or take some tasks to minimize movements if needed.
           
           Here's a possible plan:
           1.  **Rover v12 moves to a configuration to take images of v17, v18, v19, v20, and then move to a communication configuration to send the images.**
               *   Calibrate, take image, then send. We need to do this for all 4 objectives.
               *   Let's have v12 take all images, then move to a comms configuration and send them.
               *   v12 for v17: at #q4. v12 for v18: at #q7. v12 for v19: at #q6. v12 for v20: at #q5.
               *   v12 can send from #q0.
           
           2.  **Rover v12 samples one rock of type v2 and one of type v6.**
               *   Type v2: v4 at #q2.
               *   Type v6: v5 at #o5.
               *   v12 can send analysis from #q0.
           
           Since the goal is an axiom that aggregates conditions, the order of achieving the individual parts (images received, analyses received) within the plan for different rovers doesn't strictly matter as long as all are met by the end. However, the sequence of actions for a single rover is important.
           
           Let's prioritize completing the tasks for one rover first to get some received images and analyses.
           
           Rover v12:
           - Go to #q4, calibrate, take image of v17.
           - Go to #q7, calibrate, take image of v18.
           - Go to #q6, calibrate, take image of v19.
           - Go to #q5, calibrate, take image of v20.
           - Go to #q2, sample v4 (type v2).
           - Go to #o5, sample v5 (type v6).
           - Go to #q0 (communication configuration).
           - Send images of v17, v18, v19, v20.
           - Send analysis of v4 and v5.
           
           Let's start the plan.
           
           --Plan--:
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires:
           *   `atconf(v12, v13)` or some other config for v12 (satisfied by the end of the plan if `q0` is the final config).
           *   `atconf(v14, v15)` or some other config for v14 (satisfied, v14 is at v15 initially and no actions are taken for it).
           *   `free(v12, v16)` (not satisfied in the previous plan because v12 samples rocks and doesn't drop them).
           *   `free(v14, v16)` (satisfied, v14 doesn't sample).
           *   `receivedimage(v17, v11)` (achieved).
           *   `receivedimage(v18, v11)` (achieved).
           *   `receivedimage(v19, v11)` (achieved).
           *   `receivedimage(v20, v11)` (achieved).
           *   `type(?stone, v2)` and `receivedanalysis(?stone)` (achieved for v4).
           *   `type(?soil, v6)` and `receivedanalysis(?soil)` (achieved for v5).
           
           The critical missing part was `free(v12, v16)`. After sampling rocks, `v12`'s store `v16` becomes `full`. To make it `free` again, `v12` must `drop_rock` into `v16`.
           
           Let's refine the plan to include `drop_rock` for `v12` after it has sampled the necessary rocks, before sending the analysis (or the order doesn't strictly matter as long as the store is free at the end of the plan). Since the goal only cares about `receivedanalysis` and not the state of the store after analysis, we can drop the rock after sampling and before the analysis, or even after the analysis. For simplicity, let's drop after sampling all required rocks.
           
           Revised Plan Strategy:
           1.  **Rover v12 takes images of all four objectives (v17, v18, v19, v20) and then moves to a communication configuration to send the images.**
               *   Calibrate, take image, then send.
           2.  **Rover v12 samples one rock of type v2 (v4) and one of type v6 (v5).**
           3.  **Rover v12 drops the sampled rocks to free its store.**
           4.  **Rover v12 sends the analysis of the sampled rocks.**
           
           This should satisfy all parts of the `new-axiom@0()` goal.
           
           --Plan--:
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q4) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because the first action `(calibrate v12 #q4 #y2 v17 v10)` required `atconf(v12, #q4)`, but rover `v12` was initially at `v13`. I need to add a `move` action to get `v12` to `#q4` before attempting to calibrate.
           
           Revised Plan Strategy:
           1.  **Move rover v12 to the configuration for the first image.**
           2.  **Rover v12 takes images of all four objectives (v17, v18, v19, v20) and then moves to a communication configuration to send the images.**
               *   Calibrate, take image, then move to next image location.
           3.  **Rover v12 samples one rock of type v2 (v4) and one of type v6 (v5).**
           4.  **Rover v12 drops the sampled rocks to free its store.**
           5.  **Rover v12 moves to a communication configuration.**
           6.  **Rover v12 sends the analysis of the sampled rocks and all collected images.**
           
           Let's incorporate the initial `move` for `v12`.
           
           --Plan--:
           (move v12 v13 #t17 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan still resulted in `Atom new-axiom@0()` not being satisfied. Let's re-examine the full goal `new-axiom@0()`:
           
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           
           Let's check each component at the end of the previous plan:
           
           *   `atconf(v12, v13)`: The rover `v12` ends up at `#q0`, not `v13`. This is a problem. The axiom implies that `v12` needs to be at `v13` (its initial config) for the axiom to be true *with those specific objects*.
           *   `atconf(v14, v15)`: `v14` remains at `v15` as no actions are taken for it. (Satisfied)
           *   `free(v12, v16)`: This was addressed by `drop_rock v12 v16`. (Satisfied)
           *   `free(v14, v16)`: `v14` doesn't use its store, so it remains free. (Satisfied)
           *   `receivedimage(v17, v11)` through `receivedimage(v20, v11)`: All images are taken and sent. (Satisfied)
           *   `type(?stone, v2)` and `receivedanalysis(?stone)`: `v4` (type v2) is sampled and analyzed. (Satisfied)
           *   `type(?soil, v6)` and `receivedanalysis(?soil)`: `v5` (type v6) is sampled and analyzed. (Satisfied)
           
           The crucial unmet condition is `atconf(v12, v13)`. The goal explicitly specifies `v13` for `v12`. So, after all other tasks are completed, `v12` must return to `v13`.
           
           Revised Plan Strategy:
           1.  **Move rover v12 to the configuration for the first image.**
           2.  **Rover v12 takes images of all four objectives (v17, v18, v19, v20).**
               *   Calibrate, take image, then move to next image location.
           3.  **Rover v12 samples one rock of type v2 (v4) and one of type v6 (v5).**
           4.  **Rover v12 drops the sampled rocks to free its store.**
           5.  **Rover v12 moves to a communication configuration (e.g., #q0).**
           6.  **Rover v12 sends the analysis of the sampled rocks and all collected images.**
           7.  **Rover v12 returns to its initial configuration `v13`.**
           
           This ensures all conditions of the axiom are met.
           
           --Plan--:
           (move v12 v13 #t17 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q7)
           (calibrate v12 #q7 #y5 v18 v10)
           (take_image v12 #q7 #y5 v18 v10 v11)
           (move v12 #q7 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v5)
           (move v12 #q0 #t0 v13)

