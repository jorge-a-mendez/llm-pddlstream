User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom stackable(v12, v18)
           Atom arm(v4)
           Atom arm(v6)
           Atom supported(v15, v16, v11)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom stackable(v15, v10)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom pose(v15, v16)
           Atom atpose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom stackable(v12, v10)
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom canmove()
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom type(v12, v17)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom type(v8, v17)
           Atom graspable(v15)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #g0)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom supported(v8, #o2, v10)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(#q1, #t4, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t4))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v8`, `v12`, `v15` are graspable and stackable. `v4` and `v6` are arms. `v11`, `v14`, `v10`, and `v18` are regions that can support objects. The goal is to satisfy the axiom `new-axiom@0()`, which states `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, `v12` and `v8` are both of `type v17`. `v12` is currently at `v13` and supported by `v14`, and `v8` is at `v9` and supported by `v11`. If either `v12` or `v8` (which are both of type `v17`, which can be considered "green" from the axiom) can be placed on `v18`, the goal will be achieved.
           
           Let's focus on `v12`. It is currently at `v13` and supported by `v14`. It also has a pose `p0` where it can be supported by `v18`. There are actions to pick up `v12` from `v13` and place it at `p0` on `v18`.
           
           Initial state shows `atpose(v12, v13)`, `atbconf(v3)`, `handempty(v4)`.
           The action `(pick v4 v12 v13 #g0 #q1 #t1)` can be executed because `kin(v4, v12, v13, #g0, #q1, #t1)` is true, `atpose(v12, v13)` is true, `handempty(v4)` is true, `atbconf(v3)` needs to become `atbconf(#q1)` (which needs a `move_base`).
           
           Let's plan to move `v12` to `v18`.
           1. Move the base to `q1` to be in position for picking `v12` from `v13`.
           2. Pick `v12` from `v13`.
           3. Move the base to `q0` to be in position for placing `v12` at `p0`.
           4. Place `v12` at `p0`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #t4)
           (place v4 v12 #p0 #g0 #q0 #t0)

