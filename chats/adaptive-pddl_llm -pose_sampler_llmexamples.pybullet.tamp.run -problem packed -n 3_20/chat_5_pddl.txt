User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v10)
           Atom atpose(v14, v15)
           Atom stackable(v8, v10)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom pose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom handempty(v4)
           Atom graspable(v12)
           Atom canmove()
           Atom graspable(v8)
           Atom pose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom graspable(v14)
           Atom bconf(v3)
           Atom atpose(v12, v13)
           Atom arm(v4)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom stackable(v8, v16)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g0)
           Atom grasp(v14, #g1)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #g2)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g0, #q4, #t6)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v14, #p2, #g1, #q3, #t5)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, #p1, #g2, #q2, #t4)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v8, v9, #g2, #q5, #t7)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v3, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(#q5, #t9, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q1, #t11, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t15)
           Atom basemotion(#q3, #t15, #q4)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t14)
           Atom basemotion(#q0, #t14, #q5)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(#q4, #t12, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t13))
           ((move_base #q0 #q5 #t14))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t11))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t10))
           ((move_base #q3 #q4 #t15))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q0 #t12))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q2 #t9))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((move_base v3 #q4 #t8))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q4 #t6))
           ((place v4 v12 v13 #g0 #q4 #t6))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p2 #g1 #q3 #t5))
           ((place v4 v14 #p2 #g1 #q3 #t5))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q2 #t4))
           ((place v4 v8 #p1 #g2 #q2 #t4))
           ((pick v4 v8 v9 #g2 #q5 #t7))
           ((place v4 v8 v9 #g2 #q5 #t7))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves a robot arm `v4` and `v6`, and several objects: `v8`, `v12`, and `v14`. These objects are currently on `v11`. There are also two other locations, `v10` and `v16`. The goal is to move all three objects (`v8`, `v12`, and `v14`) to `v16`.
           
           The initial state shows that:
           - `v12` is at `v13` and is supported by `v11`.
           - `v14` is at `v15` and is supported by `v11`.
           - `v8` is at `v9` and is supported by `v11`.
           - The robot arm `v4` is `handempty` and `ataconf` `v5`.
           - The base is `atbconf` `v3`.
           - All three objects `v8`, `v12`, `v14` are `graspable`.
           - There are several `kin` relationships defined, which indicate possible pick and place configurations for `v4` to move `v8`, `v12`, and `v14` to different poses, including poses on `v16`.
           
           To achieve the goal `on(v8, v16)`, `on(v12, v16)`, and `on(v14, v16)`, we need to pick each object from its current location and place it on `v16`.
           
           Let's break down the steps for each object:
           
           1.  **Move v12 to v16:**
               *   Pick `v12` from `v13` using `kin(v4, v12, v13, #g0, #q4, #t6)`. This requires the base to be at `q4`.
               *   Place `v12` on `v16`. We need a pose on `v16` for `v12`. From the initial state, we have `pose(v12, #p0)` and `supported(v12, #p0, v16)`. The `kin` for placing `v12` at `#p0` is `kin(v4, v12, #p0, #g0, #q0, #t0)`, requiring the base to be at `q0`.
           
           2.  **Move v14 to v16:**
               *   Pick `v14` from `v15` using `kin(v4, v14, v15, #g1, #q1, #t1)`. This requires the base to be at `q1`.
               *   Place `v14` on `v16`. We have `pose(v14, #p2)` and `supported(v14, #p2, v16)`. The `kin` for placing `v14` at `#p2` is `kin(v4, v14, #p2, #g1, #q3, #t5)`, requiring the base to be at `q3`.
           
           3.  **Move v8 to v16:**
               *   Pick `v8` from `v9` using `kin(v4, v8, v9, #g2, #q5, #t7)`. This requires the base to be at `q5`.
               *   Place `v8` on `v16`. We have `pose(v8, #p1)` and `supported(v8, #p1, v16)`. The `kin` for placing `v8` at `#p1` is `kin(v4, v8, #p1, #g2, #q2, #t4)`, requiring the base to be at `q2`.
           
           We will need to move the base (`v3` to `q4`, `q4` to `q0`, `q0` to `q1`, `q1` to `q3`, `q3` to `q5`, `q5` to `q2`) as needed before each pick and place operation.
           
           --Plan--:
           (move_base v3 #q4 #t8)
           (pick v4 v12 v13 #g0 #q4 #t6)
           (move_base #q4 #q0 #t12)
           (place v4 v12 #p0 #g0 #q0 #t0)
           (move_base #q0 #q1 #t13)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #q3 #t11)
           (place v4 v14 #p2 #g1 #q3 #t5)
           (move_base #q3 #q5 #t10)
           (pick v4 v8 v9 #g2 #q5 #t7)
           (move_base #q5 #q2 #t9)
           (place v4 v8 #p1 #g2 #q2 #t4)

