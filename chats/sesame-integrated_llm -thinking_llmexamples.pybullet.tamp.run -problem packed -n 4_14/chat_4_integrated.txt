User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g4: object
           #g5: object
           #g6: object
           #g7: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q8: object
           #q9: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           @sink: object
           @stove: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (-0.242, -0.485, 0.781) and quaternion (0.0, 0.0, 1.0, 0.031).
           Object v13 is a pose with position (-0.1, -0.312, 0.781) and quaternion (0.0, 0.0, -0.849, 0.528).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p6 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.002, -0.418), (0.089, -0.331)).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.279, -0.522), (-0.204, -0.448)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v9 is a pose with position (0.046, -0.374, 0.781) and quaternion (0.0, 0.0, 0.6, 0.8).
           Object v17 is a pose with position (0.172, 0.541, 0.781) and quaternion (0.0, 0.0, -0.602, 0.798).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g4)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g6)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g5)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g7)
           Atom bconf(#q14)
           Atom atraj(#t32)
           Atom kin(v4, v16, v17, #g4, #q14, #t32)
           Atom bconf(#q8)
           Atom atraj(#t21)
           Atom kin(v4, v16, p7, #g4, #q8, #t21)
           Atom bconf(#q10)
           Atom atraj(#t23)
           Atom kin(v4, v14, v15, #g6, #q10, #t23)
           Atom bconf(#q12)
           Atom atraj(#t25)
           Atom kin(v4, v14, p6, #g6, #q12, #t25)
           Atom bconf(#q9)
           Atom atraj(#t22)
           Atom kin(v4, v12, p5, #g5, #q9, #t22)
           Atom bconf(#q15)
           Atom atraj(#t33)
           Atom kin(v4, v12, v13, #g5, #q15, #t33)
           Atom bconf(#q13)
           Atom atraj(#t31)
           Atom kin(v4, v8, v9, #g7, #q13, #t31)
           Atom bconf(#q11)
           Atom atraj(#t24)
           Atom kin(v4, v8, p4, #g7, #q11, #t24)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t27)
           Atom basemotion(v3, #t27, #q9)
           Atom basemotion(#q15, #o0, #q9)
           Atom basemotion(#q9, #o0, #q15)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q9, #o0, #q12)
           Atom btraj(#t30)
           Atom basemotion(v3, #t30, #q12)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q15, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom btraj(#t28)
           Atom basemotion(v3, #t28, #q10)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q8, #o0, #q15)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q15, #o0, #q8)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom btraj(#t26)
           Atom basemotion(v3, #t26, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q14, #o0, #q9)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q8, #o0, #q14)
           Atom basemotion(#q14, #o0, #q8)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q11)
           Atom btraj(#t29)
           Atom basemotion(v3, #t29, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q11, #o0, #q15)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q15, #o0, #q13)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q8, #o0, #q13)
           Atom basemotion(#q13, #o0, #q8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g5, #o3, #o4)
           Atom kin(v4, v8, #o2, #g7, #o3, #o4)
           Atom kin(v4, v14, #o2, #g6, #o3, #o4)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q8 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q15 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q8 #t26))
           ((move_base v3 #q9 #t27))
           ((move_base v3 #q10 #t28))
           ((move_base v3 #q11 #t29))
           ((move_base v3 #q12 #t30))
           ((pick v4 v12 #o2 #g5 #o3 #o4))
           ((place v4 v12 #o2 #g5 #o3 #o4))
           ((pick v4 v12 p5 #g5 #q9 #t22))
           ((place v4 v12 p5 #g5 #q9 #t22))
           ((pick v4 v12 v13 #g5 #q15 #t33))
           ((place v4 v12 v13 #g5 #q15 #t33))
           ((pick v4 v14 #o2 #g6 #o3 #o4))
           ((place v4 v14 #o2 #g6 #o3 #o4))
           ((pick v4 v14 p6 #g6 #q12 #t25))
           ((place v4 v14 p6 #g6 #q12 #t25))
           ((pick v4 v14 v15 #g6 #q10 #t23))
           ((place v4 v14 v15 #g6 #q10 #t23))
           ((pick v4 v16 #o2 #g4 #o3 #o4))
           ((place v4 v16 #o2 #g4 #o3 #o4))
           ((pick v4 v16 p7 #g4 #q8 #t21))
           ((place v4 v16 p7 #g4 #q8 #t21))
           ((pick v4 v16 v17 #g4 #q14 #t32))
           ((place v4 v16 v17 #g4 #q14 #t32))
           ((pick v4 v8 #o2 #g7 #o3 #o4))
           ((place v4 v8 #o2 #g7 #o3 #o4))
           ((pick v4 v8 p4 #g7 #q11 #t24))
           ((place v4 v8 p4 #g7 #q11 #t24))
           ((pick v4 v8 v9 #g7 #q13 #t31))
           ((place v4 v8 v9 #g7 #q13 #t31))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q6', '#t16'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g3', '#q6', '#t11'))
           Action(name='move_base', args=('#q6', '#q3', '#t14'))
           Action(name='place', args=('v4', 'v8', 'p4', '#g3', '#q3', '#t3'))
           Action(name='move_base', args=('#q3', '#q1', '#t13'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g1', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q5', '#t18'))
           Action(name='place', args=('v4', 'v12', 'p5', '#g1', '#q5', '#t10'))
           Action(name='move_base', args=('#q5', '#q2', '#t19'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g2', '#q2', '#t2'))
           Action(name='move_base', args=('#q2', '#q4', '#t17'))
           Action(name='place', args=('v4', 'v14', 'p6', '#g2', '#q4', '#t4'))
           Action(name='move_base', args=('#q4', '#q7', '#t20'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g0', '#q7', '#t12'))
           Action(name='move_base', args=('#q7', '#q0', '#t15'))
           Action(name='place', args=('v4', 'v16', 'p7', '#g0', '#q0', '#t0'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-approach-pose:('v16', 'p7', '#g0', 'v12', 'p5')->()`, which impeded executing the action pick('v4', 'v16', 'v17', '#g0', '#q7', '#t12').
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18.
           Currently, the objects are at the following poses:
           - v8: v9
           - v12: v13
           - v14: v15
           - v16: v17
           
           And the target poses are p4, p5, p6, p7, which are all supported by v18.
           
           The previous plan failed because of a collision during the approach phase of picking v16. This suggests that the order of picking and placing, or the specific poses chosen, led to a blocked approach. We need to find an order that avoids collisions.
           
           Let's re-evaluate the pick and place sequence. The initial poses (v9, v13, v15, v17) are likely cluttered. The target poses (p4, p5, p6, p7) are on a different surface (v18). We should try to pick objects from their initial cluttered locations and place them directly onto the target surface in a collision-free manner.
           
           The problem states that objects `v12`, `v14`, `v16`, `v8` are all stackable on `v18`.
           Let's analyze the available poses and actions for each object:
           - **v8**: Currently at `v9`. Can be placed at `p4` (on `v18`).
             - `pick v4 v8 v9 #g7 #q13 #t31`
             - `place v4 v8 p4 #g7 #q11 #t24` (Note: `kin` for `place` is `kin(v4, v8, p4, #g7, #q11, #t24)`)
           - **v12**: Currently at `v13`. Can be placed at `p5` (on `v18`).
             - `pick v4 v12 v13 #g5 #q15 #t33`
             - `place v4 v12 p5 #g5 #q9 #t22`
           - **v14**: Currently at `v15`. Can be placed at `p6` (on `v18`).
             - `pick v4 v14 v15 #g6 #q10 #t23`
             - `place v4 v14 p6 #g6 #q12 #t25`
           - **v16**: Currently at `v17`. Can be placed at `p7` (on `v18`).
             - `pick v4 v16 v17 #g4 #q14 #t32`
             - `place v4 v16 p7 #g4 #q8 #t21`
           
           The failure in the previous plan suggests that picking `v16` from `v17` and placing it at `p7` might cause issues if other objects are already placed. Specifically, `test-cfree-approach-pose:('v16', 'p7', '#g0', 'v12', 'p5')->()` implies that the approach to `p7` for `v16` collided with `v12` at `p5`. This means `v12` must be placed *after* `v16` (or at a different pose) or `v16` must be placed somewhere else.
           
           Since all target poses (p4, p5, p6, p7) are on the same surface `v18`, and the collision was with `v12` at `p5` when placing `v16` at `p7`, let's try to place `v16` first, then `v12`, `v14`, `v8`. The order of placement might matter if the robot's arm or the object in hand collides with already placed objects during the approach/retreat.
           
           Let's try placing `v16` at `p7`, then `v14` at `p6`, then `v12` at `p5`, then `v8` at `p4`. This order attempts to move from one "corner" of the target surface to another, hoping to minimize collisions. The base configurations for pick and place actions are specific to each (object, pose, grasp) tuple. So, we'll need to move the base between each pick and place operation.
           
           Plan:
           1. Move base to `q14` (for picking v16 from v17).
           2. Pick v16 from v17.
           3. Move base to `q8` (for placing v16 at p7).
           4. Place v16 at p7.
           5. Move base to `q10` (for picking v14 from v15).
           6. Pick v14 from v15.
           7. Move base to `q12` (for placing v14 at p6).
           8. Place v14 at p6.
           9. Move base to `q15` (for picking v12 from v13).
           10. Pick v12 from v13.
           11. Move base to `q9` (for placing v12 at p5).
           12. Place v12 at p5.
           13. Move base to `q13` (for picking v8 from v9).
           14. Pick v8 from v9.
           15. Move base to `q11` (for placing v8 at p4).
           16. Place v8 at p4.
           
           All objects are being placed on predefined poses (p4, p5, p6, p7) which do not start with '#', so no new pose values need to be computed.
           
           --Plan--:
           (move_base v3 #q14 #o0)
           (pick v4 v16 v17 #g4 #q14 #t32)
           (move_base #q14 #q8 #o0)
           (place v4 v16 p7 #g4 #q8 #t21)
           (move_base #q8 #q10 #o0)
           (pick v4 v14 v15 #g6 #q10 #t23)
           (move_base #q10 #q12 #o0)
           (place v4 v14 p6 #g6 #q12 #t25)
           (move_base #q12 #q15 #o0)
           (pick v4 v12 v13 #g5 #q15 #t33)
           (move_base #q15 #q9 #o0)
           (place v4 v12 p5 #g5 #q9 #t22)
           (move_base #q9 #q13 #o0)
           (pick v4 v8 v9 #g7 #q13 #t31)
           (move_base #q13 #q11 #o0)
           (place v4 v8 p4 #g7 #q11 #t24)

