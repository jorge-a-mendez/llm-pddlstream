User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p10 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v9 is a pose with position (0.103, 0.427, 0.781) and quaternion (0.0, 0.0, -0.724, 0.69).
           Object v19 is a pose with position (0.061, -0.378, 0.781) and quaternion (0.0, 0.0, 0.944, 0.33).
           Object p5 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (-0.025, -0.481, 0.781) and quaternion (0.0, 0.0, -0.716, 0.699).
           Object v15 is a pose with position (-0.055, 0.285, 0.781) and quaternion (0.0, 0.0, 0.399, 0.917).
           Object p6 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.234, 0.027, 0.781) and quaternion (0.0, 0.0, 0.092, 0.996).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v35, v43, p14, v37, v38, v39)
           Atom graspable(v18)
           Atom stackable(v14, v20)
           Atom supported(v12, v13, v11)
           Atom graspable(v8)
           Atom pose(v16, p8)
           Atom aconf(v6, v7)
           Atom handempty(v4)
           Atom kin(v35, v40, p11, v37, v38, v39)
           Atom supported(v12, p6, v20)
           Atom stackable(v8, v10)
           Atom stackable(v18, v10)
           Atom supported(v8, p10, v20)
           Atom aconf(v4, v5)
           Atom stackable(v16, v20)
           Atom pose(v12, v13)
           Atom supported(v14, p7, v20)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom arm(v4)
           Atom graspable(v12)
           Atom stackable(v8, v20)
           Atom kin(v35, v36, p10, v37, v38, v39)
           Atom kin(v35, v41, p7, v37, v38, v39)
           Atom pose(v8, p5)
           Atom atpose(v18, v19)
           Atom kin(v35, v42, p13, v37, v38, v39)
           Atom atpose(v8, v9)
           Atom kin(v35, v36, p5, v37, v38, v39)
           Atom supported(v18, p14, v20)
           Atom supported(v14, v15, v11)
           Atom pose(v16, v17)
           Atom supported(v18, v19, v11)
           Atom arm(v6)
           Atom handempty(v6)
           Atom kin(v35, v41, p12, v37, v38, v39)
           Atom pose(v18, p14)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v20)
           Atom stackable(v14, v10)
           Atom supported(v8, p5, v20)
           Atom graspable(v16)
           Atom pose(v18, p9)
           Atom controllable(v4)
           Atom atpose(v12, v13)
           Atom bconf(v3)
           Atom atpose(v14, v15)
           Atom kin(v35, v40, p6, v37, v38, v39)
           Atom supported(v8, v9, v11)
           Atom pose(v14, p7)
           Atom atbconf(v3)
           Atom supported(v16, p8, v20)
           Atom kin(v35, v42, p8, v37, v38, v39)
           Atom supported(v18, p9, v20)
           Atom pose(v8, p10)
           Atom pose(v12, p11)
           Atom stackable(v16, v10)
           Atom supported(v14, p12, v20)
           Atom stackable(v18, v20)
           Atom stackable(v12, v20)
           Atom graspable(v14)
           Atom ataconf(v4, v5)
           Atom supported(v12, p11, v20)
           Atom kin(v35, v43, p9, v37, v38, v39)
           Atom pose(v8, v9)
           Atom pose(v14, v15)
           Atom pose(v14, p12)
           Atom pose(v12, p6)
           Atom supported(v16, v17, v11)
           Atom pose(v18, v19)
           Atom stackable(v12, v10)
           Atom atpose(v16, v17)
           Atom grasp(v18, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom supported(v12, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #g1)
           Atom grasp(v8, #g4)
           Atom supported(v18, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g2)
           Atom grasp(v16, #g3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom supported(v16, #o2, v20)
           Atom bconf(#q6)
           Atom atraj(#t10)
           Atom kin(v4, v18, v19, #g0, #q6, #t10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, p14, #g0, #q0, #t0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v18, p9, #g0, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t11)
           Atom kin(v4, v14, p12, #g1, #q7, #t11)
           Atom kin(v4, v14, p7, #g1, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g1, #q5, #t9)
           Atom bconf(#q9)
           Atom atraj(#t13)
           Atom kin(v4, v8, v9, #g4, #q9, #t13)
           Atom kin(v4, v8, p5, #g4, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, p10, #g4, #q4, #t8)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v12, p11, #g2, #q3, #t7)
           Atom kin(v4, v12, p6, #g2, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g2, #q1, #t2)
           Atom kin(v4, v16, p8, #g3, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v16, p13, #g3, #q2, #t3)
           Atom bconf(#q8)
           Atom atraj(#t12)
           Atom kin(v4, v16, v17, #g3, #q8, #t12)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, v3)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(#q2, #t6, v3)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t5)
           Atom basemotion(#q1, #t5, v3)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g4, #o3, #o4)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #t5))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #t6))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p11 #g2 #q3 #t7))
           ((place v4 v12 p11 #g2 #q3 #t7))
           ((pick v4 v12 p6 #g2 #o3 #o4))
           ((place v4 v12 p6 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q1 #t2))
           ((place v4 v12 v13 #g2 #q1 #t2))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p12 #g1 #q7 #t11))
           ((place v4 v14 p12 #g1 #q7 #t11))
           ((pick v4 v14 p7 #g1 #o3 #o4))
           ((place v4 v14 p7 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q5 #t9))
           ((place v4 v14 v15 #g1 #q5 #t9))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p13 #g3 #q2 #t3))
           ((place v4 v16 p13 #g3 #q2 #t3))
           ((pick v4 v16 p8 #g3 #o3 #o4))
           ((place v4 v16 p8 #g3 #o3 #o4))
           ((pick v4 v16 v17 #g3 #q8 #t12))
           ((place v4 v16 v17 #g3 #q8 #t12))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 p14 #g0 #q0 #t0))
           ((place v4 v18 p14 #g0 #q0 #t0))
           ((pick v4 v18 p9 #g0 #o3 #o4))
           ((place v4 v18 p9 #g0 #o3 #o4))
           ((pick v4 v18 v19 #g0 #q6 #t10))
           ((place v4 v18 v19 #g0 #q6 #t10))
           ((pick v4 v8 #o2 #g4 #o3 #o4))
           ((place v4 v8 #o2 #g4 #o3 #o4))
           ((pick v4 v8 p10 #g4 #q4 #t8))
           ((place v4 v8 p10 #g4 #q4 #t8))
           ((pick v4 v8 p5 #g4 #o3 #o4))
           ((place v4 v8 p5 #g4 #o3 #o4))
           ((pick v4 v8 v9 #g4 #q9 #t13))
           ((place v4 v8 v9 #g4 #q9 #t13))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task requires placing five objects (v8, v12, v14, v16, v18) onto the surface v20.
           The initial state shows that some objects are already on surfaces, but not necessarily v20, and some are on v20 but not in the final goal pose, e.g., v8 is atpose v9, which is supported by v11, but the goal is to have it on v20.
           The robot arm `v4` is `handempty`. The current base configuration is `v3`.
           Several poses for each object are available, some on `v11` and some on `v20`. The goal is to move all objects to `v20`.
           I will pick each object from its current location, if not already on v20, and then place it on v20 using a pose like #o2 that is supported by v20.
           
           The objects and their initial positions are:
           - v8: atpose v9 (supported by v11) and p5 (supported by v20)
           - v12: atpose v13 (supported by v11) and p6 (supported by v20)
           - v14: atpose v15 (supported by v11) and p7 (supported by v20)
           - v16: atpose v17 (supported by v11) and p8 (supported by v20)
           - v18: atpose v19 (supported by v11) and p14 (supported by v20)
           
           I will prioritize placing objects that are not already on `v20` to `v20`. I will choose #o2 as the target pose for all of them.
           
           1. **Pick v18 from v19 and place it on #o2 (on v20)**:
              - Initial state: `atpose(v18, v19)` and `supported(v18, v19, v11)`.
              - Action: `pick(v4, v18, v19, #g0, #q6, #t10)`
              - After pick: `holding(v4, v18)`
              - Action: `place(v4, v18, #o2, #g0, #o3, #o4)`
              - After place: `atpose(v18, #o2)` and `on(v18, v20)` (since `supported(v18, #o2, v20)` is in the initial state).
           
           2. **Pick v12 from v13 and place it on #o2 (on v20)**:
              - Initial state: `atpose(v12, v13)` and `supported(v12, v13, v11)`.
              - Action: `pick(v4, v12, v13, #g2, #q1, #t2)`
              - After pick: `holding(v4, v12)`
              - Action: `place(v4, v12, #o2, #g2, #o3, #o4)`
              - After place: `atpose(v12, #o2)` and `on(v12, v20)`.
           
           3. **Pick v14 from v15 and place it on #o2 (on v20)**:
              - Initial state: `atpose(v14, v15)` and `supported(v14, v15, v11)`.
              - Action: `pick(v4, v14, v15, #g1, #q5, #t9)`
              - After pick: `holding(v4, v14)`
              - Action: `place(v4, v14, #o2, #g1, #o3, #o4)`
              - After place: `atpose(v14, #o2)` and `on(v14, v20)`.
           
           4. **Pick v16 from v17 and place it on #o2 (on v20)**:
              - Initial state: `atpose(v16, v17)` and `supported(v16, v17, v11)`.
              - Action: `pick(v4, v16, v17, #g3, #q8, #t12)`
              - After pick: `holding(v4, v16)`
              - Action: `place(v4, v16, #o2, #g3, #o3, #o4)`
              - After place: `atpose(v16, #o2)` and `on(v16, v20)`.
           
           5. **Pick v8 from v9 and place it on #o2 (on v20)**:
              - Initial state: `atpose(v8, v9)` and `supported(v8, v9, v11)`.
              - Action: `pick(v4, v8, v9, #g4, #q9, #t13)`
              - After pick: `holding(v4, v8)`
              - Action: `place(v4, v8, #o2, #g4, #o3, #o4)`
              - After place: `atpose(v8, #o2)` and `on(v8, v20)`.
           
           This sequence of actions will achieve the goal. I will use the base configuration `#o3` for placing all objects on `#o2`. The initial base configuration is `v3`, but the `kin` predicates for placing on `#o2` use `#o3`, so I will move to `#o3` once, and then use it for all placement actions. Since several kinematic configurations exist for `kin(v4, <object>, #o2, <grasp>, #o3, #o4)`, I will assume `#o3` is a suitable base pose to reach `#o2` for all objects.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v18 v19 #g0 #q6 #t10)
           (place v4 v18 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q1 #t2)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (pick v4 v14 v15 #g1 #q5 #t9)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (pick v4 v16 v17 #g3 #q8 #t12)
           (place v4 v16 #o2 #g3 #o3 #o4)
           (pick v4 v8 v9 #g4 #q9 #t13)
           (place v4 v8 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#o2 v18 v20): (0.0 0.0 0.782 0.0)
           (#o2 v12 v20): (0.0 0.0 0.782 0.0)
           (#o2 v14 v20): (0.0 0.0 0.782 0.0)
           (#o2 v16 v20): (0.0 0.0 0.782 0.0)
           (#o2 v8 v20): (0.0 0.0 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q1) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `pick v4 v12 v13 #g2 #q1 #t2` required `atbconf(#q1)`, but the robot was at `atbconf(#o3)`. I need to ensure that the robot's base configuration (`atbconf`) matches the base configuration required for the `pick` action.
           
           Here's a revised plan, where I explicitly move the base before each pick action to the required base configuration, and then move to `#o3` for placing. It makes sense to group the pick actions by their base configuration if possible, but given the current action instances, I'll follow the original order and move the base each time.
           
           Let's re-examine the `kin` predicates to identify the required base configurations for each pick:
           - `pick(v4, v18, v19, #g0, #q6, #t10)` requires `atbconf(#q6)`.
           - `pick(v4, v12, v13, #g2, #q1, #t2)` requires `atbconf(#q1)`.
           - `pick(v4, v14, v15, #g1, #q5, #t9)` requires `atbconf(#q5)`.
           - `pick(v4, v16, v17, #g3, #q8, #t12)` requires `atbconf(#q8)`.
           - `pick(v4, v8, v9, #g4, #q9, #t13)` requires `atbconf(#q9)`.
           
           The `place` actions for `#o2` all require `atbconf(#o3)`.
           
           So, the new plan structure will be:
           1. (move_base current_bconf -> #q6)
           2. (pick v18 from v19)
           3. (move_base #q6 -> #o3)
           4. (place v18 on #o2)
           5. (move_base #o3 -> #q1)
           6. (pick v12 from v13)
           7. (move_base #q1 -> #o3)
           8. (place v12 on #o2)
           ... and so on for all five objects.
           
           I will start from `atbconf(v3)`.
           
           --Plan--:
           (move_base v3 #q6 #o0)
           (pick v4 v18 v19 #g0 #q6 #t10)
           (move_base #q6 #o3 #o0)
           (place v4 v18 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g2 #q1 #t2)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v14 v15 #g1 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v16 v17 #g3 #q8 #t12)
           (move_base #q8 #o3 #o0)
           (place v4 v16 #o2 #g3 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v8 v9 #g4 #q9 #t13)
           (move_base #q9 #o3 #o0)
           (place v4 v8 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#o2 v18 v20): (0.0 0.0 0.782 0.0)
           (#o2 v12 v20): (0.0 0.0 0.782 0.0)
           (#o2 v14 v20): (0.0 0.0 0.782 0.0)
           (#o2 v16 v20): (0.0 0.0 0.782 0.0)
           (#o2 v8 v20): (0.0 0.0 0.782 0.0)

