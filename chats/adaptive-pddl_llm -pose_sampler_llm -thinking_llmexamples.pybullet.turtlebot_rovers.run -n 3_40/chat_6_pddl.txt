User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom rock(v1)
           Atom rock(v7)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom objective(v17)
           Atom rock(v4)
           Atom objective(v19)
           Atom rover(v12)
           Atom imagevisible(v12, #q9, #y5, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q10, #y6, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q2, #y2, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q3, #y3, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t15, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #t20, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, v13, #t16, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t21, #q1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #t9, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #t13, #q1)
           Atom motion(v12, #q8, #t14, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t23, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t18, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t26, #q9)
           Atom motion(v12, v13, #t25, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #t19, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #t22, #q1)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, v13, #t17, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q0)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t11, #q6)
           Atom motion(v14, v15, #t7, #q3)
           Atom motion(v14, v15, #t24, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t27, #q3)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q0, #t12, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #t8, #q0)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #t2, #q0)
           Atom motion(v14, #q6, #t10, #q2)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t18 #q5))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q1))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t19 #q4))
           ((move v12 #q5 #t26 #q9))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q1))
           ((move v12 #q8 #t14 #q4))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q9))
           ((move v12 v13 #t16 #q10))
           ((move v12 v13 #t17 #q11))
           ((move v12 v13 #t25 #q5))
           ((move v12 v13 #t4 #q4))
           ((move v12 v13 #t9 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t12 #q7))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t11 #q6))
           ((move v14 #q3 #t3 #q0))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q2))
           ((move v14 #q6 #t23 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t27 #q3))
           ((move v14 #q7 #t8 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t24 #q7))
           ((move v14 v15 #t6 #q2))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q9 #y5 v19 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q3 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q9 #y5 v19 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q3 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the game plan. The main goal, `new-axiom@0()`, boils down to satisfying a conjunction of conditions.  I see that I need to:
           
           1.  **Get three images**: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.
           2.  **Analyze and send reports**: `receivedanalysis` for a rock of type `v2` and one of type `v6`.
           
           Looks like I can use two rovers, v12 and v14, for this.  I'll leverage v12's ability to take and send images, and v14's ability to sample and analyze rocks.
           
           **Rover v12:  Image Acquisition & Transmission**
           
           *   First, I need to get v12 into position to snap those images of the objectives. This means moving it from its initial configuration `v13`. I'll have it move to the imaging position with the action `move(v12, v13, #t15, #q9)`.
           
           *   Next, I have v12 take the image of objective v19:
               *   `calibrate(v12, #q9, #y5, v19, v10)` and then `take_image(v12, #q9, #y5, v19, v10, v11)`.
           
           *   Then move v12 to the imaging position for v17 with `move(v12, #q9, #o2, #q10)`
           
           *   Next, I have v12 take the image of objective v17:
               *   `calibrate(v12, #q10, #y6, v17, v10)` and then `take_image(v12, #q10, #y6, v17, v10, v11)`.
           
           *   Then move v12 to the imaging position for v18 with `move(v12, #q10, #o2, #q11)`
           
           *   Next, I have v12 take the image of objective v18:
               *   `calibrate(v12, #q11, #y7, v18, v10)` and then `take_image(v12, #q11, #y7, v18, v10, v11)`.
           
           *   Next, move to comms config for sending the images with `move(v12, #q11, #t22, #q1)`
           
           *   Now, I have v12 send the images of the objectives:
               *   `send_image(v12, #q1, #y1, v9, v19, v11)`, then
               *   `send_image(v12, #q1, #y1, v9, v17, v11)`, and finally
               *   `send_image(v12, #q1, #y1, v9, v18, v11)`.
           
           **Rover v14: Sampling & Analysis**
           
           *   First, v14 needs to get to the location to sample a type `v2` rock. I'll have it move there with `move(v14, v15, #o2, #o5)`.
           *   Next it will sample a rock of type `v2` with `sample_rock(v14, #o5, v3, v16)`.
           *   Then v14 needs to move to comms position with `move(v14, #o5, #o2, #q0)`.
           *   Now, v14 sends the analysis of the `v2` rock with `send_analysis(v14, #q0, #y0, v9, v3)`.
           *   To make sure v14's store is `free` for the next rock sampling, use `drop_rock(v14, v16)`.
           *   Next v14 needs to move to the sampling location for `v6` rocks with `move(v14, #q0, #t12, #q7)`.
           *   Now v14 samples a rock of type `v6` with `sample_rock(v14, #q7, v5, v16)
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the game plan. The main goal, `new-axiom@0()`, boils down to satisfying a conjunction of conditions.  I see that I need to:
           
           1.  **Get three images**: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.
           2.  **Analyze and send reports**: `receivedanalysis` for a rock of type `v2` and one of type `v6`.
           
           Looks like I can use two rovers, v12 and v14, for this.  I'll leverage v12's ability to take and send images, and v14's ability to sample and analyze rocks.
           
           **Rover v12:  Image Acquisition & Transmission**
           
           *   First, I need to get v12 into position to snap those images of the objectives. This means moving it from its initial configuration `v13`. I'll have it move to the imaging position with the action `move(v12, v13, #t15, #q9)`.
           
           *   Next, I have v12 take the image of objective v19:
               *   `calibrate(v12, #q9, #y5, v19, v10)` and then `take_image(v12, #q9, #y5, v19, v10, v11)`.
           
           *   Then move v12 to the imaging position for v17 with `move(v12, #q9, #o2, #q10)`
           
           *   Next, I have v12 take the image of objective v17:
               *   `calibrate(v12, #q10, #y6, v17, v10)` and then `take_image(v12, #q10, #y6, v17, v10, v11)`.
           
           *   Then move v12 to the imaging position for v18 with `move(v12, #q10, #o2, #q11)`
           
           *   Next, I have v12 take the image of objective v18:
               *   `calibrate(v12, #q11, #y7, v18, v10)` and then `take_image(v12, #q11, #y7, v18, v10, v11)`.
           
           *   Next, move to comms config for sending the images with `move(v12, #q11, #t22, #q1)`
           
           *   Now, I have v12 send the images of the objectives:
               *   `send_image(v12, #q1, #y1, v9, v19, v11)`, then
               *   `send_image(v12, #q1, #y1, v9, v17, v11)`, and finally
               *   `send_image(v12, #q1, #y1, v9, v18, v11)`.
           
           **Rover v14: Sampling & Analysis**
           
           *   First, v14 needs to get to the location to sample a type `v2` rock. I'll have it move there with `move(v14, v15, #o2, #o5)`.
           *   Next it will sample a rock of type `v2` with `sample_rock(v14, #o5, v3, v16)`.
           *   Then v14 needs to move to comms position with `move(v14, #o5, #o2, #q0)`.
           *   Now, v14 sends the analysis of the `v2` rock with `send_analysis(v14, #q0, #y0, v9, v3)`.
           *   To make sure v14's store is `free` for the next rock sampling, use `drop_rock(v14, v16)`.
           *   Next v14 needs to move to the sampling location for `v6` rocks with `move(v14, #q0, #t12, #q7)`.
           *   Now v14 samples a rock of type `v6` with `sample_rock(v14, #q7, v5, v16)

