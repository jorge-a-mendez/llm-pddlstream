User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom rock(v7)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rock(v5)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom rover(v14)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q2, #y2, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #q10, v5)
           Atom conf(v14, #q10)
           Atom imagevisible(v12, #q8, #y5, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t1, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q2, #t8, #q1)
           Atom motion(v14, v15, #t3, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q1, #t22, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q10, #t19, #q1)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, v15, #t20, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t21, #q11)
           Atom motion(v14, #q1, #t23, #q11)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t2, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #t6, #q3)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q6, #t17, #q0)
           Atom motion(v12, #q3, #t9, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t16, v13)
           Atom motion(v12, #q0, #t14, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #t10, #q0)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #t5, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #t13, #q0)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q0, #t12, #q7)
           Atom motion(v12, #q8, #t18, #q0)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q0, #t15, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v5 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #t12 #q7))
           ((move v12 #q0 #t14 #q6))
           ((move v12 #q0 #t15 #q8))
           ((move v12 #q0 #t16 v13))
           ((move v12 #q0 #t6 #q3))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t2 v13))
           ((move v12 #q3 #t9 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t17 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t18 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t5 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t1 v15))
           ((move v14 #q1 #t22 #q10))
           ((move v14 #q1 #t23 #q11))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q1))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t8 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q10))
           ((move v14 v15 #t21 #q11))
           ((move v14 v15 #t3 #q2))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a camera (v10), a lander (v9), a storage unit (v16), and several rocks (v7, v5, v8, v3, v4, v1). There are also objectives (v18, v17) to image and a mode (v11) for the camera. Both rovers have the camera and storage onboard. Initially, both rovers are at specific configurations (v12 at v13, v14 at v15) and their storage is free.
           
           The goal `new-axiom@0()` represents a complex state, which breaks down into several sub-goals:
           1. `atconf(v12, v13)`: Rover v12 must be at configuration v13. (Already true)
           2. `atconf(v14, v15)`: Rover v14 must be at configuration v15. (Already true)
           3. `free(v12, v16)`: Rover v12's storage must be free. (Already true)
           4. `free(v14, v16)`: Rover v14's storage must be free. (Already true)
           5. `receivedimage(v17, v11)`: An image of objective v17 in mode v11 must be received by the lander.
           6. `receivedimage(v18, v11)`: An image of objective v18 in mode v11 must be received by the lander.
           7. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 must have its analysis received.
           8. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 must have its analysis received.
           
           Let's break down how to achieve the unfulfilled sub-goals:
           
           For `receivedimage(v17, v11)`:
              - Either rover v12 or v14 can take and send the image.
              - Rover v12: `imagevisible(v12, #q6, #y4, v17)`, `comvisible(v12, #q0, #y0, v9)`
              - Rover v14: `imagevisible(v14, #q2, #y2, v17)`, `comvisible(v14, #q1, #y1, v9)`
              - To send an image, the rover needs to be calibrated, take the image, and then send it.
           
           For `receivedimage(v18, v11)`:
              - Either rover v12 or v14 can take and send the image.
              - Rover v12: `imagevisible(v12, #q8, #y5, v18)`, `comvisible(v12, #q0, #y0, v9)`
              - Rover v14: `imagevisible(v14, #q5, #y3, v18)`, `comvisible(v14, #q1, #y1, v9)`
              - Same steps as above: calibrate, take, send.
           
           For `receivedanalysis(?stone)` (type v2):
              - Rocks of type v2 are v1, v3, v4.
              - Rover v12 can sample v1 at #q4, v3 at #q9, v4 at #o5.
              - Rover v14 can sample v1 at #q11, v3 at #o5, v4 at #o5.
              - To send analysis, the rover needs to sample the rock first, then send the analysis.
           
           For `receivedanalysis(?soil)` (type v6):
              - Rocks of type v6 are v7, v5, v8.
              - Rover v12 can sample v7 at #q7, v5 at #q3, v8 at #o5.
              - Rover v14 can sample v7 at #o5, v5 at #q10, v8 at #o5.
              - Same steps: sample, then send.
           
           We can achieve all image and analysis goals. Let's pick one rover for each imaging task and one for each analysis task. Rover v12 will handle imaging v17 and analyzing a type v6 rock, while rover v14 will handle imaging v18 and analyzing a type v2 rock. We need to make sure the rovers are at the correct configurations for each action and then move to a configuration where they can send data to the lander.
           
           For rover v12:
           - Calibrate for v17 at #q6.
           - Take image of v17 at #q6.
           - Move to #q0 (comvisible)
           - Send image of v17.
           - Sample v7 (type v6) at #q7.
           - Move to #q0 (comvisible)
           - Send analysis of v7.
           
           For rover v14:
           - Calibrate for v18 at #q5.
           - Take image of v18 at #q5.
           - Move to #q1 (comvisible)
           - Send image of v18.
           - Sample v1 (type v2) at #q11.
           - Move to #q1 (comvisible)
           - Send analysis of v1.
           
           Let's verify the movements and preconditions carefully.
           
           Rover v12 is at v13.
           1. To calibrate and take image of v17, it needs to be at #q6. `(move v12 v13 #t11 #q6)`
           2. `(calibrate v12 #q6 #y4 v17 v10)`
           3. `(take_image v12 #q6 #y4 v17 v10 v11)` (This will uncalibrate v10)
           4. To send image, it needs to be at #q0. `(move v12 #q6 #t17 #q0)`
           5. `(send_image v12 #q0 #y0 v9 v17 v11)`
           6. To sample rock v7 (type v6), it needs to be at #q7. `(move v12 #q0 #t12 #q7)`
           7. `(sample_rock v12 #q7 v7 v16)`
           8. To send analysis, it needs to be at #q0. `(move v12 #q7 #t13 #q0)`
           9. `(send_analysis v12 #q0 #y0 v9 v7)`
           
           Rover v14 is at v15.
           1. To calibrate and take image of v18, it needs to be at #q5. `(move v14 v15 #o2 #q5)`
           2. `(calibrate v14 #q5 #y3 v18 v10)`
           3. `(take_image v14 #q5 #y3 v18 v10 v11)` (This will uncalibrate v10)
           4. To send image, it needs to be at #q1. `(move v14 #q5 #o2 #q1)`
           5. `(send_image v14 #q1 #y1 v9 v18 v11)`
           6. To sample rock v1 (type v2), it needs to be at #q11. `(move v14 #q1 #t23 #q11)`
           7. `(sample_rock v14 #q11 v1 v16)`
           8. To send analysis, it needs to be at #q1. `(move v14 #q11 #o2 #q1)`
           9. `(send_analysis v14 #q1 #y1 v9 v1)`
           
           The order of actions between different rovers does not matter, but the order for a single rover is crucial. The camera `v10` is shared, but `calibrated` status is for `(calibrated ?c ?v)`. This implies that `calibrated(v10, v12)` and `calibrated(v10, v14)` are independent. So, one rover using the camera doesn't uncalibrate it for the other.
           
           Final check on the goal state:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: Rover v12 ends at #q0, not v13. Rover v14 ends at #q1, not v15. This means we will need to add movement actions at the end to return to these configurations.
               - For v12: `(move v12 #q0 #t16 v13)`
               - For v14: `(move v14 #q1 #t1 v15)`
           - `free(v12, v16)` and `free(v14, v16)`: Sampling rocks `full` the store. We need to `drop_rock` after sending analysis.
               - For v12: `(drop_rock v12 v16)` after sending analysis of v7.
               - For v14: `(drop_rock v14 v16)` after sending analysis of v1.
           - `receivedimage(v17, v11)`: Achieved.
           - `receivedimage(v18, v11)`: Achieved.
           - `receivedanalysis(v7)` (type v6): Achieved.
           - `receivedanalysis(v1)` (type v2): Achieved.
           
           The plan looks solid now.
           
           --Plan--:
           (move v12 v13 #t11 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t17 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t12 #q7)
           (sample_rock v12 #q7 v7 v16)
           (move v12 #q7 #t13 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #t16 v13)
           (move v14 v15 #o2 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #t23 #q11)
           (sample_rock v14 #q11 v1 v16)
           (move v14 #q11 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t1 v15)

