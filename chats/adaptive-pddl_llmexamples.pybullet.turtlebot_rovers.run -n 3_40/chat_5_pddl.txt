User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v5)
           Atom type(v8, v6)
           Atom store(v16)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom rock(v8)
           Atom rover(v12)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom rock(v7)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q9, #y3, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y3)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom comvisible(v12, #q10, #y4, v9)
           Atom comrange(v12, #q10, v9)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q6, v1)
           Atom conf(v14, #q6)
           Atom above(v14, #q7, v7)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v7)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #t0, #q2)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q7, #t9, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t11, v15)
           Atom motion(v14, #q0, #t14, #q3)
           Atom motion(v14, #q0, #t22, #q1)
           Atom motion(v14, #q3, #t4, #q0)
           Atom motion(v14, #q2, #t5, #q0)
           Atom motion(v14, #q1, #t3, #q0)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q0, #t13, #q5)
           Atom motion(v14, #q5, #t7, #q0)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t19, v13)
           Atom motion(v12, #q12, #t23, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, v13, #t21, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #t6, #q0)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q8, #t10, #q0)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v12, #q10, #t16, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #t17, #q10)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #t20, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, v15, #t18, #q9)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #t12, #q0)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q0, #t15, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t8, #q0)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q12)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q12, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q6 v1 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q12))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #t16 #q11))
           ((move v12 #q10 #t19 v13))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t17 #q10))
           ((move v12 #q12 #o2 #o3))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t23 #q10))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t20 #q11))
           ((move v12 v13 #t21 #q12))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #t0 #q2))
           ((move v14 #q0 #t11 v15))
           ((move v14 #q0 #t13 #q5))
           ((move v14 #q0 #t14 #q3))
           ((move v14 #q0 #t15 #q9))
           ((move v14 #q0 #t22 #q1))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t5 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t4 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t6 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t8 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t9 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t10 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t12 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((move v14 v15 #t18 #q9))
           ((move v14 v15 #t2 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q9 #y3 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q9 #y3 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q10 #y4 v9 v1))
           ((send_analysis v12 #q10 #y4 v9 v4))
           ((send_analysis v12 #q10 #y4 v9 v7))
           ((send_analysis v12 #q10 #y4 v9 v8))
           ((send_analysis v12 #q10 #y4 v9 v3))
           ((send_analysis v12 #q10 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_image v12 #q10 #y4 v9 v17 v11))
           ((send_image v12 #q10 #y4 v9 v18 v11))
           ((send_image v12 #q10 #y4 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The rovers are at specific configurations (v13 for v12, v15 for v14). The camera v10 is onboard both rovers and supports mode v11. The store v16 is free for both rovers. There are various possible motions for each rover to different configurations, and numerous image and communication visibility links between rovers, objectives, and the lander. Rocks are also associated with types, which are soil (v6) or stone (v2).
           
           The goal is to satisfy `new-axiom@0()`. This axiom has many preconditions, but the crucial ones we can affect are:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedanalysis(?stone)` (for rocks of type v2)
           - `receivedanalysis(?soil)` (for rocks of type v6)
           
           To achieve the `receivedimage` predicates, a rover needs to:
           1. Calibrate its camera for the objective.
           2. Take an image of the objective.
           3. Send the image to the lander.
           
           To achieve the `receivedanalysis` predicates, a rover needs to:
           1. Sample a rock.
           2. Send the analysis of the rock to the lander.
           
           Let's focus on Rover v14, as it has many initial visible image and communication links.
           
           For `receivedimage`:
           - Objective v17: `imagevisible(v14, #q3, #y2, v17)`, `comvisible(v14, #q0, #y0, v9)`
           - Objective v18: `imagevisible(v14, #q1, #y1, v18)`, `comvisible(v14, #q0, #y0, v9)`
           - Objective v19: `imagevisible(v14, #q9, #y3, v19)`, `comvisible(v14, #q0, #y0, v9)`
           
           For `receivedanalysis`:
           - We need to sample at least one rock of type v2 (stone) and one of type v6 (soil).
             - Rocks of type v2: v1, v3, v4.
             - Rocks of type v6: v5, v7, v8.
           - Rover v14 has above links for:
             - v3 (type v2): `above(v14, #q2, v3)`
             - v4 (type v2): `above(v14, #q8, v4)`
             - v1 (type v2): `above(v14, #q6, v1)`
             - v8 (type v6): `above(v14, #q4, v8)`
             - v5 (type v6): `above(v14, #q5, v5)`
             - v7 (type v6): `above(v14, #q7, v7)`
           - Rover v14 also has `free(v14, v16)` which means it can sample.
           
           The plan will involve moving to the appropriate configurations, calibrating, taking images, sending images, sampling rocks, and sending analysis.
           
           Let's pick specific rocks for analysis:
           - Stone (type v2): v3 (at #q2)
           - Soil (type v6): v5 (at #q5)
           
           The rover v14 is initially at v15.
           
           Plan Strategy:
           1. Move to #q3 to image v17.
           2. Calibrate, take image, send image for v17.
           3. Move to #q1 to image v18.
           4. Calibrate, take image, send image for v18.
           5. Move to #q9 to image v19.
           6. Calibrate, take image, send image for v19.
           7. Move to #q2 to sample v3 (stone).
           8. Move to #q0 to send analysis of v3.
           9. Move to #q5 to sample v5 (soil).
           10. Move to #q0 to send analysis of v5.
           
           --Plan--:
           (move v14 v15 #t2 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t4 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t22 #q1)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (move v14 #q1 #t3 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t15 #q9)
           (calibrate v14 #q9 #y3 v19 v10)
           (take_image v14 #q9 #y3 v19 v10 v11)
           (move v14 #q9 #t12 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (move v14 #q0 #t0 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t5 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (move v14 #q0 #t13 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t7 #q0)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`. This is an axiom which is a conjunction of many atoms including:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: These are true in the initial state and are maintained as long as the rovers return to their initial positions or don't move. However, the action `move` changes the `atconf` predicate. The axiom doesn't require them to be at these configurations *after* the plan, but it is a complex axiom that combines initial state facts with derived facts.
           - `free(v12, v16)` and `free(v14, v16)`: These are true in the initial state. Sampling a rock changes `free` to `full`. We must `drop_rock` if we want to sample more than one rock with the same rover or if the goal specifically requires `free` to be true at the end. The axiom seems to require `free` for both v12 and v14.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: These were addressed in the previous plan.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: This means for any rock of type `v2` (stone), its analysis must be received. The previous plan only sampled `v3`. We need to ensure that *all* rocks of type `v2` for which `receivedanalysis` is a goal are analyzed. From the initial state and the axiom, we need to make sure that at least one rock of type `v2` is analyzed.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: Similar to above, for any rock of type `v6` (soil), its analysis must be received. The previous plan only sampled `v5`. We need to ensure that at least one rock of type `v6` is analyzed.
           
           The axiom `new-axiom@0()` is defined as a conjunction where `receivedanalysis(?stone)` (where `?stone` is a rock of type `v2`) and `receivedanalysis(?soil)` (where `?soil` is a rock of type `v6`) are part of the conjunction. This means at least one rock of type `v2` and at least one rock of type `v6` must have their analysis received. It doesn't mean *all* rocks of that type need to be analyzed, but at least one.
           
           The `atconf` predicates for `v12` and `v14` are also part of the final state in the axiom. My previous plan did not ensure that `v14` returned to `v15` or `v12` to `v13`. We need to ensure that at the end of the plan, `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           
           Let's refine the plan to account for these.
           Rover v14 is at v15 initially.
           Rover v12 is at v13 initially.
           Both `free(v12, v16)` and `free(v14, v16)` must be true at the end. If a rover samples, it must drop the rock to make the store `free` again.
           
           Revised Plan Strategy:
           1. Ensure `atconf(v14, v15)` and `atconf(v12, v13)` at the end.
           2. Ensure `free(v14, v16)` and `free(v12, v16)` at the end (means dropping rocks after sampling).
           3. Calibrate, take and send images for v17, v18, v19 using v14.
           4. Sample a type v2 rock (e.g., v3 at #q2 for v14), send analysis, then drop it.
           5. Sample a type v6 rock (e.g., v5 at #q5 for v14), send analysis, then drop it.
           
           Let's proceed with v14 for all tasks, returning to v15 at the end, and dropping rocks to maintain free store.
           
           --Plan--:
           (move v14 v15 #t2 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t4 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t22 #q1)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (move v14 #q1 #t3 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t15 #q9)
           (calibrate v14 #q9 #y3 v19 v10)
           (take_image v14 #q9 #y3 v19 v10 v11)
           (move v14 #q9 #t12 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (move v14 #q0 #t0 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t5 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q0 #t13 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t7 #q0)
           (send_analysis v14 #q0 #y0 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q0 #t11 v15)

