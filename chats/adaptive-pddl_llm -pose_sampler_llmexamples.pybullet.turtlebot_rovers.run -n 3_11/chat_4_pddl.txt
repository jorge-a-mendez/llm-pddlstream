User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom rock(v1)
           Atom mode(v11)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom rover(v12)
           Atom rock(v7)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q12, v7)
           Atom conf(v14, #q12)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q3, v3)
           Atom conf(v14, #q3)
           Atom above(v14, #q5, v8)
           Atom conf(v14, #q5)
           Atom above(v14, #q13, v5)
           Atom conf(v14, #q13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q9, #y6, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom imagevisible(v14, #q2, #y2, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #q8, #y5, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q10, #y7, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q14, v1)
           Atom conf(v14, #q14)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom motion(v12, v13, #t15, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t26, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q3, #t4, #q1)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, #q1, #t2, #q3)
           Atom motion(v14, #q1, #t25, #q15)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q6, #t8, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t13, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #t14, #q6)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #t24, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #t17, #q1)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q1, #t22, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q0, #t5, #q1)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q1, #t18, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #t20, #q1)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #t9, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #t10, #q6)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, v13, #t16, #q11)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #t12, #q6)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q6, #t19, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q1, #t23, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t6, #q1)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #t11, #q6)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #t7, #q1)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q13 v5 v16))
           ((sample_rock v14 #q14 v1 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q3 v3 v16))
           ((sample_rock v14 #q5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t12 #q6))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t13 v13))
           ((move v12 #q6 #t19 #q10))
           ((move v12 #q6 #t8 #q7))
           ((move v12 #q6 #t9 #q8))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q6))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t11 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t16 #q11))
           ((move v12 v13 #t21 #q9))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t5 #q1))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t18 #q5))
           ((move v14 #q1 #t2 #q3))
           ((move v14 #q1 #t22 #q12))
           ((move v14 #q1 #t23 #q13))
           ((move v14 #q1 #t24 #q14))
           ((move v14 #q1 #t25 #q15))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t17 #q1))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q1))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t4 #q1))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t20 #q1))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t26 #q3))
           ((calibrate v12 #q10 #y7 v19 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v12 #q9 #y6 v17 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q2 #y2 v18 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((take_image v12 #q10 #y7 v19 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v12 #q9 #y6 v17 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y2 v18 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard that supports mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of different types (`v2` for `v1`, `v3`, `v4` and `v6` for `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`). Both rovers have a store `v16` that is currently free.
           
           The goal is `new-axiom@0()`, which is a conjunction of several conditions. From the axioms, this means:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have a free store. This is true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: Images of all three objectives (`v17`, `v18`, `v19`) must be taken in mode `v11` and sent to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Rocks of type `v2` (which are `v1`, `v3`, `v4`) must be analyzed and the analysis sent to the lander.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Rocks of type `v6` (which are `v5`, `v7`, `v8`) must be analyzed and the analysis sent to the lander.
           
           To achieve the goal, both rovers will need to:
           - Take images of the three objectives (`v17`, `v18`, `v19`) using camera `v10` in mode `v11`, calibrate the camera first, and then send the images.
           - Sample and analyze all the rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and send the analysis. Since there are 6 rocks and only one store per rover, they will need to sample, send analysis, drop, and repeat.
           
           Let's break down the plan:
           First, rover `v14` will handle objective `v17` and analyze rock `v3`.
           Second, rover `v12` will handle objective `v18` and analyze rock `v5`.
           Third, rover `v14` will handle objective `v19` and analyze rock `v7`.
           Fourth, rover `v12` will analyze rock `v1`.
           Fifth, rover `v14` will analyze rock `v4`.
           Sixth, rover `v12` will analyze rock `v8`.
           
           Plan for Images:
           1. Rover `v14` will calibrate its camera for `v17` at `#q4`.
           2. Rover `v14` will take an image of `v17`.
           3. Rover `v14` will move to `#q1` (a communication point) and send the image of `v17`.
           4. Rover `v12` will calibrate its camera for `v18` at `#q8`.
           5. Rover `v12` will take an image of `v18`.
           6. Rover `v12` will move to `#q6` (a communication point) and send the image of `v18`.
           7. Rover `v14` will calibrate its camera for `v19` at `#q0`.
           8. Rover `v14` will take an image of `v19`.
           9. Rover `v14` will send the image of `v19` from `#q1`.
           
           Plan for Rock Analysis:
           Each rover has one store, so they will need to sample a rock, send the analysis, and then drop the rock to free up the store for the next sample.
           
           Rover `v14` is currently at `v15`.
           Rover `v12` is currently at `v13`.
           
           For rocks of type `v2` (v1, v3, v4):
           - v3: above v14 at #q3.
           - v1: above v14 at #q14, above v12 at #q11.
           - v4: above v14 at #q15, above v12 at #o5.
           
           For rocks of type `v6` (v5, v7, v8):
           - v5: above v14 at #q13, above v12 at #q7.
           - v7: above v14 at #q12, above v12 at #o5.
           - v8: above v14 at #q5, above v12 at #o5.
           
           Rover `v14` tasks:
           1. Calibrate `v10` for `v17` at `#q4`.
           2. Take image of `v17`.
           3. Move to `#q1` and send image of `v17`.
           4. Move to `#q3` to sample `v3`.
           5. Sample `v3`.
           6. Move to `#q1` and send analysis of `v3`.
           7. Drop `v3`.
           8. Calibrate `v10` for `v19` at `#q0`.
           9. Take image of `v19`.
           10. Send image of `v19` from `#q1`.
           11. Move to `#q12` to sample `v7`.
           12. Sample `v7`.
           13. Move to `#q1` and send analysis of `v7`.
           14. Drop `v7`.
           15. Move to `#q14` to sample `v1`.
           16. Sample `v1`.
           17. Move to `#q1` and send analysis of `v1`.
           18. Drop `v1`.
           19. Move to `#q15` to sample `v4`.
           20. Sample `v4`.
           21. Move to `#q1` and send analysis of `v4`.
           22. Drop `v4`.
           23. Move to `#q5` to sample `v8`.
           24. Sample `v8`.
           25. Move to `#q1` and send analysis of `v8`.
           26. Drop `v8`.
           27. Move to `#q13` to sample `v5`.
           28. Sample `v5`.
           29. Move to `#q1` and send analysis of `v5`.
           30. Drop `v5`.
           
           This is more efficient if the rovers collaborate. Let's try to assign tasks to minimize movement and maximize parallel execution.
           
           The goal is for *all* objectives to be imaged and all rocks analyzed.
           
           Images:
           - `v17` can be imaged by `v14` at `#q4` or `v12` at `#q9`.
           - `v18` can be imaged by `v14` at `#q2` or `v12` at `#q8`.
           - `v19` can be imaged by `v14` at `#q0` or `v12` at `#q10`.
           
           Rocks (type `v2` - stone: `v1`, `v3`, `v4` | type `v6` - soil: `v5`, `v7`, `v8`):
           - `v1`: `v12` at `#q11`, `v14` at `#q14`.
           - `v3`: `v12` at `#o5`, `v14` at `#q3`.
           - `v4`: `v12` at `#o5`, `v14` at `#q15`.
           - `v5`: `v12` at `#q7`, `v14` at `#q13`.
           - `v7`: `v12` at `#o5`, `v14` at `#q12`.
           - `v8`: `v12` at `#o5`, `v14` at `#q5`.
           
           Communication points:
           - `v12`: `#q6`
           - `v14`: `#q1`
           
           Let's plan for `v14` to handle one image and a few rocks, and `v12` to handle the other two images and the remaining rocks.
           
           Rover `v14` (initial at `v15`, comm at `#q1`):
           1. Calibrate for `v17` at `#q4`.
           2. Take image of `v17`.
           3. Move to `#q1` to send image of `v17`.
           4. Send image of `v17`.
           5. Move to `#q3` to sample `v3`.
           6. Sample `v3`.
           7. Move to `#q1` to send analysis of `v3`.
           8. Send analysis of `v3`.
           9. Drop `v3`.
           10. Move to `#q12` to sample `v7`.
           11. Sample `v7`.
           12. Move to `#q1` to send analysis of `v7`.
           13. Send analysis of `v7`.
           14. Drop `v7`.
           15. Move to `#q14` to sample `v1`.
           16. Sample `v1`.
           17. Move to `#q1` to send analysis of `v1`.
           18. Send analysis of `v1`.
           19. Drop `v1`.
           
           Rover `v12` (initial at `v13`, comm at `#q6`):
           1. Calibrate for `v18` at `#q8`.
           2. Take image of `v18`.
           3. Move to `#q6` to send image of `v18`.
           4. Send image of `v18`.
           5. Calibrate for `v19` at `#q10`.
           6. Take image of `v19`.
           7. Send image of `v19`.
           8. Move to `#q7` to sample `v5`.
           9. Sample `v5`.
           10. Move to `#q6` to send analysis of `v5`.
           11. Send analysis of `v5`.
           12. Drop `v5`.
           13. Move to `#o5` to sample `v4`.
           14. Sample `v4`.
           15. Move to `#q6` to send analysis of `v4`.
           16. Send analysis of `v4`.
           17. Drop `v4`.
           18. Move to `#o5` to sample `v8`.
           19. Sample `v8`.
           20. Move to `#q6` to send analysis of `v8`.
           21. Send analysis of `v8`.
           22. Drop `v8`.
           
           This plan covers all objectives and all rocks.
           
           --Plan--:
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 v15 #q3 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t2 #q3)
           (sample_rock v14 #q3 v3 v16)
           (move v14 #q3 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 v13 #t13 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q1 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t22 #q12)
           (sample_rock v14 #q12 v7 v16)
           (move v14 #q12 #t17 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v12 #q6 #t8 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t14 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v14 #q1 #t24 #q14)
           (sample_rock v14 #q14 v1 v16)
           (move v14 #q14 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided contains the following invalid actions: `(move v14 v15 #q3 #q1), (move v12 v13 #t13 #q6), (move v14 #q1 #t5 #q1)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q13 v5 v16))
           ((sample_rock v14 #q14 v1 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q3 v3 v16))
           ((sample_rock v14 #q5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t12 #q6))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t13 v13))
           ((move v12 #q6 #t19 #q10))
           ((move v12 #q6 #t8 #q7))
           ((move v12 #q6 #t9 #q8))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q6))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t11 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t16 #q11))
           ((move v12 v13 #t21 #q9))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t5 #q1))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t18 #q5))
           ((move v14 #q1 #t2 #q3))
           ((move v14 #q1 #t22 #q12))
           ((move v14 #q1 #t23 #q13))
           ((move v14 #q1 #t24 #q14))
           ((move v14 #q1 #t25 #q15))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t17 #q1))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q1))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t4 #q1))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t20 #q1))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t26 #q3))
           ((calibrate v12 #q10 #y7 v19 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v12 #q9 #y6 v17 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q2 #y2 v18 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((take_image v12 #q10 #y7 v19 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v12 #q9 #y6 v17 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y2 v18 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     I apologize for the errors in the previous plan. I will correct the invalid move actions by only using the provided valid action instances.
           
           Let's re-examine the plan carefully, ensuring each action is from the provided valid action instances.
           
           Initial state:
           - `v14` at `v15`
           - `v12` at `v13`
           
           Rover `v14` (initial at `v15`, comm at `#q1`):
           1. Calibrate for `v17` at `#q4`. (Need to move to `#q4` first if not already there, then calibrate. `v14` is at `v15`. `(move v14 v15 #o2 #q4)` is not a valid action. However, `(move v14 v15 #o2 #q4)` is not valid, but `(move v14 v15 #o2 #q4)` is listed, so `(move v14 v15 #o2 #q4)` is good. Wait, `(move v14 v15 #o2 #q4)` isn't there, but `(move v14 v15 #o2 #q4)` is. This is tricky. Let's re-verify the available actions again. It seems `#o2` is always used as a continuous parameter. So `(move v14 v15 #o2 #q4)` is a valid general action, but the specific instance `(move v14 v15 #o2 #q4)` needs to be in the list. It is in the list as `((move v14 v15 #o2 #q4))`. So this is fine.
           2. `(calibrate v14 #q4 #y3 v17 v10)` - valid.
           3. `(take_image v14 #q4 #y3 v17 v10 v11)` - valid.
           4. Move to `#q1` from `#q4`. `(move v14 #q4 #t7 #q1)` - valid.
           5. `(send_image v14 #q1 #y1 v9 v17 v11)` - valid.
           6. Move to `#q3` from `#q1`. `(move v14 #q1 #t2 #q3)` - valid.
           7. `(sample_rock v14 #q3 v3 v16)` - valid.
           8. Move to `#q1` from `#q3`. `(move v14 #q3 #t4 #q1)` - valid.
           9. `(send_analysis v14 #q1 #y1 v9 v3)` - valid.
           10. `(drop_rock v14 v16)` - valid.
           11. Calibrate for `v19` at `#q0`. Need to move to `#q0` from `#q1`. `(move v14 #q1 #o2 #q0)` is listed. Let's find one with a specific `t`. `(move v14 #q0 #t5 #q1)` is listed. This is the reverse. `(move v14 v15 #t0 #q0)` from `v15` to `#q0`. So, rover `v14` has to be at `v15` to go to `#q0` directly with `t0`. Since it is at `#q1`, it should move from `#q1` to `#q0`. `(move v14 #q1 #o2 #q0)` is present.
           12. `(calibrate v14 #q0 #y0 v19 v10)` - valid.
           13. `(take_image v14 #q0 #y0 v19 v10 v11)` - valid.
           14. Move to `#q1` from `#q0`. `(move v14 #q0 #t5 #q1)` - valid.
           15. `(send_image v14 #q1 #y1 v9 v19 v11)` - valid.
           16. Move to `#q12` from `#q1`. `(move v14 #q1 #t22 #q12)` - valid.
           17. `(sample_rock v14 #q12 v7 v16)` - valid.
           18. Move to `#q1` from `#q12`. `(move v14 #q12 #t17 #q1)` - valid.
           19. `(send_analysis v14 #q1 #y1 v9 v7)` - valid.
           20. `(drop_rock v14 v16)` - valid.
           21. Move to `#q14` from `#q1`. `(move v14 #q1 #t24 #q14)` - valid.
           22. `(sample_rock v14 #q14 v1 v16)` - valid.
           23. Move to `#q1` from `#q14`. `(move v14 #q14 #o2 #q1)` - valid.
           24. `(send_analysis v14 #q1 #y1 v9 v1)` - valid.
           25. `(drop_rock v14 v16)` - valid.
           
           Rover `v12` (initial at `v13`, comm at `#q6`):
           1. Calibrate for `v18` at `#q8`. Need to move to `#q8` from `v13`. `(move v12 v13 #o2 #q8)` is present.
           2. `(calibrate v12 #q8 #y5 v18 v10)` - valid.
           3. `(take_image v12 #q8 #y5 v18 v10 v11)` - valid.
           4. Move to `#q6` from `#q8`. `(move v12 #q8 #t10 #q6)` - valid.
           5. `(send_image v12 #q6 #y4 v9 v18 v11)` - valid.
           6. Move to `#q7` from `#q6`. `(move v12 #q6 #t8 #q7)` - valid.
           7. `(sample_rock v12 #q7 v5 v16)` - valid.
           8. Move to `#q6` from `#q7`. `(move v12 #q7 #t14 #q6)` - valid.
           9. `(send_analysis v12 #q6 #y4 v9 v5)` - valid.
           10. `(drop_rock v12 v16)` - valid.
           11. Move to `#o5` from `#q6`. `(move v12 #q6 #o2 #o5)` - valid.
           12. `(sample_rock v12 #o5 v4 v16)` - valid.
           13. Move to `#q6` from `#o5`. `(move v12 #o5 #o2 #q6)` - valid.
           14. `(send_analysis v12 #q6 #y4 v9 v4)` - valid.
           15. `(drop_rock v12 v16)` - valid.
           16. Move to `#o5` from `#q6`. `(move v12 #q6 #o2 #o5)` - valid.
           17. `(sample_rock v12 #o5 v8 v16)` - valid.
           18. Move to `#q6` from `#o5`. `(move v12 #o5 #o2 #q6)` - valid.
           19. `(send_analysis v12 #q6 #y4 v9 v8)` - valid.
           20. `(drop_rock v12 v16)` - valid.
           
           This revised plan uses only valid actions.
           
           --Plan--:
           (move v14 v15 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t7 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t2 #q3)
           (sample_rock v14 #q3 v3 v16)
           (move v14 #q3 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v12 v13 #o2 #q8)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 #q8 #t10 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t22 #q12)
           (sample_rock v14 #q12 v7 v16)
           (move v14 #q12 #t17 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v12 #q6 #t8 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t14 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v14 #q1 #t24 #q14)
           (sample_rock v14 #q14 v1 v16)
           (move v14 #q14 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     I apologize for the oversight. The previous plan did not satisfy the goal because not all rocks were analyzed, and some movements were not optimal given the available continuous parameters for certain transitions. I need to ensure all rock types (`v2` and `v6`) are analyzed and all images are received.
           
           Let's re-strategize based on the goals and available actions.
           
           Goals:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedimage(v19, v11)`
           4. `receivedanalysis(v1)` (type v2)
           5. `receivedanalysis(v3)` (type v2)
           6. `receivedanalysis(v4)` (type v2)
           7. `receivedanalysis(v5)` (type v6)
           8. `receivedanalysis(v7)` (type v6)
           9. `receivedanalysis(v8)` (type v6)
           
           Both rovers (`v12`, `v14`) have a camera (`v10`) and a store (`v16`).
           `v12` is at `v13`, comm at `#q6`.
           `v14` is at `v15`, comm at `#q1`.
           
           Let's try to assign all tasks.
           
           **Rover v14 (starting at v15, comm at #q1):**
           - Images: `v17` (at `#q4`), `v19` (at `#q0`).
           - Rocks: `v3` (type v2, at `#q3`), `v7` (type v6, at `#q12`), `v1` (type v2, at `#q14`).
           
           **Rover v12 (starting at v13, comm at #q6):**
           - Images: `v18` (at `#q8`).
           - Rocks: `v5` (type v6, at `#q7`), `v4` (type v2, at `#o5`), `v8` (type v6, at `#o5`).
           
           This allocation ensures all goals are covered. Now, let's build the plan carefully, verifying each action.
           
           **Plan for Rover v14:**
           1.  **Image v17:**
               *   `v14` moves from `v15` to `#q4`. Valid action: `(move v14 v15 #o2 #q4)` is not in the list. Wait, `(move v14 v15 #o2 #q4)` means a general move from v15 to q4. In the list, `((move v14 v15 #o2 #q4))` indicates that specific continuous parameter for this move is `#o2`. This is a valid action if listed. Oh, it seems that there's `((move v14 v15 #o2 #q4))`. It *is* in the list, so I can use it.
               *   `v14` calibrates at `#q4`. Valid: `(calibrate v14 #q4 #y3 v17 v10)`.
               *   `v14` takes image of `v17`. Valid: `(take_image v14 #q4 #y3 v17 v10 v11)`.
               *   `v14` moves from `#q4` to `#q1` (comm). Valid: `(move v14 #q4 #t7 #q1)`.
               *   `v14` sends image of `v17`. Valid: `(send_image v14 #q1 #y1 v9 v17 v11)`.
           
           2.  **Analyze v3:**
               *   `v14` moves from `#q1` to `#q3` (above `v3`). Valid: `(move v14 #q1 #t2 #q3)`.
               *   `v14` samples `v3`. Valid: `(sample_rock v14 #q3 v3 v16)`.
               *   `v14` moves from `#q3` to `#q1` (comm). Valid: `(move v14 #q3 #t4 #q1)`.
               *   `v14` sends analysis of `v3`. Valid: `(send_analysis v14 #q1 #y1 v9 v3)`.
               *   `v14` drops rock `v3`. Valid: `(drop_rock v14 v16)`.
           
           3.  **Image v19:**
               *   `v14` moves from `#q1` to `#q0`. Valid: `(move v14 #q1 #o2 #q0)`.
               *   `v14` calibrates at `#q0`. Valid: `(calibrate v14 #q0 #y0 v19 v10)`.
               *   `v14` takes image of `v19`. Valid: `(take_image v14 #q0 #y0 v19 v10 v11)`.
               *   `v14` moves from `#q0` to `#q1`. Valid: `(move v14 #q0 #t5 #q1)`.
               *   `v14` sends image of `v19`. Valid: `(send_image v14 #q1 #y1 v9 v19 v11)`.
           
           4.  **Analyze v7:**
               *   `v14` moves from `#q1` to `#q12` (above `v7`). Valid: `(move v14 #q1 #t22 #q12)`.
               *   `v14` samples `v7`. Valid: `(sample_rock v14 #q12 v7 v16)`.
               *   `v14` moves from `#q12` to `#q1` (comm). Valid: `(move v14 #q12 #t17 #q1)`.
               *   `v14` sends analysis of `v7`. Valid: `(send_analysis v14 #q1 #y1 v9 v7)`.
               *   `v14` drops rock `v7`. Valid: `(drop_rock v14 v16)`.
           
           5.  **Analyze v1:**
               *   `v14` moves from `#q1` to `#q14` (above `v1`). Valid: `(move v14 #q1 #t24 #q14)`.
               *   `v14` samples `v1`. Valid: `(sample_rock v14 #q14 v1 v16)`.
               *   `v14` moves from `#q14` to `#q1` (comm). Valid: `(move v14 #q14 #o2 #q1)`. (There's also `(move v14 #q14 #o2 #q1)` in the list).
               *   `v14` sends analysis of `v1`. Valid: `(send_analysis v14 #q1 #y1 v9 v1)`.
               *   `v14` drops rock `v1`. Valid: `(drop_rock v14 v16)`.
           
           **Plan for Rover v12:**
           1.  **Image v18:**
               *   `v12` moves from `v13` to `#q8`. Valid: `(move v12 v13 #o2 #q8)`.
               *   `v12` calibrates at `#q8`. Valid: `(calibrate v12 #q8 #y5 v18 v10)`.
               *   `v12` takes image of `v18`. Valid: `(take_image v12 #q8 #y5 v18 v10 v11)`.
               *   `v12` moves from `#q8` to `#q6` (comm). Valid: `(move v12 #q8 #t10 #q6)`.
               *   `v12` sends image of `v18`. Valid: `(send_image v12 #q6 #y4 v9 v18 v11)`.
           
           2.  **Analyze v5:**
               *   `v12` moves from `#q6` to `#q7` (above `v5`). Valid: `(move v12 #q6 #t8 #q7)`.
               *   `v12` samples `v5`. Valid: `(sample_rock v12 #q7 v5 v16)`.
               *   `v12` moves from `#q7` to `#q6` (comm). Valid: `(move v12 #q7 #t14 #q6)`.
               *   `v12` sends analysis of `v5`. Valid: `(send_analysis v12 #q6 #y4 v9 v5)`.
               *   `v12` drops rock `v5`. Valid: `(drop_rock v12 v16)`.
           
           3.  **Analyze v4:**
               *   `v12` moves from `#q6` to `#o5` (above `v4` and `v8`). Valid: `(move v12 #q6 #o2 #o5)`.
               *   `v12` samples `v4`. Valid: `(sample_rock v12 #o5 v4 v16)`.
               *   `v12` moves from `#o5` to `#q6` (comm). Valid: `(move v12 #o5 #o2 #q6)`.
               *   `v12` sends analysis of `v4`. Valid: `(send_analysis v12 #q6 #y4 v9 v4)`.
               *   `v12` drops rock `v4`. Valid: `(drop_rock v12 v16)`.
           
           4.  **Analyze v8:**
               *   `v12` moves from `#q6` to `#o5` (above `v8`). Valid: `(move v12 #q6 #o2 #o5)`.
               *   `v12` samples `v8`. Valid: `(sample_rock v12 #o5 v8 v16)`.
               *   `v12` moves from `#o5` to `#q6` (comm). Valid: `(move v12 #o5 #o2 #q6)`.
               *   `v12` sends analysis of `v8`. Valid: `(send_analysis v12 #q6 #y4 v9 v8)`.
               *   `v12` drops rock `v8`. Valid: `(drop_rock v12 v16)`.
           
           This sequence of actions should cover all conditions in `new-axiom@0()`.
           
           --Plan--:
           (move v14 v15 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t7 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t2 #q3)
           (sample_rock v14 #q3 v3 v16)
           (move v14 #q3 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t22 #q12)
           (sample_rock v14 #q12 v7 v16)
           (move v14 #q12 #t17 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t24 #q14)
           (sample_rock v14 #q14 v1 v16)
           (move v14 #q14 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v12 v13 #o2 #q8)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 #q8 #t10 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t8 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t14 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies once more. It seems I am still missing some critical aspects to fully satisfy the `new-axiom@0()` goal. I will meticulously review each part of the goal and the available actions to construct a correct plan.
           
           Let's break down the `new-axiom@0()` goal into its individual components and confirm how they are met:
           
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: These are the initial configurations and are satisfied at the start. No actions are needed to maintain them as the goal simply states they are at these initial configs. However, any movement actions will change these predicates. The goal is a conjunction which only needs to be true at the final state. But the specific form of the axiom means the rover *must* be at `v13` or `v15` respectively for these two conditions. This means both rovers need to return to their initial configurations after all tasks are done, *or* the axiom is more lenient. Looking closely at the axiom for `new-axiom@0()`, these `atconf` predicates are *not* part of the goal. The axiom is defined to combine other predicates. The goal is simply `new-axiom@0()`, which means the conjunction inside the axiom must be true.
           
           Let's re-examine the full `new-axiom@0()` axiom to clarify the goal:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)         <- This is a condition on the final state
               Atom atconf(v14, v15)         <- This is a condition on the final state
               Atom free(v12, v16)           <- This is a condition on the final state
               Atom free(v14, v16)           <- This is a condition on the final state
               Atom receivedimage(v17, v11)  <- Need to take and send image of v17
               Atom receivedimage(v18, v11)  <- Need to take and send image of v18
               Atom receivedimage(v19, v11)  <- Need to take and send image of v19
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone) <- Need to analyze rocks of type v2 (v1, v3, v4)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)  <- Need to analyze rocks of type v6 (v5, v7, v8)
           ```
           
           The key insight I've been missing is the `atconf` predicates *and* the `free` predicates must be true in the final state. This means after all sampling and image-taking, both rovers must return to their initial positions (`v13` for `v12`, `v15` for `v14`) and drop any rocks they sampled.
           
           Okay, let's build the plan again with these strict final state requirements.
           
           **Rover v14 (initial at v15, comm at #q1):**
           *   **Initial setup and tasks:**
               1.  Go to image location for `v17`. `v14` from `v15` to `#q4`. Valid: `(move v14 v15 #o2 #q4)`.
               2.  Calibrate camera. Valid: `(calibrate v14 #q4 #y3 v17 v10)`.
               3.  Take image. Valid: `(take_image v14 #q4 #y3 v17 v10 v11)`.
               4.  Go to comm location. `v14` from `#q4` to `#q1`. Valid: `(move v14 #q4 #t7 #q1)`.
               5.  Send image. Valid: `(send_image v14 #q1 #y1 v9 v17 v11)`.
               6.  Go to rock `v3` location. `v14` from `#q1` to `#q3`. Valid: `(move v14 #q1 #t2 #q3)`.
               7.  Sample `v3`. Valid: `(sample_rock v14 #q3 v3 v16)`.
               8.  Go to comm location. `v14` from `#q3` to `#q1`. Valid: `(move v14 #q3 #t4 #q1)`.
               9.  Send analysis `v3`. Valid: `(send_analysis v14 #q1 #y1 v9 v3)`.
               10. Drop `v3`. Valid: `(drop_rock v14 v16)`.
               11. Go to image location for `v19`. `v14` from `#q1` to `#q0`. Valid: `(move v14 #q1 #o2 #q0)`.
               12. Calibrate camera. Valid: `(calibrate v14 #q0 #y0 v19 v10)`.
               13. Take image. Valid: `(take_image v14 #q0 #y0 v19 v10 v11)`.
               14. Go to comm location. `v14` from `#q0` to `#q1`. Valid: `(move v14 #q0 #t5 #q1)`.
               15. Send image `v19`. Valid: `(send_image v14 #q1 #y1 v9 v19 v11)`.
               16. Go to rock `v7` location. `v14` from `#q1` to `#q12`. Valid: `(move v14 #q1 #t22 #q12)`.
               17. Sample `v7`. Valid: `(sample_rock v14 #q12 v7 v16)`.
               18. Go to comm location. `v14` from `#q12` to `#q1`. Valid: `(move v14 #q12 #t17 #q1)`.
               19. Send analysis `v7`. Valid: `(send_analysis v14 #q1 #y1 v9 v7)`.
               20. Drop `v7`. Valid: `(drop_rock v14 v16)`.
               21. Go to rock `v1` location. `v14` from `#q1` to `#q14`. Valid: `(move v14 #q1 #t24 #q14)`.
               22. Sample `v1`. Valid: `(sample_rock v14 #q14 v1 v16)`.
               23. Go to comm location. `v14` from `#q14` to `#q1`. Valid: `(move v14 #q14 #o2 #q1)`.
               24. Send analysis `v1`. Valid: `(send_analysis v14 #q1 #y1 v9 v1)`.
               25. Drop `v1`. Valid: `(drop_rock v14 v16)`.
               26. **Return to initial config `v15`.** `v14` from `#q1` to `v15`. Valid: `(move v14 #q1 #t3 v15)`.
           
           **Plan for Rover v12 (initial at v13, comm at #q6):**
           *   **Initial setup and tasks:**
               1.  Go to image location for `v18`. `v12` from `v13` to `#q8`. Valid: `(move v12 v13 #o2 #q8)`.
               2.  Calibrate camera. Valid: `(calibrate v12 #q8 #y5 v18 v10)`.
               3.  Take image. Valid: `(take_image v12 #q8 #y5 v18 v10 v11)`.
               4.  Go to comm location. `v12` from `#q8` to `#q6`. Valid: `(move v12 #q8 #t10 #q6)`.
               5.  Send image `v18`. Valid: `(send_image v12 #q6 #y4 v9 v18 v11)`.
               6.  Go to rock `v5` location. `v12` from `#q6` to `#q7`. Valid: `(move v12 #q6 #t8 #q7)`.
               7.  Sample `v5`. Valid: `(sample_rock v12 #q7 v5 v16)`.
               8.  Go to comm location. `v12` from `#q7` to `#q6`. Valid: `(move v12 #q7 #t14 #q6)`.
               9.  Send analysis `v5`. Valid: `(send_analysis v12 #q6 #y4 v9 v5)`.
               10. Drop `v5`. Valid: `(drop_rock v12 v16)`.
               11. Go to rock `v4` location. `v12` from `#q6` to `#o5`. Valid: `(move v12 #q6 #o2 #o5)`.
               12. Sample `v4`. Valid: `(sample_rock v12 #o5 v4 v16)`.
               13. Go to comm location. `v12` from `#o5` to `#q6`. Valid: `(move v12 #o5 #o2 #q6)`.
               14. Send analysis `v4`. Valid: `(send_analysis v12 #q6 #y4 v9 v4)`.
               15. Drop `v4`. Valid: `(drop_rock v12 v16)`.
               16. Go to rock `v8` location. `v12` from `#q6` to `#o5`. Valid: `(move v12 #q6 #o2 #o5)`.
               17. Sample `v8`. Valid: `(sample_rock v12 #o5 v8 v16)`.
               18. Go to comm location. `v12` from `#o5` to `#q6`. Valid: `(move v12 #o5 #o2 #q6)`.
               19. Send analysis `v8`. Valid: `(send_analysis v12 #q6 #y4 v9 v8)`.
               20. Drop `v8`. Valid: `(drop_rock v12 v16)`.
               21. **Return to initial config `v13`.** `v12` from `#q6` to `v13`. Valid: `(move v12 #q6 #t13 v13)`.
           
           This plan ensures all tasks are completed and both rovers return to their initial configurations with free stores.
           
           --Plan--:
           (move v14 v15 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t7 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t2 #q3)
           (sample_rock v14 #q3 v3 v16)
           (move v14 #q3 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t22 #q12)
           (sample_rock v14 #q12 v7 v16)
           (move v14 #q12 #t17 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t24 #q14)
           (sample_rock v14 #q14 v1 v16)
           (move v14 #q14 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t3 v15)
           (move v12 v13 #o2 #q8)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 #q8 #t10 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t8 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t14 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q6 #t13 v13)

