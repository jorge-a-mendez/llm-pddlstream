User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom camera(v10)
           Atom rock(v7)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom rover(v14)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom store(v16)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q5, v8)
           Atom conf(v12, #q5)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t14, #q7)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, v15, #t7, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q4, #t17, #q8)
           Atom motion(v12, #q4, #t13, #q3)
           Atom motion(v12, #q1, #t0, #q4)
           Atom motion(v12, #q3, #t1, #q4)
           Atom motion(v12, #q4, #t10, #q1)
           Atom motion(v12, #q4, #t9, v13)
           Atom motion(v12, #q4, #t11, #q6)
           Atom motion(v12, #q8, #t18, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t16, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #t12, #q4)
           Atom motion(v12, #q7, #t15, #q4)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #t8, #q4)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q4, #t2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v14, #q0, #t6, v15)
           Atom motion(v14, #q2, #t5, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q5 v8 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t10 #q1))
           ((move v12 #q4 #t11 #q6))
           ((move v12 #q4 #t13 #q3))
           ((move v12 #q4 #t16 #q7))
           ((move v12 #q4 #t17 #q8))
           ((move v12 #q4 #t2 #q5))
           ((move v12 #q4 #t9 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q4))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q4))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t18 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q7))
           ((move v12 v13 #t3 #q1))
           ((move v12 v13 #t4 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #t6 v15))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t5 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q2))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to New Axiom**
           
           Okay, here's my plan to achieve `new-axiom@0()` in the `rovers` domain. It's broken down into three main tasks: sending images, analyzing rocks, and making sure everything ends up in the right state.
           
           **1. Sending Images:** My initial assessment shows that I have the correct starting conditions to send some images. I'll need to figure out how to get images of each of those three objectives. Then I can send them.
           
           **2. Analyzing and Sending Analysis (Stone and Soil):** Looks like I'll use rover v14 for this task. Rover v14 is at the right location to sample rocks and there are rocks that I can access that will meet the specified stone and soil analysis requirements. To ensure that both requirements, `type(?stone)` and `type(?soil)`, are satisfied, I'll need to send analysis results for at least one stone and one soil sample.
           
           **Available Resources:**
           
           *   **Rovers:** v12 (at v13), v14 (at v15)
           *   **Camera:** v10 (on both v12 and v14, mode v11)
           *   **Store:** v16 (free on both)
           *   **Lander:** v9
           *   **Rocks:** Stone (v1, v3, v4), Soil (v5, v7, v8)
           *   **Objectives:** v17, v18, v19
           
           **Detailed Plan:**
           
           **Step 1. Sending Images (v12):**
           
           1.  **Move** rover v12 to take image #q1
           2.  **Calibrate** the camera
           3.  **Take** image for objective v18
           4.  **Move** rover v12 to take image #q3
           5.  **Calibrate** the camera
           6.  **Take** image for objective v19
           7.  **Move** rover v12 to take image #q6
           8.  **Calibrate** the camera
           9.  **Take** image for objective v17
           10. **Move** to communication to send.
           11. **Send** image for objective v18
           12. **Send** image for objective v19
           13. **Send** image for objective v17
           14. Move rover to starting configuration `v13`
           
           **Step 2. Analyzing and Sending Analysis (v14):**
           
           1.  **Move** rover v14 to a location (#o5) where it can sample stones and soil.
           2.  **Sample** the stone,  and analyze the sample
           3.  **Drop** the stone
           4.  **Sample** the soil, and analyze the sample
           5.  **Move** to a communication point.
           6.  **Send** analysis for the stone (v3)
           7.  **Send** analysis for the soil (v5)
           8.  **Drop** the soil
           9.  Move rover to starting location `v15`
           
           After all this, I am confident I'll have the goal achieved!
           
)

Model:     **The Path to New Axiom**
           
           Okay, here's my plan to achieve `new-axiom@0()` in the `rovers` domain. It's broken down into three main tasks: sending images, analyzing rocks, and making sure everything ends up in the right state.
           
           **1. Sending Images:** My initial assessment shows that I have the correct starting conditions to send some images. I'll need to figure out how to get images of each of those three objectives. Then I can send them.
           
           **2. Analyzing and Sending Analysis (Stone and Soil):** Looks like I'll use rover v14 for this task. Rover v14 is at the right location to sample rocks and there are rocks that I can access that will meet the specified stone and soil analysis requirements. To ensure that both requirements, `type(?stone)` and `type(?soil)`, are satisfied, I'll need to send analysis results for at least one stone and one soil sample.
           
           **Available Resources:**
           
           *   **Rovers:** v12 (at v13), v14 (at v15)
           *   **Camera:** v10 (on both v12 and v14, mode v11)
           *   **Store:** v16 (free on both)
           *   **Lander:** v9
           *   **Rocks:** Stone (v1, v3, v4), Soil (v5, v7, v8)
           *   **Objectives:** v17, v18, v19
           
           **Detailed Plan:**
           
           **Step 1. Sending Images (v12):**
           
           1.  **Move** rover v12 to take image #q1
           2.  **Calibrate** the camera
           3.  **Take** image for objective v18
           4.  **Move** rover v12 to take image #q3
           5.  **Calibrate** the camera
           6.  **Take** image for objective v19
           7.  **Move** rover v12 to take image #q6
           8.  **Calibrate** the camera
           9.  **Take** image for objective v17
           10. **Move** to communication to send.
           11. **Send** image for objective v18
           12. **Send** image for objective v19
           13. **Send** image for objective v17
           14. Move rover to starting configuration `v13`
           
           **Step 2. Analyzing and Sending Analysis (v14):**
           
           1.  **Move** rover v14 to a location (#o5) where it can sample stones and soil.
           2.  **Sample** the stone,  and analyze the sample
           3.  **Drop** the stone
           4.  **Sample** the soil, and analyze the sample
           5.  **Move** to a communication point.
           6.  **Send** analysis for the stone (v3)
           7.  **Send** analysis for the soil (v5)
           8.  **Drop** the soil
           9.  Move rover to starting location `v15`
           
           After all this, I am confident I'll have the goal achieved!
           

