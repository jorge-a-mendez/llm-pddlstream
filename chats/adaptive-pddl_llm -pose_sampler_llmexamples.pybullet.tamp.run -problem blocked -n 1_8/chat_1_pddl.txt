User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom type(v12, v17)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom stackable(v8, v18)
           Atom atpose(v15, v16)
           Atom bconf(v3)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v18)
           Atom type(v8, v17)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom graspable(v8)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom controllable(v4)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom pose(v8, v9)
           Atom canmove()
           Atom graspable(v15)
           Atom arm(v4)
           Atom stackable(v15, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`v12`, `v8`, `v15`) with their initial poses, whether they are graspable, stackable, and their types. There are also two arms (`v4`, `v6`) and a base configuration (`v3`).
           
           The goal `new-axiom@0()` is defined by the axiom `on(?green, v18)` and `type(?green, v17)`. This means we need to find an object `?green` that has `type(?green, v17)` and is `on` `v18`.
           
           Looking at the initial state:
           - `type(v12, v17)`
           - `type(v8, v17)`
           
           So, `?green` could be `v12` or `v8`. The goal requires one of these to be `on v18`.
           - `v18` is mentioned as a surface where `v8` can be supported (`supported(v8, #o2, v18)`).
           - `v18` is also mentioned as a surface where `v12` can be supported (`supported(v12, #o2, v18)`).
           
           The current state shows:
           - `on(v12, v14)` because `atpose(v12, v13)` and `supported(v12, v13, v14)`.
           - `on(v8, v11)` because `atpose(v8, v9)` and `supported(v8, v9, v11)`.
           - `on(v15, v11)` because `atpose(v15, v16)` and `supported(v15, v16, v11)`.
           
           None of `v12` or `v8` are initially on `v18`. This means we need to pick up either `v12` or `v8` and place it on `v18`.
           
           However, the only available action instance is `(move_base v3 v3 #o0)`. This action does not change the pose of any object, nor does it allow for picking or placing. It only moves the base from `v3` to `v3` using trajectory `#o0`. This means the robot will not actually move, and no object will be picked or placed.
           
           Therefore, the goal cannot be achieved with the given available actions.
           
           (It's important to note that the provided `kin` facts include continuous parameters like `#o1`, `#o2`, `#o3`, `#o4` which are not fully instantiated for pick/place actions. Even if they were, there are no `pick` or `place` action instances available.)

