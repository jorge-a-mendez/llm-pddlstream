User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom objective(v20)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom rock(v8)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom rock(v7)
           Atom rock(v3)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom store(v16)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rover(v12)
           Atom mode(v11)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q15, v3)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v14, #q9, v3)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v14, #q12, v1)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v4)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q5, #y4, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q2, #t22, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t4, v15)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q3, #t27, #q2)
           Atom motion(v12, #q14, #t30, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #t28, #q3)
           Atom motion(v12, #q3, #t26, #q4)
           Atom motion(v12, #q2, #t3, #q3)
           Atom motion(v12, #q3, #t33, #q15)
           Atom motion(v12, #q3, #t32, #q14)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q15, #t31, #q3)
           Atom motion(v12, #q3, #t6, v13)
           Atom motion(v12, #q0, #t2, #q3)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #t23, #q2)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q5, #t11, #q6)
           Atom motion(v14, v15, #t8, #q6)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #t5, #q5)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #t19, #q5)
           Atom motion(v14, #q5, #t16, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, v15, #t13, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t12, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #t18, #q5)
           Atom motion(v14, #q5, #t15, #q8)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q3, #t29, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #t10, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #t21, #q3)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q5, #t17, #q10)
           Atom motion(v14, v15, #t14, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #t20, #q5)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #t7, #q3)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q3, #t9, #q1)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q3, #t25, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q13, #t24, #q3)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #q12, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v3 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q12 v1 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q3))
           ((move v12 #q0 #t23 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t7 #q3))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t24 #q3))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t30 #q3))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t31 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t22 #q4))
           ((move v12 #q2 #t3 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t25 #q13))
           ((move v12 #q3 #t26 #q4))
           ((move v12 #q3 #t27 #q2))
           ((move v12 #q3 #t29 #q7))
           ((move v12 #q3 #t32 #q14))
           ((move v12 #q3 #t33 #q15))
           ((move v12 #q3 #t6 v13))
           ((move v12 #q3 #t9 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q7))
           ((move v12 #q4 #t28 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t21 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q5))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #t11 #q6))
           ((move v14 #q5 #t15 #q8))
           ((move v14 #q5 #t16 #q9))
           ((move v14 #q5 #t17 #q10))
           ((move v14 #q5 #t4 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t5 #q5))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t18 #q5))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t19 #q5))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q8))
           ((move v14 v15 #t13 #q9))
           ((move v14 v15 #t14 #q10))
           ((move v14 v15 #t8 #q6))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y4 v9 v8))
           ((send_analysis v14 #q5 #y4 v9 v7))
           ((send_analysis v14 #q5 #y4 v9 v1))
           ((send_analysis v14 #q5 #y4 v9 v5))
           ((send_analysis v14 #q5 #y4 v9 v4))
           ((send_analysis v14 #q5 #y4 v9 v3))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q5 #y4 v9 v19 v11))
           ((send_image v14 #q5 #y4 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied by various combinations of conditions. Looking at the provided axioms, it seems the goal requires the rover(s) to have analyzed certain rocks (v1, v3, v4, v5, v7, v8) and/or to have taken and sent images of certain objectives (v17, v18, v19, v20). Specifically, the axiom states that either two rovers are at different locations and have free stores, and all four objectives (v17, v18, v19, v20) have received images (which implies taking and sending them), and rocks of type `v2` (stone) and `v6` (soil) have been analyzed (which implies sampling and sending analysis).
           
           Let's break down the `new-axiom@0()` goal:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are also already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This requires Rover 12 or Rover 14 to take images of these four objectives and then send them to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: This means at least one rock of type `v2` needs to be sampled and its analysis sent. Rocks `v1`, `v3`, and `v4` are of type `v2`.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means at least one rock of type `v6` needs to be sampled and its analysis sent. Rocks `v5`, `v7`, and `v8` are of type `v6`.
           
           The current state has Rover 12 at `v13` and Rover 14 at `v15`. Both have free stores.
           We need to:
           - Sample and send analysis for at least one rock of type `v2` (e.g., v1, v3, or v4).
           - Sample and send analysis for at least one rock of type `v6` (e.g., v5, v7, or v8).
           - Take and send images for all four objectives (v17, v18, v19, v20).
           
           Let's use Rover 12 for sampling and Rover 14 for imaging to minimize movement.
           
           **Rover 12 (v12) for sampling and sending analysis:**
           - Rover 12 is at `v13`.
           - To sample a rock, Rover 12 needs to move to a configuration `q` where `above(v12, q, r)` is true for a rock `r`.
           - Rocks of type `v2`: `v1` (above at `#q1`), `v3` (above at `#q15`), `v4` (above at `#o5`).
           - Rocks of type `v6`: `v5` (above at `#q13`), `v7` (above at `#o5`), `v8` (above at `#q14`).
           - We can sample `v3` (type v2) at `#q15` and `v7` (type v6) at `#o5`. This will satisfy the rock analysis requirements.
           - After sampling, Rover 12 needs to be at a configuration `q` where `comvisible(v12, q, y, v9)` is true to send analysis. For Rover 12, this is `#q3` with `#y2`.
           
           **Rover 14 (v14) for taking and sending images:**
           - Rover 14 is at `v15`.
           - To take an image, Rover 14 needs to move to a configuration `q` where `imagevisible(v14, q, y, o)` is true, calibrate its camera, and then take the image.
           - All objectives (v17, v18, v19, v20) are visible from `#o3` for Rover 14 using ray `#o4`.
           - After taking images, Rover 14 needs to be at a configuration `q` where `comvisible(v14, q, y, v9)` is true to send images. For Rover 14, this is `#q5` with `#y4`.
           
           Let's plan the steps:
           
           **Rover 12:**
           1. Move to `#q15` to sample `v3` (type `v2`).
           2. Sample `v3`.
           3. Move to `#o5` to sample `v7` (type `v6`).
           4. Sample `v7`.
           5. Move to `#q3` to send analysis.
           6. Send analysis for `v3`.
           7. Send analysis for `v7`.
           
           **Rover 14:**
           1. Move to `#o3` to take images.
           2. Calibrate camera `v10`.
           3. Take image of `v17`.
           4. Take image of `v18`.
           5. Take image of `v19`.
           6. Take image of `v20`.
           7. Move to `#q5` to send images.
           8. Send image of `v17`.
           9. Send image of `v18`.
           10. Send image of `v19`.
           11. Send image of `v20`.
           
           This plan seems feasible as all continuous parameters are pre-defined in the action instances, and preconditions appear to be met.
           
           --Plan--:
           (move v12 v13 #o2 #q15)
           (sample_rock v12 #q15 v3 v16)
           (move v12 #q15 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q5)
           (send_image v14 #q5 #y4 v9 v17 v11)
           (send_image v14 #q5 #y4 v9 v18 v11)
           (send_image v14 #q5 #y4 v9 v19 v11)
           (send_image v14 #q5 #y4 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal and the state after the previous plan.
           
           The goal `new-axiom@0()` (which is one of many instances of the axiom definition) is satisfied if all the conditions within its conjunction are true. The specific conditions from the axiom are:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)`
           - `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           In the initial state:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           - `free(v12, v16)` and `free(v14, v16)` are true.
           
           After the previous plan:
           - Rover 12 sampled `v3` and `v7`. This makes `full(v12, v16)` true and `free(v12, v16)` false. To satisfy `free(v12, v16)` in the goal, Rover 12 must drop the sampled rocks.
           - Rover 14 took and sent images of `v17, v18, v19, v20`, so these `receivedimage` predicates should be true.
           - Rover 12 sent analysis for `v3` (type `v2`) and `v7` (type `v6`), so `receivedanalysis(v3)` and `receivedanalysis(v7)` should be true, satisfying the rock analysis requirements.
           
           The critical issue with the previous plan was that `free(v12, v16)` became false after sampling rocks, and the goal requires it to be true. To fix this, Rover 12 must `drop_rock` after sampling and sending analysis.
           
           Let's refine the plan:
           
           **Rover 12 (v12) for sampling and sending analysis:**
           1. Move to `#q15` to sample `v3` (type `v2`).
           2. Sample `v3`.
           3. Move to `#o5` to sample `v7` (type `v6`).
           4. Sample `v7`.
           5. Move to `#q3` to send analysis.
           6. Send analysis for `v3`.
           7. Send analysis for `v7`.
           8. Drop the rocks `v3` and `v7` to make `free(v12, v16)` true again. The `drop_rock` action removes `full` and adds `free`. Since both rocks were sampled using the same store `v16`, a single `drop_rock v12 v16` will make the store free.
           
           **Rover 14 (v14) for taking and sending images:**
           This part remains largely the same, as it successfully achieved its sub-goals and didn't conflict with the `free` predicate.
           
           Let's construct the corrected plan.
           
           --Plan--:
           (move v12 v13 #o2 #q15)
           (sample_rock v12 #q15 v3 v16)
           (move v12 #q15 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q5)
           (send_image v14 #q5 #y4 v9 v17 v11)
           (send_image v14 #q5 #y4 v9 v18 v11)
           (send_image v14 #q5 #y4 v9 v19 v11)
           (send_image v14 #q5 #y4 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan still failed to satisfy `new-axiom@0()`. Let's perform a very careful step-by-step check of the goal and the state after each action.
           
           The goal `new-axiom@0()` (which refers to one of the specific axioms, but they all have the same conditions) requires:
           1. `atconf(v12, v13)`: Rover 12 must be at `v13`.
           2. `atconf(v14, v15)`: Rover 14 must be at `v15`.
           3. `free(v12, v16)`: Rover 12's store must be free.
           4. `free(v14, v16)`: Rover 14's store must be free.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `receivedanalysis(?stone)` for a stone (type v2).
           10. `receivedanalysis(?soil)` for soil (type v6).
           
           Let's re-trace the previous plan and how it affects these goal conditions.
           
           **Initial State:**
           - `atconf(v12, v13)` (True)
           - `atconf(v14, v15)` (True)
           - `free(v12, v16)` (True)
           - `free(v14, v16)` (True)
           - `receivedimage(...)` (All False)
           - `receivedanalysis(...)` (All False)
           
           **Previous Plan Breakdown & State Changes:**
           
           1.  `(move v12 v13 #o2 #q15)`
               - `atconf(v12, v13)` becomes False, `atconf(v12, #q15)` becomes True.
               - **Problem**: Goal `atconf(v12, v13)` is now violated.
           
           This is the likely reason for the failure. Rover 12 must end up at `v13` and Rover 14 at `v15`. My previous plan moved Rover 12 away from `v13` and Rover 14 away from `v15` without moving them back.
           
           To fix this, after each rover completes its tasks, it needs to move back to its initial configuration:
           - Rover 12 needs to return to `v13`.
           - Rover 14 needs to return to `v15`.
           
           Let's construct a new plan with these return movements.
           
           **Rover 12 (v12) for sampling and sending analysis:**
           1. Move to `#q15` to sample `v3` (type `v2`).
           2. Sample `v3`.
           3. Move to `#o5` to sample `v7` (type `v6`).
           4. Sample `v7`.
           5. Move to `#q3` to send analysis.
           6. Send analysis for `v3`.
           7. Send analysis for `v7`.
           8. Drop the rocks from `v16`.
           9. **Return to `v13`**.
           
           **Rover 14 (v14) for taking and sending images:**
           1. Move to `#o3` to take images.
           2. Calibrate camera `v10`.
           3. Take image of `v17`.
           4. Take image of `v18`.
           5. Take image of `v19`.
           6. Take image of `v20`.
           7. Move to `#q5` to send images.
           8. Send image of `v17`.
           9. Send image of `v18`.
           10. Send image of `v19`.
           11. Send image of `v20`.
           12. **Return to `v15`**.
           
           I need to make sure that the continuous parameters for the return movements exist in the provided list of valid actions.
           
           - For Rover 12, move from `#q3` back to `v13`: `(move v12 #q3 #t6 v13)` is available.
           - For Rover 14, move from `#q5` back to `v15`: `(move v14 #q5 #t4 v15)` is available.
           
           Let's re-assemble the plan.
           
           --Plan--:
           (move v12 v13 #o2 #q15)
           (sample_rock v12 #q15 v3 v16)
           (move v12 #q15 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #t6 v13)
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q5)
           (send_image v14 #q5 #y4 v9 v17 v11)
           (send_image v14 #q5 #y4 v9 v18 v11)
           (send_image v14 #q5 #y4 v9 v19 v11)
           (send_image v14 #q5 #y4 v9 v20 v11)
           (move v14 #q5 #t4 v15)

