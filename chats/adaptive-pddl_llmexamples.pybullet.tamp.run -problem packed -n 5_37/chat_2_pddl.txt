User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v16)
           Atom atpose(v8, v9)
           Atom pose(v16, v17)
           Atom canmove()
           Atom atpose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom handempty(v4)
           Atom atpose(v18, v19)
           Atom graspable(v14)
           Atom handempty(v6)
           Atom arm(v6)
           Atom supported(v16, v17, v11)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom supported(v18, v19, v11)
           Atom supported(v12, v13, v11)
           Atom stackable(v18, v10)
           Atom stackable(v8, v20)
           Atom stackable(v14, v20)
           Atom pose(v8, v9)
           Atom graspable(v12)
           Atom stackable(v16, v20)
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom stackable(v12, v20)
           Atom pose(v18, v19)
           Atom pose(v12, v13)
           Atom pose(v14, v15)
           Atom stackable(v14, v10)
           Atom atpose(v16, v17)
           Atom atpose(v14, v15)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom graspable(v18)
           Atom aconf(v6, v7)
           Atom stackable(v18, v20)
           Atom graspable(v8)
           Atom stackable(v16, v10)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom stackable(v8, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom grasp(v18, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, #o1)
           Atom supported(v14, #o2, v20)
           Atom grasp(v14, #o1)
           Atom supported(v8, #o2, v20)
           Atom supported(v18, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v18 #o2 #o1 #o3 #o4))
           ((place v4 v18 #o2 #o1 #o3 #o4))
           ((pick v4 v18 v19 #o1 #o3 #o4))
           ((place v4 v18 v19 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16, v18) that are currently supported by object v11 at specific poses. The robot has two arms (v4 and v6), and arm v4 has several kinematic configurations defined for picking up and placing these objects at various poses and with a specific grasp (#o1). There are two potential receptors for stacking: v10 and v20. The goal is to move objects v8, v12, v14, v16, and v18 onto receptor v20.
           
           Currently, all the target objects are on v11. We need to pick them up and place them on v20. The plan will involve a sequence of pick and place actions using arm v4. The robot starts at base configuration v3 and there is a base motion available to #o3 and back to v3, but the provided pick and place actions are all defined with base configuration #o3. So, the first step will be to move the base to #o3.
           
           For each object, we will perform the following steps:
           1. Pick the object from its current pose on v11 using arm v4.
           2. Place the object onto a new pose on v20 using arm v4. The new pose is represented by #o2 in the kin and supported facts.
           
           Let's break down the process for each object:
           - **v8**: Currently atpose(v8, v9) on v11. We need to place it atpose(v8, #o2) on v20.
           - **v12**: Currently atpose(v12, v13) on v11. We need to place it atpose(v12, #o2) on v20.
           - **v14**: Currently atpose(v14, v15) on v11. We need to place it atpose(v14, #o2) on v20.
           - **v16**: Currently atpose(v16, v17) on v11. We need to place it atpose(v16, #o2) on v20.
           - **v18**: Currently atpose(v18, v19) on v11. We need to place it atpose(v18, #o2) on v20.
           
           All kinemtic information for picking from their current poses and placing on receptor v20 is available (kin(v4, <object>, <current_pose>, #o1, #o3, #o4) for pick, and kin(v4, <object>, #o2, #o1, #o3, #o4) for place). The base will be at #o3 for all pick and place operations, as defined in the available actions.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           (pick v4 v18 v19 #o1 #o3 #o4)
           (place v4 v18 #o2 #o1 #o3 #o4)

