User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom stackable(v8, v18)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom type(v12, v17)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom supported(v15, v16, v11)
           Atom pose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom atpose(v15, v16)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom stackable(v15, v10)
           Atom pose(v15, v16)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom stackable(v12, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v21, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v19, v22, #q2, #t4)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom btraj(#o0)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v28, #o0, v26)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, v22, #q3, #t6)
           Atom grasp(v15, #o1)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v3, #o0, v3)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, v28)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom basemotion(v26, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v28, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v24, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(#q3, #t8, #q2)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(#q2, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t8))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v28 v29))
           ((place v4 v8 v19 v21 v28 v29))
           ((pick v4 v8 v19 v22 #q2 #t4))
           ((place v4 v8 v19 v22 #q2 #t4))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v22 #q3 #t6))
           ((place v4 v8 v9 v22 #q3 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to achieve the goal `new-axiom@0()`, which is an axiom representing `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, `v8` is of `type v17`. Therefore, to satisfy the goal, the robot needs to place `v8` on `v18`.
           
           Currently, `v8` is at `pose v9` and `pose v19`. It is supported by `v11` at `pose v9` and by `v18` at `pose v19`. The goal requires `on(v8, v18)`, which means `supported(v8, ?p, v18)` and `atpose(v8, ?p)`. From the initial state, `v8` is already supported by `v18` at `pose v19` and `atpose(v8, v19)` is not explicitly stated. However, `atpose(v8, v9)` is explicitly stated, which means it is currently on `v11`.
           
           The goal `new-axiom@0()` is satisfied if `v8` is on `v18`. From the initial state, `Atom supported(v8, v19, v18)` is true. The current `atpose` for `v8` is `v9`. To achieve `on(v8, v18)`, `v8` needs to be at `pose v19`. This means the robot needs to pick up `v8` from its current location (`v9`) and place it on `v18` at `pose v19`.
           
           Looking at the available actions, there are pick and place actions for `v8`.
           - To pick `v8` from `pose v9`, the action `(pick v4 v8 v9 v22 #q3 #t6)` is available. This action requires the robot to be at `bconf #q3`.
           - To place `v8` at `pose v19`, the action `(place v4 v8 v19 v22 #q2 #t4)` is available. This action requires the robot to be at `bconf #q2`.
           
           Therefore, the plan should involve:
           1. Moving the base to `#q3` to pick `v8` from `v9`.
           2. Picking `v8` from `v9` using `v4`.
           3. Moving the base to `#q2` to place `v8` at `v19`.
           4. Placing `v8` at `v19` using `v4`.
           
           --Plan--:
           (move_base v3 #q3 #t7)
           (pick v4 v8 v9 v22 #q3 #t6)
           (move_base #q3 #q2 #t8)
           (place v4 v8 v19 v22 #q2 #t4)

