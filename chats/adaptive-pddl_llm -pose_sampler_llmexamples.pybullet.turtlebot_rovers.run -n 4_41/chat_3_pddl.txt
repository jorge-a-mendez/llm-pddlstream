User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom lander(v9)
           Atom objective(v19)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom rock(v7)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q13, #y9, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q11, #y8, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q3, #y3, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom comvisible(v14, #q8, #y6, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q10, #y7, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q2, #y2, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t13, #q9)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t18, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v12, v13, #t10, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, v13, #t9, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q7, #t12, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #t17, v15)
           Atom motion(v12, #q2, #t5, #q3)
           Atom motion(v12, #q1, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t0, #q4)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t7, v13)
           Atom motion(v12, #q4, #t1, #q3)
           Atom motion(v12, #q3, #t15, #q9)
           Atom motion(v12, #q6, #t6, #q3)
           Atom motion(v12, #q3, #t16, #q12)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #t14, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q5, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t8, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #t3, #q3)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t3 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t4 #q3))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t5 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #t0 #q4))
           ((move v12 #q3 #t15 #q9))
           ((move v12 #q3 #t16 #q12))
           ((move v12 #q3 #t7 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t1 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t2 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q2))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t13 #q9))
           ((move v12 v13 #t8 #q0))
           ((move v12 v13 #t9 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t17 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q7))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t21 #q13))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q2 #y2 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q10 #y7 v17 v10))
           ((calibrate v14 #q11 #y8 v19 v10))
           ((calibrate v14 #q13 #y9 v18 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q2 #y2 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y7 v17 v10 v11))
           ((take_image v14 #q11 #y8 v19 v10 v11))
           ((take_image v14 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y3 v9 v4))
           ((send_analysis v12 #q3 #y3 v9 v8))
           ((send_analysis v12 #q3 #y3 v9 v3))
           ((send_analysis v12 #q3 #y3 v9 v5))
           ((send_analysis v12 #q3 #y3 v9 v1))
           ((send_analysis v12 #q3 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y6 v9 v1))
           ((send_analysis v14 #q8 #y6 v9 v3))
           ((send_analysis v14 #q8 #y6 v9 v4))
           ((send_analysis v14 #q8 #y6 v9 v5))
           ((send_analysis v14 #q8 #y6 v9 v7))
           ((send_analysis v14 #q8 #y6 v9 v8))
           ((send_image v12 #q3 #y3 v9 v19 v11))
           ((send_image v12 #q3 #y3 v9 v18 v11))
           ((send_image v12 #q3 #y3 v9 v20 v11))
           ((send_image v12 #q3 #y3 v9 v17 v11))
           ((send_image v14 #q8 #y6 v9 v17 v11))
           ((send_image v14 #q8 #y6 v9 v19 v11))
           ((send_image v14 #q8 #y6 v9 v18 v11))
           ((send_image v14 #q8 #y6 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, both equipped with a camera v10 that supports mode v11. There is a lander v9 for communication. Several objectives (v17, v18, v19, v20) need to be imaged and several rocks (v1, v3, v4, v5, v7, v8) need to be analyzed. Both rovers are currently at their home configurations (v12 at v13, v14 at v15) and have a free storage unit v16.
           
           The goal is `Atom new-axiom@0()`, which is a complex axiom that essentially requires:
           1. Both rovers v12 and v14 to be at their home configurations (atconf(v12, v13) and atconf(v14, v15)). This is already true in the initial state.
           2. Both rovers to have their storage v16 free (free(v12, v16) and free(v14, v16)). This is also true initially.
           3. Images of all four objectives (v17, v18, v19, v20) to have been received in mode v11.
           4. All rocks (v1, v3, v4, v5, v7, v8) to have been analyzed and the analysis received.
           
           Given the initial state, the plan needs to focus on achieving the image and analysis goals. Since both rovers are at their home configurations and have free stores, we will prioritize these tasks.
           
           For imaging, we need to:
           1. Calibrate the camera.
           2. Take an image.
           3. Move to a communication-visible location.
           4. Send the image.
           
           For rock analysis, we need to:
           1. Move the rover to be above the rock.
           2. Sample the rock.
           3. Move to a communication-visible location.
           4. Send the analysis.
           
           We can use rover v12 to handle some of the image and rock analysis tasks, and rover v14 for others.
           
           Rover v12 can:
           - Calibrate and take an image of v19 at #q0, v18 at #q1, v20 at #q2, v17 at #q6.
           - Sample rock v4 at #o5, v8 at #o5, v3 at #q12, v5 at #q4, v1 at #q5, v7 at #q9.
           - Communicate from #q3.
           
           Rover v14 can:
           - Calibrate and take an image of v18 at #q13, v19 at #q11, v17 at #q10, v20 at #q7.
           - Sample rock v1 at #o5, v3 at #o5, v4 at #o5, v5 at #o5, v7 at #o5, v8 at #o5.
           - Communicate from #q8.
           
           We will focus on fulfilling the image and analysis requirements using the available actions.
           
           Let's use rover v12 for:
           - Image v19, v18, v20, v17
           - Analyze rocks v4, v8, v3, v5, v1, v7
           
           We need to ensure that the rover is at the correct configuration for each action, and then moves to a communication-visible location to send the data.
           
           Plan breakdown:
           1. Rover v12 images all objectives from suitable positions, then moves to #q3 to send images.
           2. Rover v12 samples all rocks from suitable positions, then moves to #q3 to send analyses.
           
           However, the problem statement says "Any action instance that is not in the given list is not allowed to be used in the plan." This means we can only use the provided specific actions. We will string together actions from the provided list to satisfy the goal.
           
           Let's start with rover v12 at v13:
           - Calibrate for v19 at #q0.
           - Take image of v19 at #q0.
           - Calibrate for v18 at #q1.
           - Take image of v18 at #q1.
           - Calibrate for v20 at #q2.
           - Take image of v20 at #q2.
           - Calibrate for v17 at #q6.
           - Take image of v17 at #q6.
           - Move v12 to #q3 to send images.
           - Send all images from #q3.
           
           Then for rock sampling and analysis with rover v12:
           - Move v12 to #o5 (to sample v4, v8).
           - Sample rock v4.
           - Sample rock v8.
           - Move v12 to #q12 (to sample v3).
           - Sample rock v3.
           - Move v12 to #q4 (to sample v5).
           - Sample rock v5.
           - Move v12 to #q5 (to sample v1).
           - Sample rock v1.
           - Move v12 to #q9 (to sample v7).
           - Sample rock v7.
           - Move v12 to #q3 to send analysis.
           - Send all analyses from #q3.
           
           This strategy ensures all goals are met using rover v12. The final state requires the rovers to be at their initial positions, which is achieved because all movement actions in the provided list eventually lead back to the initial configuration or a suitable one for communication.
           
           Let's try to achieve the image goals first.
           Initial state: v12 at v13, v14 at v15, free(v12, v16), free(v14, v16).
           All image goals: receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11), receivedimage(v20, v11)
           All analysis goals: receivedanalysis(v1), receivedanalysis(v3), receivedanalysis(v4), receivedanalysis(v5), receivedanalysis(v7), receivedanalysis(v8)
           
           Let's use Rover v12 for all image tasks and then all analysis tasks, using its designated communication point #q3.
           Rover v12 starts at v13.
           
           Images:
           1. Calibrate for v19: Move to #q0.
           2. Take image v19.
           3. Calibrate for v18: Move to #q1.
           4. Take image v18.
           5. Calibrate for v20: Move to #q2.
           6. Take image v20.
           7. Calibrate for v17: Move to #q6.
           8. Take image v17.
           9. Move to #q3 for communication.
           10. Send all images.
           
           Rock Analysis:
           1. Move to #o5 for rocks v4, v8.
           2. Sample v4.
           3. Sample v8.
           4. Move to #q12 for rock v3.
           5. Sample v3.
           6. Move to #q4 for rock v5.
           7. Sample v5.
           8. Move to #q5 for rock v1.
           9. Sample v1.
           10. Move to #q9 for rock v7.
           11. Sample v7.
           12. Move to #q3 for communication.
           13. Send all analyses.
           
           This seems like a feasible plan using only rover v12.
           
           --Plan--:
           (move v12 v13 #t8 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t6 #q3)
           (send_image v12 #q3 #y3 v9 v19 v11)
           (send_image v12 #q3 #y3 v9 v18 v11)
           (send_image v12 #q3 #y3 v9 v20 v11)
           (send_image v12 #q3 #y3 v9 v17 v11)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #o2 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #o2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #o2 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t14 #q3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (send_analysis v12 #q3 #y3 v9 v8)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v5)
           (send_analysis v12 #q3 #y3 v9 v1)
           (send_analysis v12 #q3 #y3 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are true in the initial state and were not explicitly maintained in the previous plan. However, since the moves in the provided list eventually allow returning to these configurations, this might not be the primary issue if the final move action for each rover sets them back to their home configuration.
           2. `free(v12, v16)` and `free(v14, v16)`: These are true initially. The `sample_rock` action makes a store `full`, and `drop_rock` makes it `free`. The previous plan sampled rocks but did not drop them, so the `free` predicate for `v12`'s store `v16` would become `full`. This is a critical oversight.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: The previous plan included actions to calibrate, take images, and send them, so these should have been satisfied.
           4. `receivedanalysis(?stone)` for all rocks of type `v2` and `receivedanalysis(?soil)` for all rocks of type `v6`. This means all rocks (v1, v3, v4, v5, v7, v8) need to be analyzed and sent. The previous plan sampled and sent analyses for these, so this *should* have been satisfied, assuming the `free` constraint was also met.
           
           The main issue appears to be the `free` predicate for the storage `v16`. After sampling a rock, the store becomes `full`. To satisfy `free(v12, v16)` and `free(v14, v16)` in the final state, any sampled rocks must be dropped.
           
           Let's refine the plan to incorporate dropping the sampled rocks. I will still use rover v12 for all tasks to simplify the movement and state tracking, and ensure it ends at v13 with v16 free.
           
           Revised Plan Strategy:
           1. Rover v12 performs all image calibration and taking.
           2. Rover v12 moves to #q3 and sends all collected images.
           3. Rover v12 then proceeds to sample all rocks, ensuring to drop each rock after its analysis is sent (or perhaps dropping all at once after all analyses are sent, but dropping after each sample ensures `free` before the next sample if needed, though with `v16` it is a single store). Given that the `free` state of the storage is required for the *final* goal, we can drop all rocks at the end. However, `sample_rock` has `free(?v, ?s)` as a precondition, so if we sample multiple rocks, we must `drop_rock` in between. This means we will sample one rock, move to communication point, send analysis, drop rock, then move to the next rock. This will be very inefficient, but necessary if the robot has only one storage. The domain states `store(?s)` and `free(?v, ?s)` indicates one storage unit per rover.
           
           Let's re-examine the `sample_rock` preconditions: `free(?v, ?s)`. This means for each rock sampled, the store `v16` must be free. So, after each `sample_rock`, we must send analysis and then `drop_rock` before the next `sample_rock`.
           
           Re-Revised Plan Structure (Rover v12):
           1. Calibrate, take image of v19 (at #q0)
           2. Calibrate, take image of v18 (at #q1)
           3. Calibrate, take image of v20 (at #q2)
           4. Calibrate, take image of v17 (at #q6)
           5. Move to communication point #q3.
           6. Send all 4 images.
           
           7. Move to #o5.
           8. Sample rock v4.
           9. Move to #q3.
           10. Send analysis for v4.
           11. Drop rock v4 (making store v16 free again).
           12. Move to #o5 (already there from prior move if we optimize, but need to be explicit from the communication point).
           13. Sample rock v8.
           14. Move to #q3.
           15. Send analysis for v8.
           16. Drop rock v8.
           
           17. Move to #q12.
           18. Sample rock v3.
           19. Move to #q3.
           20. Send analysis for v3.
           21. Drop rock v3.
           
           22. Move to #q4.
           23. Sample rock v5.
           24. Move to #q3.
           25. Send analysis for v5.
           26. Drop rock v5.
           
           27. Move to #q5.
           28. Sample rock v1.
           29. Move to #q3.
           30. Send analysis for v1.
           31. Drop rock v1.
           
           32. Move to #q9.
           33. Sample rock v7.
           34. Move to #q3.
           35. Send analysis for v7.
           36. Drop rock v7.
           
           This ensures `free(v12, v16)` at the end and between samples. `atconf(v12, v13)` will need to be explicitly satisfied by a final move if we don't naturally end there. Since `v12` is at `v13` initially, if we end at `q3` after dropping the last rock, we need to move it back to `v13`. Looking at the available moves, `(move v12 #q3 #t7 v13)` exists.
           
           All rocks are of type v2 (stone) or v6 (soil).
           v4 (type v2, stone), v8 (type v6, soil) are above #o5.
           v3 (type v2, stone) is above #q12.
           v5 (type v6, soil) is above #q4.
           v1 (type v2, stone) is above #q5.
           v7 (type v6, soil) is above #q9.
           
           So all rock types are covered for the `receivedanalysis` part of the goal.
           
           --Plan--:
           (move v12 v13 #t8 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t6 #q3)
           (send_image v12 #q3 #y3 v9 v19 v11)
           (send_image v12 #q3 #y3 v9 v18 v11)
           (send_image v12 #q3 #y3 v9 v20 v11)
           (send_image v12 #q3 #y3 v9 v17 v11)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y3 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q3 #t16 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #o2 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q3 #t0 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #t1 #q3)
           (send_analysis v12 #q3 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t2 #q3)
           (send_analysis v12 #q3 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #t15 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t14 #q3)
           (send_analysis v12 #q3 #y3 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #t7 v13)

