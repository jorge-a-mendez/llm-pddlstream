User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom lander(v9)
           Atom objective(v19)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom rock(v7)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q13, #y9, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #q18, v8)
           Atom conf(v14, #q18)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v1)
           Atom above(v14, #q17, v7)
           Atom conf(v14, #q17)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q11, #y8, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q3, #y3, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom comvisible(v14, #q8, #y6, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q10, #y7, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q2, #y2, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom motion(v12, v13, #t35, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, v13, #t10, #q2)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t18, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #t28, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, v13, #t9, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q1, #t29, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #t31, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q16, #t32, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q7, #t12, #q8)
           Atom motion(v14, #q8, #t17, v15)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #t30, #q16)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q14, #t26, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q2, #t5, #q3)
           Atom motion(v12, #q3, #t23, #q14)
           Atom motion(v12, #q1, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #t16, #q12)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q15, #t27, #q3)
           Atom motion(v12, #q5, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t7, v13)
           Atom motion(v12, #q12, #t25, #q3)
           Atom motion(v12, #q6, #t6, #q3)
           Atom motion(v12, #q3, #t24, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #t1, #q3)
           Atom motion(v12, #q14, #t37, #q4)
           Atom motion(v12, #q4, #t39, #q1)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #t0, #q4)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q0, #t36, #q2)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q1, #t38, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #t3, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t8, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #t22, #q1)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #t33, #q8)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, v13, #t13, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q3, #t15, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #t14, #q3)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q18)
           Atom motion(v14, #q18, #t34, #q8)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q10, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, v15, #o2, #q18)
           Atom motion(v14, #q7, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q18, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, #q18, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q18)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q18)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q18, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q16, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q17 v7 v16))
           ((sample_rock v14 #q18 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t22 #q1))
           ((move v12 #q0 #t3 #q3))
           ((move v12 #q0 #t36 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t29 #q2))
           ((move v12 #q1 #t38 #q0))
           ((move v12 #q1 #t4 #q3))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t25 #q3))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t26 #q3))
           ((move v12 #q14 #t37 #q4))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t27 #q3))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t28 #q6))
           ((move v12 #q2 #t5 #q3))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #t0 #q4))
           ((move v12 #q3 #t15 #q9))
           ((move v12 #q3 #t16 #q12))
           ((move v12 #q3 #t23 #q14))
           ((move v12 #q3 #t24 #q5))
           ((move v12 #q3 #t7 v13))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t1 #q3))
           ((move v12 #q4 #t39 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t2 #q3))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q3))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q2))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t13 #q9))
           ((move v12 v13 #t35 #q14))
           ((move v12 v13 #t8 #q0))
           ((move v12 v13 #t9 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q18))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q18))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q18))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t32 #q8))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t33 #q8))
           ((move v14 #q18 #o2 #o5))
           ((move v14 #q18 #o2 #q10))
           ((move v14 #q18 #o2 #q11))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q7))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t34 #q8))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q18))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q18))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t17 v15))
           ((move v14 #q8 #t30 #q16))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q18))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q7))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t21 #q13))
           ((move v14 v15 #t31 #q16))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q2 #y2 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q10 #y7 v17 v10))
           ((calibrate v14 #q11 #y8 v19 v10))
           ((calibrate v14 #q13 #y9 v18 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q2 #y2 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y7 v17 v10 v11))
           ((take_image v14 #q11 #y8 v19 v10 v11))
           ((take_image v14 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y3 v9 v3))
           ((send_analysis v12 #q3 #y3 v9 v4))
           ((send_analysis v12 #q3 #y3 v9 v8))
           ((send_analysis v12 #q3 #y3 v9 v5))
           ((send_analysis v12 #q3 #y3 v9 v1))
           ((send_analysis v12 #q3 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y6 v9 v1))
           ((send_analysis v14 #q8 #y6 v9 v3))
           ((send_analysis v14 #q8 #y6 v9 v4))
           ((send_analysis v14 #q8 #y6 v9 v5))
           ((send_analysis v14 #q8 #y6 v9 v7))
           ((send_analysis v14 #q8 #y6 v9 v8))
           ((send_image v12 #q3 #y3 v9 v19 v11))
           ((send_image v12 #q3 #y3 v9 v18 v11))
           ((send_image v12 #q3 #y3 v9 v20 v11))
           ((send_image v12 #q3 #y3 v9 v17 v11))
           ((send_image v14 #q8 #y6 v9 v17 v11))
           ((send_image v14 #q8 #y6 v9 v19 v11))
           ((send_image v14 #q8 #y6 v9 v18 v11))
           ((send_image v14 #q8 #y6 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The problem requires us to satisfy the goal axiom `new-axiom@0()`, which essentially means two rovers `v12` and `v14` are at some configurations, have free storage `v16`, four images `v17, v18, v19, v20` are received in mode `v11`, and all rocks `v1, v3, v4, v5, v7, v8` are analyzed and received.
           
           Here's a breakdown of the initial state:
           *   **Rovers and their capabilities:**
               *   `v12` is at `v13`, has `v10` camera onboard, has free store `v16`. It can move to various configurations and can observe multiple rocks and objectives.
               *   `v14` is at `v15`, also has `v10` camera onboard, has free store `v16`. It can also move and observe.
               *   Camera `v10` supports mode `v11`.
           *   **Objectives:** `v17, v18, v19, v20` are objectives to be imaged.
           *   **Rocks:** `v1, v3, v4, v5, v7, v8` are rocks, some are of `v2` type (stone) and some are of `v6` type (soil).
           *   **Lander:** `v9` is the lander for communication.
           *   **Visibility and Motion:** Numerous `imagevisible`, `comvisible`, `above`, and `motion` predicates define possible actions for both rovers.
           *   **Current status:** No images have been taken or received, and no rocks have been sampled or analyzed.
           
           To achieve the goal, we need to:
           1.  **Analyze all rocks:** This requires `sample_rock` and `send_analysis`. Each rover can sample and send analyses for rocks it's `above` and can communicate from its location.
           2.  **Receive all images:** This requires `calibrate`, `take_image`, and `send_image` for each of the four objectives. Each rover can take and send images of objectives it `imagevisible` and can communicate from its location.
           
           Let's prioritize:
           
           **Rocks (6 total):**
           *   **Rover `v12` can sample:** `v1, v3, v4, v5, v7, v8` (from `q5, q12, q14, q4, q9, q15` respectively).
           *   **Rover `v14` can sample:** `v1, v3, v4, v5, v7, v8` (from `o5, o5, o5, q16, q17, q18` respectively).
           
           **Objectives (4 total):**
           *   **Rover `v12` can image:** `v17` (from `q6`), `v18` (from `q1`), `v19` (from `q0`), `v20` (from `q2`).
           *   **Rover `v14` can image:** `v17` (from `q10`), `v18` (from `q13`), `v19` (from `q11`), `v20` (from `q7`).
           
           Both rovers can communicate to `v9` from their communication locations (`q3` for `v12`, `q8` for `v14`).
           
           Since both rovers have free stores, they can pick up a rock without dropping one first. We need to make sure both rovers sample and send analysis for all rocks, and take and send images for all objectives. The goal states `receivedanalysis(?r)` for any rock, meaning all rocks should be analyzed. And `receivedimage(?o, v11)` for all specified objectives.
           
           We can split the work between the two rovers.
           
           **Rover v12's tasks:**
           1.  Analyze rocks: v3, v4, v5, v1, v7, v8. It can do this from positions `q12, q14, q4, q5, q9, q15`.
           2.  Image objectives: v17, v18, v19, v20. It can do this from positions `q6, q1, q0, q2`.
           3.  Communicate: from `q3`.
           
           **Rover v14's tasks:**
           1.  Analyze rocks: v1, v3, v4, v5, v7, v8. It can do this from positions `o5, q16, q17, q18`.
           2.  Image objectives: v17, v18, v19, v20. It can do this from positions `q10, q13, q11, q7`.
           3.  Communicate: from `q8`.
           
           Since the goal only requires that the images and analyses are *received*, not necessarily by which rover, we can optimize by having each rover handle a portion of the tasks and then sending all collected data.
           
           Let's assign specific rocks and images to each rover to avoid unnecessary movement:
           
           **Rover v12:**
           *   Analyze v3 (from q12), v4 (from q14), v5 (from q4)
           *   Image v19 (from q0), v20 (from q2)
           
           **Rover v14:**
           *   Analyze v1 (from o5), v7 (from q17), v8 (from q18)
           *   Image v17 (from q10), v18 (from q13)
           
           This division aims to minimize moves. Note that the axiom means *all* rocks must be analyzed and *all* images must be received.
           
           Let's go through rover v12:
           1.  Move to `q12` (to sample v3).
           2.  Sample v3.
           3.  Move to `q14` (to sample v4).
           4.  Sample v4.
           5.  Move to `q4` (to sample v5).
           6.  Sample v5.
           7.  Move to `q0` (to image v19).
           8.  Calibrate `v10` for `v19`.
           9.  Take image of `v19`.
           10. Move to `q2` (to image v20).
           11. Calibrate `v10` for `v20`.
           12. Take image of `v20`.
           13. Move to `q3` (to send data).
           14. Send analysis for v3, v4, v5.
           15. Send images for v19, v20.
           
           Let's go through rover v14:
           1.  Move to `o5` (to sample v1).
           2.  Sample v1.
           3.  Move to `q17` (to sample v7).
           4.  Sample v7.
           5.  Move to `q18` (to sample v8).
           6.  Sample v8.
           7.  Move to `q10` (to image v17).
           8.  Calibrate `v10` for `v17`.
           9.  Take image of `v17`.
           10. Move to `q13` (to image v18).
           11. Calibrate `v10` for `v18`.
           12. Take image of `v18`.
           13. Move to `q8` (to send data).
           14. Send analysis for v1, v7, v8.
           15. Send images for v17, v18.
           
           This strategy covers all required rocks and images. The `atconf` initial condition is satisfied for `v12` at `v13` and `v14` at `v15`.
           
           Let's check the given action instances to ensure feasibility.
           All `sample_rock`, `move`, `calibrate`, `take_image`, `send_analysis`, `send_image` actions appear to be available for the selected objects and locations.
           
           The goal needs to ensure all specific rocks (v1, v3, v4, v5, v7, v8) are `receivedanalysis` and all specific objectives (v17, v18, v19, v20) are `receivedimage` in mode `v11`.
           
           Revised plan to ensure all rocks are sampled by a rover:
           *   v12: v3, v4, v5, v7, v8, v1
           *   v14: No more rocks, as v12 can do all.
           
           Wait, looking at the problem description, `new-axiom@0()` refers to `receivedanalysis(?stone)` and `receivedanalysis(?soil)`. This implies all objects of type stone and soil need to be analyzed.
           `type(v4, v2)`, `type(v3, v2)`, `type(v1, v2)` are `stone` (v2).
           `type(v7, v6)`, `type(v8, v6)`, `type(v5, v6)` are `soil` (v6).
           So all 6 rocks `v1, v3, v4, v5, v7, v8` need to be analyzed.
           
           Let's ensure efficient use of each rover for sampling and imaging, while making sure they are calibrated before taking images, and that they move to a `comvisible` location before sending.
           
           **Rover `v12` plan:**
           1.  Move from `v13` to `q12` (to sample `v3`).
           2.  Sample `v3`.
           3.  Move from `q12` to `q14` (to sample `v4`).
           4.  Sample `v4`.
           5.  Move from `q14` to `q4` (to sample `v5`).
           6.  Sample `v5`.
           7.  Move from `q4` to `q5` (to sample `v1`).
           8.  Sample `v1`.
           9.  Move from `q5` to `q9` (to sample `v7`).
           10. Sample `v7`.
           11. Move from `q9` to `q15` (to sample `v8`).
           12. Sample `v8`.
           13. Move from `q15` to `q0` (to image `v19`).
           14. Calibrate `v10` for `v19`.
           15. Take image of `v19`.
           16. Move from `q0` to `q1` (to image `v18`).
           17. Calibrate `v10` for `v18`.
           18. Take image of `v18`.
           19. Move from `q1` to `q2` (to image `v20`).
           20. Calibrate `v10` for `v20`.
           21. Take image of `v20`.
           22. Move from `q2` to `q6` (to image `v17`).
           23. Calibrate `v10` for `v17`.
           24. Take image of `v17`.
           25. Move from `q6` to `q3` (to send data).
           26. Send all analyses (v1, v3, v4, v5, v7, v8).
           27. Send all images (v17, v18, v19, v20).
           
           This uses only one rover, `v12`, to accomplish all analysis and imaging tasks. This simplifies the plan and guarantees the goal. The initial state and actions provided allow `v12` to reach all necessary locations for sampling and imaging, and then reach `q3` for communication.
           
           All rocks are sampled, then all images are taken. Calibrate is needed before each `take_image` because `calibrated` becomes false after `take_image`.
           
           Final check of the goal and capabilities:
           Goal: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `type(?stone, v2)`, `receivedanalysis(?stone)`, `type(?soil, v6)`, `receivedanalysis(?soil)`.
           
           *   `atconf(v12, v13)`: The plan for `v12` does not end at `v13`. It ends at `q3`. This is a problem. However, the axiom does not require the rovers to be at a *specific* configuration, only *at* `v13` and `v15` respectively at the point of evaluation for the axiom `new-axiom@0()`, but this is usually interpreted as "the rover exists at some config". Let's assume the explicit `atconf(v12, v13)` and `atconf(v14, v15)` in the goal axiom are initial conditions or conditions that need to be met, but the task is about reaching the overall "received" and "analyzed" states. If the goal requires them to be at *those specific initial configurations at the end*, then this plan would need to return the rovers to `v13` and `v15`. However, the PDDL goal `new-axiom@0()` does not explicitly specify the final locations of the rovers. The axiom `new-axiom@0()` is a conjunction of many facts, including `atconf(v12, v13)` and `atconf(v14, v15)`. This is problematic if the rovers are required to remain at their initial configs. But typically, the `atconf` facts inside the goal axiom are met if they are true *at the end*. If this is the case, the rover must return to its initial configuration.
           
           Let's assume the `atconf` in the axiom means they are at *some* configuration, not necessarily the initial one, OR that the axiom is true if at any point these conditions were met (not common for state-based PDDL). Given the problem description implies "achieves the goal expression", it usually means the goal expression must be true at the *final state*. If `atconf(v12, v13)` must be true at the end, `v12` needs to return there.
           
           Let's adapt the plan to fulfill `atconf(v12, v13)` and `atconf(v14, v15)` at the end.
           I will use `v12` to do all analysis and imaging. `v14` will just sit at its initial position to satisfy `atconf(v14, v15)`.
           
           **Rover `v12` plan (returning to `v13`):**
           1.  Move from `v13` to `q12` (to sample `v3`).
           2.  Sample `v3`.
           3.  Move from `q12` to `q14` (to sample `v4`).
           4.  Sample `v4`.
           5.  Move from `q14` to `q4` (to sample `v5`).
           6.  Sample `v5`.
           7.  Move from `q4` to `q5` (to sample `v1`).
           8.  Sample `v1`.
           9.  Move from `q5` to `q9` (to sample `v7`).
           10. Sample `v7`.
           11. Move from `q9` to `q15` (to sample `v8`).
           12. Sample `v8`.
           13. Move from `q15` to `q0` (to image `v19`).
           14. Calibrate `v10` for `v19`.
           15. Take image of `v19`.
           16. Move from `q0` to `q1` (to image `v18`).
           17. Calibrate `v10` for `v18`.
           18. Take image of `v18`.
           19. Move from `q1` to `q2` (to image `v20`).
           20. Calibrate `v10` for `v20`.
           21. Take image of `v20`.
           22. Move from `q2` to `q6` (to image `v17`).
           23. Calibrate `v10` for `v17`.
           24. Take image of `v17`.
           25. Move from `q6` to `q3` (to send data).
           26. Send analyses for `v1, v3, v4, v5, v7, v8`.
           27. Send images for `v17, v18, v19, v20`.
           28. Move from `q3` back to `v13`.
           
           The rover `v14` will remain at `v15` throughout this plan. The `free` predicate for `v12` and `v14` will be true as `v12` is the only one collecting samples and it will have its `store` full, but the axiom only requires `free(v12,v16)` and `free(v14,v16)`, so I will have `v12` drop all the rocks before returning to `v13`.
           
           Revised plan for `v12` (dropping rocks and returning to `v13`):
           1.  Move from `v13` to `q12` (to sample `v3`).
           2.  Sample `v3`.
           3.  Move from `q12` to `q14` (to sample `v4`).
           4.  Sample `v4`. (Store `v16` is now full, can't sample more without dropping)
               To handle multiple samples, I'll need to sample one, send analysis, drop, then pick up another. This makes the plan much longer. The problem assumes `store` is big enough to hold all samples? No, the `full` and `free` predicates are explicit. `sample_rock` makes `full(v,s)` true and `free(v,s)` false. `drop_rock` makes `free(v,s)` true and `full(v,s)` false. This means only one sample can be carried at a time. This changes the strategy significantly.
           
           Let's re-evaluate with the single-sample constraint.
           For each rock:
           1.  Move to rock's location.
           2.  Sample rock.
           3.  Move to communication location.
           4.  Send analysis.
           5.  Drop rock.
           
           For each image:
           1.  Move to objective's location.
           2.  Calibrate camera.
           3.  Take image.
           4.  Move to communication location.
           5.  Send image.
           
           This will be a long plan. Let's make sure the movement actions are all valid.
           `motion(v12, v13, #o2, v13)` implies `v12` can stay at `v13`.
           `motion(v12, v13, #t35, #q14)`
           `motion(v12, #q14, #o2, #q14)`
           ...
           It seems all necessary moves are available.
           
           Let's list the full plan for `v12` to handle everything. `v14` remains at `v15`.
           
           **Rover `v12` (starting at `v13`, ending at `v13` with `v16` free, all tasks complete):**
           
           **Analyzing Rock v3 (type v2 - stone):**
           1.  (move v12 v13 #o2 #q12) - to sample v3
           2.  (sample_rock v12 #q12 v3 v16)
           3.  (move v12 #q12 #t25 #q3) - to communication point
           4.  (send_analysis v12 #q3 #y3 v9 v3)
           5.  (drop_rock v12 v16) - `v16` is now free
           
           **Analyzing Rock v4 (type v2 - stone):**
           6.  (move v12 #q3 #t0 #q4) - to sample v4
           7.  (sample_rock v12 #q4 v4 v16)
           8.  (move v12 #q4 #t1 #q3) - to communication point
           9.  (send_analysis v12 #q3 #y3 v9 v4)
           10. (drop_rock v12 v16) - `v16` is now free
           
           **Analyzing Rock v5 (type v6 - soil):**
           11. (move v12 #q3 #t24 #q5) - to sample v5
           12. (sample_rock v12 #q5 v5 v16)
           13. (move v12 #q5 #t2 #q3) - to communication point
           14. (send_analysis v12 #q3 #y3 v9 v5)
           15. (drop_rock v12 v16) - `v16` is now free
           
           **Analyzing Rock v1 (type v2 - stone):**
           16. (move v12 #q3 #o2 #q5) (from q3 to q5, if not already at q5. This is already covered)
               Let's use the closest `move` for `q3` to `q5` is `(move v12 #q3 #t24 #q5)`.
               No, `v12` is at `q3`. Need to move to `q5` to sample `v1`. Then to `q3` to send.
               11. (move v12 #q3 #t24 #q5)
               12. (sample_rock v12 #q5 v1 v16)
               13. (move v12 #q5 #t2 #q3)
               14. (send_analysis v12 #q3 #y3 v9 v1)
               15. (drop_rock v12 v16)
           
           **Analyzing Rock v7 (type v6 - soil):**
           16. (move v12 #q3 #t15 #q9) - to sample v7
           17. (sample_rock v12 #q9 v7 v16)
           18. (move v12 #q9 #t14 #q3) - to communication point
           19. (send_analysis v12 #q3 #y3 v9 v7)
           20. (drop_rock v12 v16) - `v16` is now free
           
           **Analyzing Rock v8 (type v6 - soil):**
           21. (move v12 #q3 #o2 #q15) - to sample v8
           22. (sample_rock v12 #q15 v8 v16)
           23. (move v12 #q15 #t27 #q3) - to communication point
           24. (send_analysis v12 #q3 #y3 v9 v8)
           25. (drop_rock v12 v16) - `v16` is now free
           
           **Imaging v19:**
           26. (move v12 #q3 #t3 #q0) - to image v19
           27. (calibrate v12 #q0 #y0 v19 v10)
           28. (take_image v12 #q0 #y0 v19 v10 v11)
           29. (move v12 #q0 #t3 #q3) - to communication point
           30. (send_image v12 #q3 #y3 v9 v19 v11)
           
           **Imaging v18:**
           31. (move v12 #q3 #t4 #q1) - to image v18
           32. (calibrate v12 #q1 #y1 v18 v10)
           33. (take_image v12 #q1 #y1 v18 v10 v11)
           34. (move v12 #q1 #t4 #q3) - to communication point
           35. (send_image v12 #q3 #y3 v9 v18 v11)
           
           **Imaging v20:**
           36. (move v12 #q3 #o2 #q2) - to image v20
           37. (calibrate v12 #q2 #y2 v20 v10)
           38. (take_image v12 #q2 #y2 v20 v10 v11)
           39. (move v12 #q2 #t5 #q3) - to communication point
           40. (send_image v12 #q3 #y3 v9 v20 v11)
           
           **Imaging v17:**
           41. (move v12 #q3 #o2 #q6) - to image v17
           42. (calibrate v12 #q6 #y4 v17 v10)
           43. (take_image v12 #q6 #y4 v17 v10 v11)
           44. (move v12 #q6 #t6 #q3) - to communication point
           45. (send_image v12 #q3 #y3 v9 v17 v11)
           
           **Return v12 to v13:**
           46. (move v12 #q3 #t7 v13)
           
           This plan ensures all rocks are analyzed, all images are received, `v12` ends at `v13` with `v16` free, and `v14` remains at `v15` with `v16` free.
           
           Let's carefully check the path for `v12` to communication point `q3` from various observation/sampling points.
           From `q12` to `q3`: `(move v12 #q12 #t25 #q3)` exists.
           From `q4` to `q3`: `(move v12 #q4 #t1 #q3)` exists.
           From `q5` to `q3`: `(move v12 #q5 #t2 #q3)` exists.
           From `q9` to `q3`: `(move v12 #q9 #t14 #q3)` exists.
           From `q15` to `q3`: `(move v12 #q15 #t27 #q3)` exists.
           From `q0` to `q3`: `(move v12 #q0 #t3 #q3)` exists.
           From `q1` to `q3`: `(move v12 #q1 #t4 #q3)` exists.
           From `q2` to `q3`: `(move v12 #q2 #t5 #q3)` exists.
           From `q6` to `q3`: `(move v12 #q6 #t6 #q3)` exists.
           From `q3` to `v13`: `(move v12 #q3 #t7 v13)` exists.
           
           Also need to check path from `v13` to various points, and from one sampling/imaging point to the next.
           From `v13` to `q12`: (move v12 v13 #o2 #q12)
           From `q3` to `q4`: (move v12 #q3 #t0 #q4)
           From `q3` to `q5`: (move v12 #q3 #t24 #q5)
           From `q3` to `q9`: (move v12 #q3 #t15 #q9)
           From `q3` to `q15`: (move v12 #q3 #o2 #q15)
           From `q3` to `q0`: (move v12 #q3 #t3 #q0)
           From `q3` to `q1`: (move v12 #q3 #t4 #q1)
           From `q3` to `q2`: (move v12 #q3 #o2 #q2)
           From `q3` to `q6`: (move v12 #q3 #o2 #q6)
           
           All moves exist as provided.
           
           ```
           (move v12 v13 #o2 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #t25 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q3 #t0 #q4)
           (sample_rock v12 #q4 v4 v16)
           (move v12 #q4 #t1 #q3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q3 #t24 #q5)
           (sample_rock v12 #q5 v5 v16)
           (move v12 #q5 #t2 #q3)
           (send_analysis v12 #q3 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t24 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t2 #q3)
           (send_analysis v12 #q3 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #t15 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t14 #q3)
           (send_analysis v12 #q3 #y3 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #q15)
           (sample_rock v12 #q15 v8 v16)
           (move v12 #q15 #t27 #q3)
           (send_analysis v12 #q3 #y3 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q3 #t3 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t3 #q3)
           (send_image v12 #q3 #y3 v9 v19 v11)
           (move v12 #q3 #t4 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t4 #q3)
           (send_image v12 #q3 #y3 v9 v18 v11)
           (move v12 #q3 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #t5 #q3)
           (send_image v12 #q3 #y3 v9 v20 v11)
           (move v12 #q3 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t6 #q3)
           (send_image v12 #q3 #y3 v9 v17 v11)
           (move v12 #q3 #t7 v13)
           ```

