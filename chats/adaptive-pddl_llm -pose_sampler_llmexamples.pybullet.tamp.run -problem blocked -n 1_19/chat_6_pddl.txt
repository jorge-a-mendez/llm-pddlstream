User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom supported(v12, v13, v14)
           Atom pose(v15, v16)
           Atom stackable(v8, v18)
           Atom type(v12, v17)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom graspable(v15)
           Atom graspable(v8)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom type(v8, v17)
           Atom aconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v15, v10)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom pose(v8, v9)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom atpose(v15, v16)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom canmove()
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom arm(v6)
           Atom handempty(v4)
           Atom supported(v15, v16, v11)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom grasp(v8, v23)
           Atom grasp(v8, v22)
           Atom grasp(v15, #o1)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v22, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v19, v22, #q3, #t7)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v21, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom basemotion(#q3, #o0, v28)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v28, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q3, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v28 v29))
           ((place v4 v8 v19 v21 v28 v29))
           ((pick v4 v8 v19 v22 #q3 #t7))
           ((place v4 v8 v19 v22 #q3 #t7))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v22 #q2 #t5))
           ((place v4 v8 v9 v22 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which is `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v8, v17)`. So, we need to achieve `on(v8, v18)`.
           The initial state shows `atpose(v8, v9)` and `supported(v8, v9, v11)`. To achieve `on(v8, v18)`, we need to place `v8` onto `v18`.
           `v18` is a stackable surface for `v8` (`stackable(v8, v18)`).
           We also have `pose(v8, v19)` and `supported(v8, v19, v18)`. This means that `v19` is a valid pose for `v8` to be on `v18`.
           So, the plan involves picking `v8` from its current pose `v9` and placing it at `v19` on `v18`.
           
           We need to check which pick and place actions are available for `v8`.
           Available pick actions for `v8`:
           - `(pick v4 v8 v19 v20 v24 v25)`
           - `(pick v4 v8 v19 v21 v28 v29)`
           - `(pick v4 v8 v19 v22 #q3 #t7)`
           - `(pick v4 v8 v19 v23 v26 v27)`
           - `(pick v4 v8 v9 v22 #q2 #t5)`
           
           From these, only `(pick v4 v8 v9 v22 #q2 #t5)` has `v9` as the current pose of `v8`.
           The preconditions for this pick action are:
           - `kin(v4, v8, v9, v22, #q2, #t5)`: True in initial state.
           - `atpose(v8, v9)`: True in initial state.
           - `handempty(v4)`: True in initial state.
           - `atbconf(#q2)`: False in initial state. The robot is at `v3`. We need to move the base to `#q2`.
           - `~unsafeapproach(v8, v9, v22)`: True in initial state (`~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)`).
           - `~unsafeatraj(#t5)`: Not explicitly stated, so assume false or it needs to be calculated. If this is true, the action is not executable.
           
           To satisfy `atbconf(#q2)`, we need to use a `move_base` action. From `atbconf(v3)`, we look for `(move_base v3 #q2 <traj>)`. We have `(move_base v3 #q2 #t6)`.
           
           After picking, we need to place `v8` at `v19` on `v18`.
           Available place actions for `v8` at `v19`:
           - `(place v4 v8 v19 v20 v24 v25)`
           - `(place v4 v8 v19 v21 v28 v29)`
           - `(place v4 v8 v19 v22 #q3 #t7)`
           - `(place v4 v8 v19 v23 v26 v27)`
           
           The pick action used `grasp(v8, v22)`. So, we need to use a place action that also uses `grasp(v8, v22)`.
           This leaves us with `(place v4 v8 v19 v22 #q3 #t7)`.
           The preconditions for this place action are:
           - `kin(v4, v8, v19, v22, #q3, #t7)`: True in initial state.
           - `atgrasp(v4, v8, v22)`: This will be true after the pick action.
           - `atbconf(#q3)`: False initially. We will need to move the base from `#q2` to `#q3`. We have `(move_base #q2 #q3 #o0)`.
           - `~unsafepose(v8, v19)`: Need to check. There is no explicit `~test-cfree-pose-pose-negative` involving `v8` and `v19`. Assume safe by default if not listed as unsafe.
           - `~unsafeapproach(v8, v19, v22)`: Assume safe.
           - `~unsafeatraj(#t7)`: Assume safe.
           
           So the plan would be:
           1. Move base from `v3` to `#q2`.
           2. Pick `v8` using `v4` at pose `v9` with grasp `v22` and base config `#q2` and trajectory `#t5`.
           3. Move base from `#q2` to `#q3`.
           4. Place `v8` using `v4` at pose `v19` with grasp `v22` and base config `#q3` and trajectory `#t7`.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v22 #q2 #t5)
           (move_base #q2 #q3 #o0)
           (place v4 v8 v19 v22 #q3 #t7)

