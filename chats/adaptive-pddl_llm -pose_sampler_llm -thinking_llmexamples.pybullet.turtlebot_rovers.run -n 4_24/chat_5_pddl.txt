User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t12: object
           #t13: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom lander(v9)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom rock(v1)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom type(v8, v6)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom objective(v20)
           Atom rock(v7)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #q13, #y9, v17)
           Atom imagerange(v12, #q13, v17)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom imagevisible(v12, #q12, #y8, v18)
           Atom imagerange(v12, #q12, v18)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom imagevisible(v12, #q9, #y5, v20)
           Atom imagerange(v12, #q9, v20)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q14, v3)
           Atom conf(v14, #q14)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom comvisible(v12, #q11, #y7, v9)
           Atom comrange(v12, #q11, v9)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q10, #y6, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t18, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t16, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, v15, #t4, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v12, v13, #t21, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q1, #t5, v15)
           Atom motion(v14, #q4, #t7, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q5, #t8, #q1)
           Atom motion(v14, #q7, #t10, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q8, #t22, #q1)
           Atom motion(v14, #q1, #t9, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q2, #t6, #q1)
           Atom motion(v14, #q1, #t15, #q7)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #t24, #q8)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q1, #t13, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #t12, #q1)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #t23, #q1)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q1, #t25, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, v13, #t20, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #t28, #q11)
           Atom motion(v12, #q9, #t26, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q13, #t29, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #t17, v13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #t19, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #t27, #q11)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q14 v3 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t27 #q11))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #t17 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t28 #q11))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t29 #q11))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t26 #q11))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t18 #q9))
           ((move v12 v13 #t19 #q10))
           ((move v12 v13 #t20 #q12))
           ((move v12 v13 #t21 #q13))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q1 #t13 #q6))
           ((move v14 #q1 #t15 #q7))
           ((move v14 #q1 #t24 #q8))
           ((move v14 #q1 #t25 #q14))
           ((move v14 #q1 #t5 v15))
           ((move v14 #q1 #t9 #q5))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t23 #q1))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t8 #q1))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t12 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q1))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t22 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t16 #q8))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t4 #q5))
           ((calibrate v12 #q10 #y6 v19 v10))
           ((calibrate v12 #q12 #y8 v18 v10))
           ((calibrate v12 #q13 #y9 v17 v10))
           ((calibrate v12 #q9 #y5 v20 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q10 #y6 v19 v10 v11))
           ((take_image v12 #q12 #y8 v18 v10 v11))
           ((take_image v12 #q13 #y9 v17 v10 v11))
           ((take_image v12 #q9 #y5 v20 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q11 #y7 v9 v1))
           ((send_analysis v12 #q11 #y7 v9 v3))
           ((send_analysis v12 #q11 #y7 v9 v4))
           ((send_analysis v12 #q11 #y7 v9 v5))
           ((send_analysis v12 #q11 #y7 v9 v7))
           ((send_analysis v12 #q11 #y7 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q11 #y7 v9 v19 v11))
           ((send_image v12 #q11 #y7 v9 v18 v11))
           ((send_image v12 #q11 #y7 v9 v17 v11))
           ((send_image v12 #q11 #y7 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Summary of my plan to achieve the `new-axiom@0()` goal in the `rovers` domain:**
           
           Alright, let's break this down. The objective here is to satisfy the conditions of this new axiom. The critical thing is to ensure that we meet the criteria for a conjunction of several atoms. First, it requires that rovers v12 and v14 be in their initial configurations, and that they have a free store.  This is a good start as these conditions are already true in the initial state.
           
           The main challenge lies in the `receivedimage` and `receivedanalysis` predicates. We need four images (of objectives v17, v18, v19, and v20) and analysis of at least one stone and one soil sample. I can satisfy the image requirements by having rover v12 take images, and then send the images to the lander. The analyses will be sent by rover v14.
           
           I have resources that work perfectly. Rover v10's camera is onboard both rovers, and both have the required `mode v11`. The store v16 is free for both rovers. Both are at their initial configurations, v13 and v15. There are available objectives, rocks, and the lander.
           
           My plan has two distinct parts. First, rover v12 is responsible for taking the four images. I need to create a plan that lets rover v12 move to the needed configurations and modes to calibrate and take images, and send them to the lander. This is pretty straightforward. Each of the four images have a corresponding plan. I found that this approach avoids conflict between the two rovers and I have all the available moves required for rover v12.
           
           Secondly, rover v14 will be responsible for obtaining and sending the analysis. Rover v14 will move to a rock of type soil and a rock of type stone, take a sample, send the analysis, and drop the sample, ensuring both rock type requirements have been met. It must also return to its initial configuration. The main issue is that rovers can only carry one sample at a time. The solution is to drop one after analysis.
           
           The whole plan will be a sequence of actions, and all of these actions seem valid and available. At the end, I need to check to make sure the goals are met. Each requirement is met, the plan should also optimize the `atconf` predicate to satisfy the conditions.
           
)

Model:     **Summary of my plan to achieve the `new-axiom@0()` goal in the `rovers` domain:**
           
           Alright, let's break this down. The objective here is to satisfy the conditions of this new axiom. The critical thing is to ensure that we meet the criteria for a conjunction of several atoms. First, it requires that rovers v12 and v14 be in their initial configurations, and that they have a free store.  This is a good start as these conditions are already true in the initial state.
           
           The main challenge lies in the `receivedimage` and `receivedanalysis` predicates. We need four images (of objectives v17, v18, v19, and v20) and analysis of at least one stone and one soil sample. I can satisfy the image requirements by having rover v12 take images, and then send the images to the lander. The analyses will be sent by rover v14.
           
           I have resources that work perfectly. Rover v10's camera is onboard both rovers, and both have the required `mode v11`. The store v16 is free for both rovers. Both are at their initial configurations, v13 and v15. There are available objectives, rocks, and the lander.
           
           My plan has two distinct parts. First, rover v12 is responsible for taking the four images. I need to create a plan that lets rover v12 move to the needed configurations and modes to calibrate and take images, and send them to the lander. This is pretty straightforward. Each of the four images have a corresponding plan. I found that this approach avoids conflict between the two rovers and I have all the available moves required for rover v12.
           
           Secondly, rover v14 will be responsible for obtaining and sending the analysis. Rover v14 will move to a rock of type soil and a rock of type stone, take a sample, send the analysis, and drop the sample, ensuring both rock type requirements have been met. It must also return to its initial configuration. The main issue is that rovers can only carry one sample at a time. The solution is to drop one after analysis.
           
           The whole plan will be a sequence of actions, and all of these actions seem valid and available. At the end, I need to check to make sure the goals are met. Each requirement is met, the plan should also optimize the `atconf` predicate to satisfy the conditions.
           

