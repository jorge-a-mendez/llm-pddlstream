User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom rock(v3)
           Atom objective(v17)
           Atom free(v14, v16)
           Atom rock(v4)
           Atom rock(v7)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom objective(v20)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom rock(v5)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom mode(v11)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a camera (v10), a lander (v9), a store (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There are also different types of rocks and soil represented by v2 and v6.
           
           The goal is to achieve `new-axiom@0()`, which is a complex axiom. Let's break down what that axiom means:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           From the initial state, we already have:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           
           So, the parts of the goal that are already satisfied are the configurations of the rovers and the free status of their stores.
           
           The remaining parts of the goal are:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedimage(v19, v11)`
           4. `receivedimage(v20, v11)`
           5. `type(?stone, v2)` and `receivedanalysis(?stone)` for any rock of type v2.
           6. `type(?soil, v6)` and `receivedanalysis(?soil)` for any rock of type v6.
           
           Let's look at the rocks present and their types:
           - `type(v1, v2)` (stone)
           - `type(v3, v2)` (stone)
           - `type(v4, v2)` (stone)
           - `type(v5, v6)` (soil)
           - `type(v7, v6)` (soil)
           - `type(v8, v6)` (soil)
           
           To achieve `receivedanalysis` for a rock, a rover must first `sample_rock` and then `send_analysis`. To achieve `receivedimage`, a rover must `calibrate`, then `take_image`, and then `send_image`.
           
           The only available actions in the provided list are `move` and `drop_rock`.
           - `move v12 v13 #o2 v13`: This move action for v12 results in v12 staying at v13.
           - `move v14 v15 #o2 v15`: This move action for v14 results in v14 staying at v15.
           - `drop_rock v12 v16`: This action requires `full(v12, v16)`, but the initial state has `free(v12, v16)`. So this action is not possible.
           - `drop_rock v14 v16`: This action requires `full(v14, v16)`, but the initial state has `free(v14, v16)`. So this action is not possible.
           
           None of the provided actions can lead to `receivedimage` or `receivedanalysis` facts.
           The actions required for the goal are `calibrate`, `take_image`, `send_image`, `sample_rock`, and `send_analysis`. None of these are in the list of available actions. Therefore, the goal is not achievable with the given set of allowed actions.
           
           The goal is not achievable with the given set of allowed actions.

