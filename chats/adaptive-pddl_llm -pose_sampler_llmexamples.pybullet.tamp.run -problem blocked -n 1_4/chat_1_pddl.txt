User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v8, v9)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom graspable(v15)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom arm(v6)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom supported(v15, v16, v11)
           Atom handempty(v6)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom atpose(v15, v16)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom graspable(v12)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom type(v8, v17)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom canmove()
           Atom supported(v12, v13, v14)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are graspable and stackable. The robot has two arms, v4 and v6, both of which are currently handempty. The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true, where `?green` is a variable representing an object. Looking at the initial state, we have `type(v8, v17)` and `type(v12, v17)`. So, `?green` can be either `v8` or `v12`.
           
           To satisfy `on(?green, v18)`, we need to have `supported(?green, ?p, v18)` and `atpose(?green, ?p)`. Let's consider `v8` as `?green`. The initial state has `atpose(v8, v9)` and `supported(v8, v9, v11)`. It also has `supported(v8, #o2, v18)`. If we can change the pose of `v8` to `#o2`, then `on(v8, v18)` would be satisfied. However, we also have `supported(v8, #o2, v10)`.
           Similarly, for `v12`, we have `atpose(v12, v13)` and `supported(v12, v13, v14)`. We also have `supported(v12, #o2, v18)`.
           
           The only available action is `move_base v3 v3 #o0`. This action doesn't change the state of any objects or arm configurations, except for `atbconf`. Since the current `atbconf` is `v3` and the action also results in `atbconf(v3)`, this action essentially does nothing in terms of achieving the goal.
           
           The goal requires an object of type `v17` to be `on` object `v18`. Currently, `v8` (type `v17`) is `on` `v11` (since `atpose(v8, v9)` and `supported(v8, v9, v11)`), and `v12` (type `v17`) is `on` `v14` (since `atpose(v12, v13)` and `supported(v12, v13, v14)`). To achieve the goal, one of these objects needs to be picked up and placed onto `v18`. This would require `pick` and `place` actions. However, these actions are not available in the given list of valid action instances. Therefore, the goal is not achievable with the provided actions.

