User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom supported(v12, v13, v14)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom atpose(v15, v16)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom handempty(v4)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom bconf(v3)
           Atom type(v12, v17)
           Atom supported(v8, v9, v11)
           Atom canmove()
           Atom graspable(v12)
           Atom atpose(v12, v13)
           Atom atpose(v8, v9)
           Atom stackable(v8, v18)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom stackable(v12, v18)
           Atom pose(v8, v9)
           Atom type(v8, v17)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`. Arm `v4` is currently at configuration `v5` and `v6` at `v7`. Both arms are initially empty. There are three graspable and stackable objects: `v12`, `v15`, and `v8`.
           
           `v15` is at `v16` and supported by `v11`.
           `v12` is at `v13` and supported by `v14`. `v12` has type `v17`.
           `v8` is at `v9` and supported by `v11`. `v8` has type `v17`.
           
           The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true for some object `?green`. From the initial state, we know that `v12` and `v8` are of `type v17`. Also, `v12` is stackable on `v18` and `v8` is stackable on `v18`. Therefore, to achieve the goal, we need to place either `v12` or `v8` onto `v18`.
           
           Let's choose `v12` as the object to be placed on `v18`. Currently, `v12` is at `v13`. We need to pick it up and then place it on `v18`. The action `pick` requires `atbconf` to be true for some base configuration. The current `atbconf` is `v3`. The `kin` relations show that `v4` can pick up `v12` at `v13` with grasp `#o1` from base configuration `#o3` and arm trajectory `#o4`. This means we need to move the base from `v3` to `#o3` first.
           
           1. **`move_base v3 #o3 #o0`**: This moves the robot's base to the configuration `#o3`, which is required for the `pick` action.
           2. **`pick v4 v12 v13 #o1 #o3 #o4`**: Arm `v4` picks up `v12` from pose `v13`. After this, `v4` is holding `v12`, and `v12` is no longer at `v13`.
           3. **`place v4 v12 #o2 #o1 #o3 #o4`**: Arm `v4` places `v12` at a new pose `#o2`. This pose must be supported by `v18`. The initial state contains `supported(v12, #o2, v18)`, which means placing `v12` at `#o2` on `v18` is a valid option. After this, `v12` is at `#o2` and supported by `v18`, satisfying `on(v12, v18)`. Since `type(v12, v17)` is also true, the goal `new-axiom@0()` is achieved.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

