User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v5, v6)
           Atom objective(v17)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom objective(v18)
           Atom rock(v3)
           Atom rover(v14)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v4)
           Atom above(v14, #q5, v7)
           Atom conf(v14, #q5)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t8, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #t15, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #t1, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q0, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q2)
           Atom motion(v12, #q4, #t4, v13)
           Atom motion(v12, #q4, #t3, #q0)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #t2, #q4)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q8, #t16, #q1)
           Atom motion(v14, #q1, #t13, #q6)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q6, #t12, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, v15, #t6, #q5)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #t5, #q1)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v7 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t9 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t15 #q2))
           ((move v12 #q3 #t2 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t11 #q2))
           ((move v12 #q4 #t3 #q0))
           ((move v12 #q4 #t4 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t13 #q6))
           ((move v14 #q1 #t14 #q7))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t5 #q1))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t12 #q1))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t6 #q5))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to ensuring these things are true at the end:
           
           *   Two rovers, v12 and v14, are in their initial configurations (v13 and v15, respectively).
           *   We've successfully received images of two specific objectives (v17 and v18).
           *   We've received analysis results for every rock of type "stone" (v2) and "soil" (v6).
           
           The initial state provides the context, and it's looking pretty good: rovers have cameras and free stores. We need to leverage those to achieve the goal.
           
           My strategy involves using two rovers: `v12` for image collection and transmission and `v14` for rock analysis. I am also making some assumptions that things are in an unblocked state to achieve visibility.
           
           **Rover v12 - Image Acquisition & Transmission Plan**
           
           1.  **Move v12 to #q3:** (Initial state is v13) This is the launchpad.
           2.  **Calibrate v12's Camera:** (v10) needed to take a clear photo
           3.  **Take an image of objective v17 (mode v11).**
           4.  **Move v12 to #q4:** (communicating) to send image data
           5.  **Send the image to the lander (v9).**
           6.  **Move v12 to #q2:**
           7.  **Calibrate the camera again!** This is very important.
           8.  **Take an image of objective v18 (mode v11).**
           9.  **Move v12 back to #q4**
           10. **Send the image to the lander (v9) again.**
           11. **Move v12 back to v13** (restores initial conf)
           
           This sequence ensures we acquire both images and successfully transmit them.
           
           **Rover v14 - Rock Analysis Plan**
           
           The initial state has `v14` starting at `v15`. `v14` also needs to communicate.
           
           1.  **Move v14 to #o5:** This is important for analyzing samples.
           2.  **Sample rock v4 (type v2) into the store (v16).**
           3.  **Move v14 to #q1:** (communication)
           4.  **Send analysis of v4 to the lander (v9).**
           5.  **Drop rock v4, so the store is free!**
           6.  **Move v14 back to #o5**
           7.  **Sample rock v8 (type v6) into the store (v16).**
           8.  **Move v14 to #q1:**
           9.  **Send analysis of v8 to the lander (v9).**
           10. **Drop rock v8, so the store is free!**
           11. **Move v14 to #q5**
           12. **Sample rock v7 (type v6) into the store (v16).**
           13. **Move v14 to #q1:**
           14. **Send analysis of v7 to the lander (v9).**
           15. **Drop rock v7, so the store is free!**
           16. **Move v14 to #q6**
           17. **Sample rock v5 (type v6) into the store (v16).**
           18. **Move v14 to #q1:**
           19. **Send analysis of v5 to the lander (v9).**
           20. **Drop rock v5, so the store is free!**
           21. **Move v14 to #q7**
           22. **Sample rock v1 (type v2) into the store (v16).**
           23. **Move v14 to #q1:**
           24. **Send analysis of v1 to the lander (v9).**
           25. **Drop rock v1, so the store is free!**
           26. **Move v14 to #q8**
           27. **Sample rock v3 (type v2) into the store (v16).**
           28. **Move v14 to #q1:**
           29. **Send analysis of v3 to the lander (v9).**
           30. **Drop rock v3, so the store is free!**
           
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to ensuring these things are true at the end:
           
           *   Two rovers, v12 and v14, are in their initial configurations (v13 and v15, respectively).
           *   We've successfully received images of two specific objectives (v17 and v18).
           *   We've received analysis results for every rock of type "stone" (v2) and "soil" (v6).
           
           The initial state provides the context, and it's looking pretty good: rovers have cameras and free stores. We need to leverage those to achieve the goal.
           
           My strategy involves using two rovers: `v12` for image collection and transmission and `v14` for rock analysis. I am also making some assumptions that things are in an unblocked state to achieve visibility.
           
           **Rover v12 - Image Acquisition & Transmission Plan**
           
           1.  **Move v12 to #q3:** (Initial state is v13) This is the launchpad.
           2.  **Calibrate v12's Camera:** (v10) needed to take a clear photo
           3.  **Take an image of objective v17 (mode v11).**
           4.  **Move v12 to #q4:** (communicating) to send image data
           5.  **Send the image to the lander (v9).**
           6.  **Move v12 to #q2:**
           7.  **Calibrate the camera again!** This is very important.
           8.  **Take an image of objective v18 (mode v11).**
           9.  **Move v12 back to #q4**
           10. **Send the image to the lander (v9) again.**
           11. **Move v12 back to v13** (restores initial conf)
           
           This sequence ensures we acquire both images and successfully transmit them.
           
           **Rover v14 - Rock Analysis Plan**
           
           The initial state has `v14` starting at `v15`. `v14` also needs to communicate.
           
           1.  **Move v14 to #o5:** This is important for analyzing samples.
           2.  **Sample rock v4 (type v2) into the store (v16).**
           3.  **Move v14 to #q1:** (communication)
           4.  **Send analysis of v4 to the lander (v9).**
           5.  **Drop rock v4, so the store is free!**
           6.  **Move v14 back to #o5**
           7.  **Sample rock v8 (type v6) into the store (v16).**
           8.  **Move v14 to #q1:**
           9.  **Send analysis of v8 to the lander (v9).**
           10. **Drop rock v8, so the store is free!**
           11. **Move v14 to #q5**
           12. **Sample rock v7 (type v6) into the store (v16).**
           13. **Move v14 to #q1:**
           14. **Send analysis of v7 to the lander (v9).**
           15. **Drop rock v7, so the store is free!**
           16. **Move v14 to #q6**
           17. **Sample rock v5 (type v6) into the store (v16).**
           18. **Move v14 to #q1:**
           19. **Send analysis of v5 to the lander (v9).**
           20. **Drop rock v5, so the store is free!**
           21. **Move v14 to #q7**
           22. **Sample rock v1 (type v2) into the store (v16).**
           23. **Move v14 to #q1:**
           24. **Send analysis of v1 to the lander (v9).**
           25. **Drop rock v1, so the store is free!**
           26. **Move v14 to #q8**
           27. **Sample rock v3 (type v2) into the store (v16).**
           28. **Move v14 to #q1:**
           29. **Send analysis of v3 to the lander (v9).**
           30. **Drop rock v3, so the store is free!**
           

