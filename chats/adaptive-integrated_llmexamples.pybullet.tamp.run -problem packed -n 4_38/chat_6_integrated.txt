User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p24: object
           p25: object
           p26: object
           p27: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v51: object
           v52: object
           v53: object
           v54: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (-0.249, -0.105, 0.781) and quaternion (0.0, 0.0, 0.756, 0.655).
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.04, -0.035), (0.11, 0.035)).
           Object v13 is a pose with position (-0.252, -0.477, 0.781) and quaternion (0.0, 0.0, 0.785, 0.62).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.04), (0.035, 0.11)).
           Object v15 is a pose with position (0.055, -0.3, 0.781) and quaternion (0.0, 0.0, 0.479, 0.878).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p8 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p24 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.075, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.11), (0.035, -0.04)).
           Object p25 is a pose with position (0.075, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p18 is a pose with position (0.0, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p26 is a pose with position (0.0, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (0.241, 0.319, 0.781) and quaternion (0.0, 0.0, -0.138, 0.99).
           Object p27 is a pose with position (0.0, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p20 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.075, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p22 is a pose with position (0.0, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p23 is a pose with position (0.0, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p9 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v12, v13)
           Atom pose(v16, p27)
           Atom pose(v12, v13)
           Atom pose(v14, p26)
           Atom graspable(v16)
           Atom supported(v14, p9, v18)
           Atom kin(v31, v37, p19, v54, v34, v35)
           Atom atpose(v14, v15)
           Atom stackable(v16, v18)
           Atom ataconf(v4, v5)
           Atom pose(v8, p24)
           Atom supported(v16, v17, v11)
           Atom kin(v31, v32, p12, v33, v34, v35)
           Atom pose(v12, p25)
           Atom ataconf(v6, v7)
           Atom supported(v8, p20, v18)
           Atom pose(v16, p10)
           Atom stackable(v8, v10)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom pose(v8, p11)
           Atom pose(v8, p15)
           Atom supported(v16, p19, v18)
           Atom kin(v31, v37, p23, v54, v34, v35)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom stackable(v16, v10)
           Atom atpose(v16, v17)
           Atom pose(v16, p23)
           Atom supported(v14, p22, v18)
           Atom pose(v14, p22)
           Atom kin(v31, v38, p15, v33, v34, v35)
           Atom stackable(v14, v10)
           Atom supported(v12, p12, v18)
           Atom bconf(v3)
           Atom kin(v31, v32, p25, v52, v34, v35)
           Atom pose(v12, p8)
           Atom supported(v16, p27, v18)
           Atom kin(v31, v36, p18, v53, v34, v35)
           Atom supported(v8, v9, v11)
           Atom supported(v12, v13, v11)
           Atom pose(v16, p14)
           Atom supported(v12, p8, v18)
           Atom pose(v12, p21)
           Atom supported(v14, p18, v18)
           Atom supported(v16, p10, v18)
           Atom kin(v31, v38, p16, v51, v34, v35)
           Atom pose(v14, p13)
           Atom supported(v14, p13, v18)
           Atom handempty(v6)
           Atom controllable(v4)
           Atom stackable(v12, v18)
           Atom pose(v16, p19)
           Atom kin(v31, v38, p24, v51, v34, v35)
           Atom pose(v14, p18)
           Atom graspable(v14)
           Atom supported(v16, p14, v18)
           Atom supported(v8, p11, v18)
           Atom supported(v16, p23, v18)
           Atom supported(v12, p21, v18)
           Atom aconf(v4, v5)
           Atom supported(v8, p15, v18)
           Atom pose(v14, v15)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom supported(v14, p26, v18)
           Atom pose(v8, p16)
           Atom stackable(v14, v18)
           Atom pose(v14, p9)
           Atom kin(v31, v36, p26, v53, v34, v35)
           Atom kin(v31, v38, p20, v51, v34, v35)
           Atom arm(v4)
           Atom supported(v8, p24, v18)
           Atom kin(v31, v37, p27, v54, v34, v35)
           Atom handempty(v4)
           Atom supported(v12, p17, v18)
           Atom graspable(v8)
           Atom stackable(v8, v18)
           Atom kin(v31, v36, p22, v53, v34, v35)
           Atom supported(v14, v15, v11)
           Atom kin(v31, v36, p13, v33, v34, v35)
           Atom kin(v31, v32, p21, v52, v34, v35)
           Atom canmove()
           Atom kin(v31, v37, p14, v33, v34, v35)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom pose(v16, v17)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom supported(v12, p25, v18)
           Atom stackable(v12, v10)
           Atom supported(v8, p16, v18)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom atbconf(v3)
           Atom pose(v12, p12)
           Atom pose(v12, p17)
           Atom graspable(v12)
           Atom pose(v8, p20)
           Atom kin(v31, v32, p17, v52, v34, v35)
           Atom grasp(v16, #g1)
           Atom grasp(v12, #g3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #g0)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom grasp(v14, #g2)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v14, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom bconf(#q11)
           Atom atraj(#t26)
           Atom kin(v4, v16, p27, #g1, #q11, #t26)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p23, #g1, #o3, #o4)
           Atom bconf(#q12)
           Atom atraj(#t41)
           Atom kin(v4, v16, p10, #g1, #q12, #t41)
           Atom bconf(#q4)
           Atom atraj(#t5)
           Atom kin(v4, v16, p14, #g1, #q4, #t5)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v16, v17, #g1, #q1, #t2)
           Atom kin(v4, v16, p19, #g1, #o3, #o4)
           Atom kin(v4, v12, p8, #g3, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t14)
           Atom kin(v4, v12, p12, #g3, #q7, #t14)
           Atom bconf(#q10)
           Atom atraj(#t22)
           Atom kin(v4, v12, p25, #g3, #q10, #t22)
           Atom bconf(#q6)
           Atom atraj(#t13)
           Atom kin(v4, v12, v13, #g3, #q6, #t13)
           Atom kin(v4, v12, p17, #g3, #o3, #o4)
           Atom kin(v4, v12, p21, #g3, #o3, #o4)
           Atom kin(v4, v8, p16, #g0, #o3, #o4)
           Atom kin(v4, v8, p11, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, p15, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g0, #q3, #t4)
           Atom bconf(#q13)
           Atom atraj(#t46)
           Atom kin(v4, v8, p20, #g0, #q13, #t46)
           Atom bconf(#q8)
           Atom atraj(#t15)
           Atom kin(v4, v8, p24, #g0, #q8, #t15)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v14, p13, #g2, #q2, #t3)
           Atom bconf(#q9)
           Atom atraj(#t19)
           Atom kin(v4, v14, p26, #g2, #q9, #t19)
           Atom kin(v4, v14, p22, #g2, #o3, #o4)
           Atom kin(v4, v14, p18, #g2, #o3, #o4)
           Atom kin(v4, v14, p9, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t6)
           Atom kin(v4, v14, v15, #g2, #q5, #t6)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t8)
           Atom basemotion(#q1, #t8, v3)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(v3, #o0, #q9)
           Atom btraj(#t28)
           Atom basemotion(#q1, #t28, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t39)
           Atom basemotion(#q9, #t39, #q1)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t49)
           Atom basemotion(#q2, #t49, #q1)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q9, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(#q2, #t9, v3)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q9, #o0, #q12)
           Atom btraj(#t47)
           Atom basemotion(#q1, #t47, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q2)
           Atom basemotion(#q12, #o0, #q1)
           Atom basemotion(#q12, #o0, #q9)
           Atom btraj(#t38)
           Atom basemotion(#q1, #t38, #q4)
           Atom basemotion(#q4, #o0, #q12)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q12, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, v3)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom btraj(#t27)
           Atom basemotion(#q1, #t27, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom btraj(#t16)
           Atom basemotion(#q8, #t16, #q1)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q8, #o0, #q13)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q13, #o0, #q8)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q12)
           Atom btraj(#t48)
           Atom basemotion(#q1, #t48, #q13)
           Atom basemotion(#q13, #o0, #q1)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q13, #o0, #q4)
           Atom basemotion(#q4, #o0, #q13)
           Atom basemotion(#q2, #o0, #q13)
           Atom basemotion(#q13, #o0, #q2)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q13)
           Atom basemotion(#q13, #o0, #q3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t17)
           Atom basemotion(#q3, #t17, #q8)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q12, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t42)
           Atom basemotion(#q3, #t42, #q12)
           Atom basemotion(#q8, #o0, #q3)
           Atom btraj(#t35)
           Atom basemotion(v3, #t35, #q3)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q11, #o0, #q1)
           Atom btraj(#t30)
           Atom basemotion(#q1, #t30, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q0, #o0, #q12)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q13)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q13, #o0, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom btraj(#t37)
           Atom basemotion(#q3, #t37, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q12, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q11, #o0, #q0)
           Atom btraj(#t7)
           Atom basemotion(#q0, #t7, v3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom btraj(#t31)
           Atom basemotion(#q6, #t31, #q8)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q12)
           Atom btraj(#t34)
           Atom basemotion(#q6, #t34, #q11)
           Atom basemotion(#q6, #o0, #q0)
           Atom btraj(#t36)
           Atom basemotion(#q0, #t36, #q6)
           Atom basemotion(#q9, #o0, #q6)
           Atom btraj(#t18)
           Atom basemotion(#q8, #t18, #q6)
           Atom btraj(#t44)
           Atom basemotion(#q12, #t44, #q6)
           Atom btraj(#t32)
           Atom basemotion(#q6, #t32, #q9)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q13)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q13, #o0, #q6)
           Atom btraj(#t29)
           Atom basemotion(#q1, #t29, #q10)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q13, #o0, #q10)
           Atom btraj(#t33)
           Atom basemotion(#q6, #t33, #q10)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q10, #o0, #q7)
           Atom btraj(#t50)
           Atom basemotion(#q6, #t50, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, #q13)
           Atom basemotion(#q7, #o0, #q12)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q13, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q12, #o0, #q7)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q12)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q13, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t24)
           Atom basemotion(#q5, #t24, #q9)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, v3)
           Atom btraj(#t40)
           Atom basemotion(#q10, #t40, #q5)
           Atom btraj(#t23)
           Atom basemotion(#q5, #t23, #q8)
           Atom btraj(#t21)
           Atom basemotion(#q9, #t21, #q5)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom btraj(#t25)
           Atom basemotion(#q5, #t25, #q10)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t43)
           Atom basemotion(#q5, #t43, #q2)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q12, #o0, #q5)
           Atom btraj(#t20)
           Atom basemotion(#q8, #t20, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom btraj(#t45)
           Atom basemotion(#q7, #t45, #q5)
           Atom basemotion(#q5, #o0, #q13)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g1, #o3, #o4)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q12, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q13 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 #q6 #t36))
           ((move_base #q0 v3 #t7))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #t27))
           ((move_base #q1 #q9 #t28))
           ((move_base #q1 #q10 #t29))
           ((move_base #q1 #q11 #t30))
           ((move_base #q1 #q4 #t38))
           ((move_base #q1 #q12 #t47))
           ((move_base #q1 #q13 #t48))
           ((move_base #q1 v3 #t8))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q5 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q5 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q6 #t44))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q0 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q2 #o0))
           ((move_base #q13 #q3 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q5 #o0))
           ((move_base #q13 #q6 #o0))
           ((move_base #q13 #q7 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 #q1 #t49))
           ((move_base #q2 v3 #t9))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q13 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #t10))
           ((move_base #q3 #q8 #t17))
           ((move_base #q3 #q0 #t37))
           ((move_base #q3 #q12 #t42))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q12 #o0))
           ((move_base #q5 #q13 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #t12))
           ((move_base #q5 #q8 #t23))
           ((move_base #q5 #q9 #t24))
           ((move_base #q5 #q10 #t25))
           ((move_base #q5 #q2 #t43))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q13 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q8 #t31))
           ((move_base #q6 #q9 #t32))
           ((move_base #q6 #q10 #t33))
           ((move_base #q6 #q11 #t34))
           ((move_base #q6 #q7 #t50))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q12 #o0))
           ((move_base #q7 #q13 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q5 #t45))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t16))
           ((move_base #q8 #q6 #t18))
           ((move_base #q8 #q5 #t20))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q5 #t21))
           ((move_base #q9 #q1 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((move_base v3 #q3 #t35))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 p12 #g3 #q7 #t14))
           ((place v4 v12 p12 #g3 #q7 #t14))
           ((pick v4 v12 p17 #g3 #o3 #o4))
           ((place v4 v12 p17 #g3 #o3 #o4))
           ((pick v4 v12 p21 #g3 #o3 #o4))
           ((place v4 v12 p21 #g3 #o3 #o4))
           ((pick v4 v12 p25 #g3 #q10 #t22))
           ((place v4 v12 p25 #g3 #q10 #t22))
           ((pick v4 v12 p8 #g3 #o3 #o4))
           ((place v4 v12 p8 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q6 #t13))
           ((place v4 v12 v13 #g3 #q6 #t13))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p13 #g2 #q2 #t3))
           ((place v4 v14 p13 #g2 #q2 #t3))
           ((pick v4 v14 p18 #g2 #o3 #o4))
           ((place v4 v14 p18 #g2 #o3 #o4))
           ((pick v4 v14 p22 #g2 #o3 #o4))
           ((place v4 v14 p22 #g2 #o3 #o4))
           ((pick v4 v14 p26 #g2 #q9 #t19))
           ((place v4 v14 p26 #g2 #q9 #t19))
           ((pick v4 v14 p9 #g2 #o3 #o4))
           ((place v4 v14 p9 #g2 #o3 #o4))
           ((pick v4 v14 v15 #g2 #q5 #t6))
           ((place v4 v14 v15 #g2 #q5 #t6))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 p10 #g1 #q12 #t41))
           ((place v4 v16 p10 #g1 #q12 #t41))
           ((pick v4 v16 p14 #g1 #q4 #t5))
           ((place v4 v16 p14 #g1 #q4 #t5))
           ((pick v4 v16 p19 #g1 #o3 #o4))
           ((place v4 v16 p19 #g1 #o3 #o4))
           ((pick v4 v16 p23 #g1 #o3 #o4))
           ((place v4 v16 p23 #g1 #o3 #o4))
           ((pick v4 v16 p27 #g1 #q11 #t26))
           ((place v4 v16 p27 #g1 #q11 #t26))
           ((pick v4 v16 v17 #g1 #q1 #t2))
           ((place v4 v16 v17 #g1 #q1 #t2))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p11 #g0 #o3 #o4))
           ((place v4 v8 p11 #g0 #o3 #o4))
           ((pick v4 v8 p15 #g0 #q0 #t0))
           ((place v4 v8 p15 #g0 #q0 #t0))
           ((pick v4 v8 p16 #g0 #o3 #o4))
           ((place v4 v8 p16 #g0 #o3 #o4))
           ((pick v4 v8 p20 #g0 #q13 #t46))
           ((place v4 v8 p20 #g0 #q13 #t46))
           ((pick v4 v8 p24 #g0 #q8 #t15))
           ((place v4 v8 p24 #g0 #q8 #t15))
           ((pick v4 v8 v9 #g0 #q3 #t4))
           ((place v4 v8 v9 #g0 #q3 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v8 is on v11, v12 is on v11, v14 is on v11, and v16 is on v11. All objects are also supported by v18 at various poses, indicating that v18 is a valid placement surface. We need to pick up each object and place it on v18. Since there are collision-free poses for each object on v18 that do not involve '#' we should use those.
           
           Specifically:
           - v8 is at v9 and supported by v11. Goal: on(v8, v18). Available poses on v18 for v8 are p11, p15, p16, p20, p24, #o2. We will use p15 as it has a defined pick/place action with q0 and t0.
           - v12 is at v13 and supported by v11. Goal: on(v12, v18). Available poses on v18 for v12 are p8, p12, p17, p21, p25, #o2. We will use p12 as it has a defined pick/place action with q7 and t14.
           - v14 is at v15 and supported by v11. Goal: on(v14, v18). Available poses on v18 for v14 are p9, p13, p18, p22, p26, #o2. We will use p13 as it has a defined pick/place action with q2 and t3.
           - v16 is at v17 and supported by v11. Goal: on(v16, v18). Available poses on v18 for v16 are p10, p14, p19, p23, p27, #o2. We will use p17 as it has a defined pick/place action with q1 and t2 (this is the current pose of v16, so we don't need to move it).
           
           The plan involves picking up each object from its current location and placing it on a collision-free pose on v18. We can process them in order.
           
           1. Pick v8 from v9 and place it on p15 on v18.
           2. Pick v12 from v13 and place it on p12 on v18.
           3. Pick v14 from v15 and place it on p13 on v18.
           4. Pick v16 from v17 and place it on v17 (which is on v18).
           
           --Plan--:
           (pick v4 v8 v9 #g0 #q3 #t4)
           (move_base #q3 #q0 #o0)
           (place v4 v8 p15 #g0 #q0 #t0)
           (move_base #q0 #q6 #o0)
           (pick v4 v12 v13 #g3 #q6 #t13)
           (move_base #q6 #q7 #o0)
           (place v4 v12 p12 #g3 #q7 #t14)
           (move_base #q7 #q5 #o0)
           (pick v4 v14 v15 #g2 #q5 #t6)
           (move_base #q5 #q2 #o0)
           (place v4 v14 p13 #g2 #q2 #t3)
           (move_base #q2 #q1 #o0)
           (pick v4 v16 v17 #g1 #q1 #t2)
           (place v4 v16 v17 #g1 #q1 #t2)

User:      The plan you provided contains the following invalid actions: `(move_base #q3 #q0 #o0) , (move_base #q0 #q6 #o0) , (move_base #q6 #q7 #o0) , (move_base #q7 #q5 #o0) , (move_base #q5 #q2 #o0) , (move_base #q2 #q1 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q13 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 #q6 #t36))
           ((move_base #q0 v3 #t7))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #t27))
           ((move_base #q1 #q9 #t28))
           ((move_base #q1 #q10 #t29))
           ((move_base #q1 #q11 #t30))
           ((move_base #q1 #q4 #t38))
           ((move_base #q1 #q12 #t47))
           ((move_base #q1 #q13 #t48))
           ((move_base #q1 v3 #t8))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q5 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q5 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q6 #t44))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q0 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q2 #o0))
           ((move_base #q13 #q3 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q5 #o0))
           ((move_base #q13 #q6 #o0))
           ((move_base #q13 #q7 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 #q1 #t49))
           ((move_base #q2 v3 #t9))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q13 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #t10))
           ((move_base #q3 #q8 #t17))
           ((move_base #q3 #q0 #t37))
           ((move_base #q3 #q12 #t42))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q12 #o0))
           ((move_base #q5 #q13 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #t12))
           ((move_base #q5 #q8 #t23))
           ((move_base #q5 #q9 #t24))
           ((move_base #q5 #q10 #t25))
           ((move_base #q5 #q2 #t43))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q13 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q8 #t31))
           ((move_base #q6 #q9 #t32))
           ((move_base #q6 #q10 #t33))
           ((move_base #q6 #q11 #t34))
           ((move_base #q6 #q7 #t50))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q12 #o0))
           ((move_base #q7 #q13 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q5 #t45))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t16))
           ((move_base #q8 #q6 #t18))
           ((move_base #q8 #q5 #t20))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q5 #t21))
           ((move_base #q9 #q1 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((move_base v3 #q3 #t35))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 p12 #g3 #q7 #t14))
           ((place v4 v12 p12 #g3 #q7 #t14))
           ((pick v4 v12 p17 #g3 #o3 #o4))
           ((place v4 v12 p17 #g3 #o3 #o4))
           ((pick v4 v12 p21 #g3 #o3 #o4))
           ((place v4 v12 p21 #g3 #o3 #o4))
           ((pick v4 v12 p25 #g3 #q10 #t22))
           ((place v4 v12 p25 #g3 #q10 #t22))
           ((pick v4 v12 p8 #g3 #o3 #o4))
           ((place v4 v12 p8 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q6 #t13))
           ((place v4 v12 v13 #g3 #q6 #t13))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p13 #g2 #q2 #t3))
           ((place v4 v14 p13 #g2 #q2 #t3))
           ((pick v4 v14 p18 #g2 #o3 #o4))
           ((place v4 v14 p18 #g2 #o3 #o4))
           ((pick v4 v14 p22 #g2 #o3 #o4))
           ((place v4 v14 p22 #g2 #o3 #o4))
           ((pick v4 v14 p26 #g2 #q9 #t19))
           ((place v4 v14 p26 #g2 #q9 #t19))
           ((pick v4 v14 p9 #g2 #o3 #o4))
           ((place v4 v14 p9 #g2 #o3 #o4))
           ((pick v4 v14 v15 #g2 #q5 #t6))
           ((place v4 v14 v15 #g2 #q5 #t6))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 p10 #g1 #q12 #t41))
           ((place v4 v16 p10 #g1 #q12 #t41))
           ((pick v4 v16 p14 #g1 #q4 #t5))
           ((place v4 v16 p14 #g1 #q4 #t5))
           ((pick v4 v16 p19 #g1 #o3 #o4))
           ((place v4 v16 p19 #g1 #o3 #o4))
           ((pick v4 v16 p23 #g1 #o3 #o4))
           ((place v4 v16 p23 #g1 #o3 #o4))
           ((pick v4 v16 p27 #g1 #q11 #t26))
           ((place v4 v16 p27 #g1 #q11 #t26))
           ((pick v4 v16 v17 #g1 #q1 #t2))
           ((place v4 v16 v17 #g1 #q1 #t2))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p11 #g0 #o3 #o4))
           ((place v4 v8 p11 #g0 #o3 #o4))
           ((pick v4 v8 p15 #g0 #q0 #t0))
           ((place v4 v8 p15 #g0 #q0 #t0))
           ((pick v4 v8 p16 #g0 #o3 #o4))
           ((place v4 v8 p16 #g0 #o3 #o4))
           ((pick v4 v8 p20 #g0 #q13 #t46))
           ((place v4 v8 p20 #g0 #q13 #t46))
           ((pick v4 v8 p24 #g0 #q8 #t15))
           ((place v4 v8 p24 #g0 #q8 #t15))
           ((pick v4 v8 v9 #g0 #q3 #t4))
           ((place v4 v8 v9 #g0 #q3 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The task is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v8 is on v11, v12 is on v11, v14 is on v11, and v16 is on v11. All objects are also supported by v18 at various poses, indicating that v18 is a valid placement surface. We need to pick up each object and place it on v18.
           
           Specifically:
           - v8 is at v9 and supported by v11. Goal: on(v8, v18). Available poses on v18 for v8 are p11, p15, p16, p20, p24, #o2. We will use p15 as it has a defined pick/place action with q0 and t0.
           - v12 is at v13 and supported by v11. Goal: on(v12, v18). Available poses on v18 for v12 are p8, p12, p17, p21, p25, #o2. We will use p12 as it has a defined pick/place action with q7 and t14.
           - v14 is at v15 and supported by v11. Goal: on(v14, v18). Available poses on v18 for v14 are p9, p13, p18, p22, p26, #o2. We will use p13 as it has a defined pick/place action with q2 and t3.
           - v16 is at v17 and supported by v11. Goal: on(v16, v18). Available poses on v18 for v16 are p10, p14, p19, p23, p27, #o2. We will use p17 as it has a defined pick/place action with q1 and t2 (this is the current pose of v16, so we don't need to move it).
           
           The plan involves picking up each object from its current location and placing it on a collision-free pose on v18. We need to find valid move_base actions between the base configurations associated with the pick and place actions.
           
           Current base config is v3.
           
           1. For v8:
              - Pick v8 from v9 using q3.
              - Place v8 on p15 using q0.
              - We need move_base from q3 to q0. The valid action is `(move_base #q3 #q0 #t37)`.
           
           2. For v12:
              - Pick v12 from v13 using q6.
              - Place v12 on p12 using q7.
              - We need move_base from q0 to q6. The valid action is `(move_base #q0 #q6 #t36)`.
              - We need move_base from q6 to q7. The valid action is `(move_base #q6 #q7 #t50)`.
           
           3. For v14:
              - Pick v14 from v15 using q5.
              - Place v14 on p13 using q2.
              - We need move_base from q7 to q5. The valid action is `(move_base #q7 #q5 #t45)`.
              - We need move_base from q5 to q2. The valid action is `(move_base #q5 #q2 #t43)`.
           
           4. For v16:
              - Pick v16 from v17 using q1.
              - Place v16 on v17 using q1.
              - We need move_base from q2 to q1. The valid action is `(move_base #q2 #q1 #t49)`.
           
           --Plan--:
           (pick v4 v8 v9 #g0 #q3 #t4)
           (move_base #q3 #q0 #t37)
           (place v4 v8 p15 #g0 #q0 #t0)
           (move_base #q0 #q6 #t36)
           (pick v4 v12 v13 #g3 #q6 #t13)
           (move_base #q6 #q7 #t50)
           (place v4 v12 p12 #g3 #q7 #t14)
           (move_base #q7 #q5 #t45)
           (pick v4 v14 v15 #g2 #q5 #t6)
           (move_base #q5 #q2 #t43)
           (place v4 v14 p13 #g2 #q2 #t3)
           (move_base #q2 #q1 #t49)
           (pick v4 v16 v17 #g1 #q1 #t2)
           (place v4 v16 v17 #g1 #q1 #t2)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom on(v16, v18)`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The task is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v8 is on v11, v12 is on v11, v14 is on v11, and v16 is on v11. All objects are also supported by v18 at various poses, indicating that v18 is a valid placement surface. We need to pick up each object and place it on v18.
           
           Specifically:
           - v8 is at v9 and supported by v11. Goal: on(v8, v18). Available poses on v18 for v8 are p11, p15, p16, p20, p24, #o2. We will use p15 as it has a defined pick/place action with q0 and t0.
           - v12 is at v13 and supported by v11. Goal: on(v12, v18). Available poses on v18 for v12 are p8, p12, p17, p21, p25, #o2. We will use p12 as it has a defined pick/place action with q7 and t14.
           - v14 is at v15 and supported by v11. Goal: on(v14, v18). Available poses on v18 for v14 are p9, p13, p18, p22, p26, #o2. We will use p13 as it has a defined pick/place action with q2 and t3.
           - v16 is at v17 and supported by v11. Goal: on(v16, v18). In the initial state, `supported(v16, v17, v11)` is true, and `atpose(v16, v17)` is true. Also, `kin(v4, v16, v17, #g1, #q1, #t2)` exists, indicating that `v17` is a valid pose for `v16` and can be picked from there. The goal is to have `on(v16, v18)`. From the initial state, we have `supported(v16, p10, v18)`, `supported(v16, p14, v18)`, `supported(v16, p19, v18)`, `supported(v16, p23, v18)`, `supported(v16, p27, v18)`, `supported(v16, v17, v11)`. The error from the previous plan `Fact is not satisfied: Atom on(v16, v18)` occurred because `v17` is stated to be on `v11` in the initial state, and by placing `v16` at `v17` again, we are not placing it on `v18`. Therefore, we must place `v16` on a pose on `v18`. We will use p10, which has a pick/place action with q12 and t41.
           
           The plan involves picking up each object from its current location and placing it on a collision-free pose on v18. We need to find valid move_base actions between the base configurations associated with the pick and place actions.
           
           Current base config is v3.
           
           1. For v8:
              - Pick v8 from v9 using q3.
              - Place v8 on p15 using q0.
              - We need move_base from q3 to q0. The valid action is `(move_base #q3 #q0 #t37)`.
           
           2. For v12:
              - Pick v12 from v13 using q6.
              - Place v12 on p12 using q7.
              - We need move_base from q0 to q6. The valid action is `(move_base #q0 #q6 #t36)`.
              - We need move_base from q6 to q7. The valid action is `(move_base #q6 #q7 #t50)`.
           
           3. For v14:
              - Pick v14 from v15 using q5.
              - Place v14 on p13 using q2.
              - We need move_base from q7 to q5. The valid action is `(move_base #q7 #q5 #t45)`.
              - We need move_base from q5 to q2. The valid action is `(move_base #q5 #q2 #t43)`.
           
           4. For v16:
              - Pick v16 from v17 using q1.
              - Place v16 on p10 using q12.
              - We need move_base from q2 to q1. The valid action is `(move_base #q2 #q1 #t49)`.
              - We need move_base from q1 to q12. The valid action is `(move_base #q1 #q12 #t47)`.
           
           --Plan--:
           (pick v4 v8 v9 #g0 #q3 #t4)
           (move_base #q3 #q0 #t37)
           (place v4 v8 p15 #g0 #q0 #t0)
           (move_base #q0 #q6 #t36)
           (pick v4 v12 v13 #g3 #q6 #t13)
           (move_base #q6 #q7 #t50)
           (place v4 v12 p12 #g3 #q7 #t14)
           (move_base #q7 #q5 #t45)
           (pick v4 v14 v15 #g2 #q5 #t6)
           (move_base #q5 #q2 #t43)
           (place v4 v14 p13 #g2 #q2 #t3)
           (move_base #q2 #q1 #t49)
           (pick v4 v16 v17 #g1 #q1 #t2)
           (move_base #q1 #q12 #t47)
           (place v4 v16 p10 #g1 #q12 #t41)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q3) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The task is to place all four objects (v8, v12, v14, v16) on the surface v18.
           
           Current state:
           - `atbconf(v3)`: The robot starts at base configuration v3.
           - `atpose(v8, v9)`: v8 is at pose v9.
           - `atpose(v12, v13)`: v12 is at pose v13.
           - `atpose(v14, v15)`: v14 is at pose v15.
           - `atpose(v16, v17)`: v16 is at pose v17.
           
           Goal:
           - `on(v8, v18)`
           - `on(v12, v18)`
           - `on(v14, v18)`
           - `on(v16, v18)`
           
           We need to pick each object from its initial pose and place it on a suitable pose on v18. We must ensure that the base configuration (`atbconf`) is correct before each pick and place action.
           
           Let's trace the required base configurations and move_base actions:
           
           1.  **Object v8:**
               *   Current location: `v9`
               *   Target location on `v18`: `p15`
               *   `pick` action requires `atbconf(#q3)`
               *   `place` action requires `atbconf(#q0)`
               *   Sequence: `v3` -> `#q3` (move_base), `pick(v8, v9)` -> `#q0` (move_base), `place(v8, p15)`
           
           2.  **Object v12:**
               *   Current location: `v13`
               *   Target location on `v18`: `p12`
               *   `pick` action requires `atbconf(#q6)`
               *   `place` action requires `atbconf(#q7)`
               *   Sequence: `#q0` -> `#q6` (move_base), `pick(v12, v13)` -> `#q7` (move_base), `place(v12, p12)`
           
           3.  **Object v14:**
               *   Current location: `v15`
               *   Target location on `v18`: `p13`
               *   `pick` action requires `atbconf(#q5)`
               *   `place` action requires `atbconf(#q2)`
               *   Sequence: `#q7` -> `#q5` (move_base), `pick(v14, v15)` -> `#q2` (move_base), `place(v14, p13)`
           
           4.  **Object v16:**
               *   Current location: `v17`
               *   Target location on `v18`: `p10`
               *   `pick` action requires `atbconf(#q1)`
               *   `place` action requires `atbconf(#q12)`
               *   Sequence: `#q2` -> `#q1` (move_base), `pick(v16, v17)` -> `#q12` (move_base), `place(v16, p10)`
           
           Let's find valid `move_base` actions from the provided list to connect these configurations.
           
           *   Initial state: `atbconf(v3)`
           *   `v3` to `#q3`: `(move_base v3 #q3 #t35)`
           *   `#q3` to `#q0`: `(move_base #q3 #q0 #t37)`
           *   `#q0` to `#q6`: `(move_base #q0 #q6 #t36)`
           *   `#q6` to `#q7`: `(move_base #q6 #q7 #t50)`
           *   `#q7` to `#q5`: `(move_base #q7 #q5 #t45)`
           *   `#q5` to `#q2`: `(move_base #q5 #q2 #t43)`
           *   `#q2` to `#q1`: `(move_base #q2 #q1 #t49)`
           *   `#q1` to `#q12`: `(move_base #q1 #q12 #t47)`
           
           This sequence of `move_base` actions ensures the `atbconf` precondition is met for each pick and place.
           
           --Plan--:
           (move_base v3 #q3 #t35)
           (pick v4 v8 v9 #g0 #q3 #t4)
           (move_base #q3 #q0 #t37)
           (place v4 v8 p15 #g0 #q0 #t0)
           (move_base #q0 #q6 #t36)
           (pick v4 v12 v13 #g3 #q6 #t13)
           (move_base #q6 #q7 #t50)
           (place v4 v12 p12 #g3 #q7 #t14)
           (move_base #q7 #q5 #t45)
           (pick v4 v14 v15 #g2 #q5 #t6)
           (move_base #q5 #q2 #t43)
           (place v4 v14 p13 #g2 #q2 #t3)
           (move_base #q2 #q1 #t49)
           (pick v4 v16 v17 #g1 #q1 #t2)
           (move_base #q1 #q12 #t47)
           (place v4 v16 p10 #g1 #q12 #t41)

