User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom objective(v19)
           Atom rock(v7)
           Atom objective(v18)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v7, v6)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom rock(v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v5)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q0, v3)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #q9, #y7, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t5, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q1, #t9, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q4, #t1, #q1)
           Atom motion(v14, #q1, #t14, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t7, #q3)
           Atom motion(v12, #q3, #t2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t16, #q3)
           Atom motion(v12, #q2, #t6, v13)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q7, #t10, #q1)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, v15, #t12, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t18, #q2)
           Atom motion(v12, #q2, #t17, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #t3, #q2)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q1, #t15, #q0)
           Atom motion(v14, v15, #t4, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t13, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #t11, #q1)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v3 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #t16 #q3))
           ((move v12 #q2 #t17 #q6))
           ((move v12 #q2 #t6 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t3 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t18 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q3))
           ((move v12 v13 #t8 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t14 #q4))
           ((move v14 #q1 #t15 #q0))
           ((move v14 #q1 #t9 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t1 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q1))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q7))
           ((move v14 v15 #t13 #q8))
           ((move v14 v15 #t4 #q0))
           ((move v14 v15 #t5 #q4))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((calibrate v14 #q9 #y7 v19 v10))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((take_image v14 #q9 #y7 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the rovers domain. This involves a conjunction of conditions: *being at a certain configuration*, *having imaged and received images of objects*, and *analyzing and receiving the analysis of rock samples*. Here's my strategy, broken down:
           
           1.  **Image Acquisition:** I need to make sure the rovers, specifically v12 and v14, take images of the three objectives (v17, v18, and v19).
           
               *   Rover v12 is currently at `v13`. It has the camera `v10` and can use mode `v11`. It needs to move to strategic locations (`#q5`, `#q6`, `#q3`), calibrate its camera for each objective, take the image and send it to the lander (v9). I'll ensure I calibrate before taking the image, so I take the images in sequence. `v12` must return to its initial position, `v13`.
           
           2.  **Analysis and Data Transfer:** Rover v14, is currently at `v15` and its store `v16` is free. This rover's job is to analyze rock samples and send the results.
           
               *   It will need to move to the sampling locations. The objective here is to sample a rock of type `v2` and one of type `v6`. I'll direct it to sample `v3` (type `v2`) and `v5` (type `v6`). Then to transfer the analysis to the lander `v9`. `v14` needs to be sure its store is empty at the end, so I need to drop the rocks at the end and return `v14` to its initial `v15` location.
           
           3.  **Final Configuration Check:** To satisfy the final state constraints, both v12 needs to be at its initial location v13, and v14 must be at v15, and all images/analysis are received.
           
           **Action Plan:**
           
           Here's the plan, in sequence.  I've double-checked that all pre-conditions and post-conditions are properly addressed.
           Rover v12:
           1.  Move v12 to `#q5` and take image `v17`.
           2.  Move v12 to `#q6` and take image `v18`.
           3.  Move v12 to `#q3` and take image `v19`.
           4.  Move v12 to `#q2`.
           5.  Send the images to `v9` (landr).
           6.  Move v12 to v13.
           
           Rover v14:
           7.  Move v14 to `#q0` and sample `v3`
           8.  Move v14 to `#q1` and send analysis `v3` (type v2)
           9. Drop `v3`
           10.  Move v14 to `#q4` and sample `v5`
           11.  Move v14 to `#q1` and send analysis `v5` (type v6)
           12.  Drop the samples.
           13.  Move to v15.
           
           The final conditions will be met. This plan fulfills all requirements for reaching the `new-axiom@0()` goal, after the required actions.
           
)

Model:     **Strategic Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the rovers domain. This involves a conjunction of conditions: *being at a certain configuration*, *having imaged and received images of objects*, and *analyzing and receiving the analysis of rock samples*. Here's my strategy, broken down:
           
           1.  **Image Acquisition:** I need to make sure the rovers, specifically v12 and v14, take images of the three objectives (v17, v18, and v19).
           
               *   Rover v12 is currently at `v13`. It has the camera `v10` and can use mode `v11`. It needs to move to strategic locations (`#q5`, `#q6`, `#q3`), calibrate its camera for each objective, take the image and send it to the lander (v9). I'll ensure I calibrate before taking the image, so I take the images in sequence. `v12` must return to its initial position, `v13`.
           
           2.  **Analysis and Data Transfer:** Rover v14, is currently at `v15` and its store `v16` is free. This rover's job is to analyze rock samples and send the results.
           
               *   It will need to move to the sampling locations. The objective here is to sample a rock of type `v2` and one of type `v6`. I'll direct it to sample `v3` (type `v2`) and `v5` (type `v6`). Then to transfer the analysis to the lander `v9`. `v14` needs to be sure its store is empty at the end, so I need to drop the rocks at the end and return `v14` to its initial `v15` location.
           
           3.  **Final Configuration Check:** To satisfy the final state constraints, both v12 needs to be at its initial location v13, and v14 must be at v15, and all images/analysis are received.
           
           **Action Plan:**
           
           Here's the plan, in sequence.  I've double-checked that all pre-conditions and post-conditions are properly addressed.
           Rover v12:
           1.  Move v12 to `#q5` and take image `v17`.
           2.  Move v12 to `#q6` and take image `v18`.
           3.  Move v12 to `#q3` and take image `v19`.
           4.  Move v12 to `#q2`.
           5.  Send the images to `v9` (landr).
           6.  Move v12 to v13.
           
           Rover v14:
           7.  Move v14 to `#q0` and sample `v3`
           8.  Move v14 to `#q1` and send analysis `v3` (type v2)
           9. Drop `v3`
           10.  Move v14 to `#q4` and sample `v5`
           11.  Move v14 to `#q1` and send analysis `v5` (type v6)
           12.  Drop the samples.
           13.  Move to v15.
           
           The final conditions will be met. This plan fulfills all requirements for reaching the `new-axiom@0()` goal, after the required actions.
           

