User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom canmove()
           Atom pose(v8, v9)
           Atom pose(v15, v16)
           Atom controllable(v4)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom graspable(v15)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom atpose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom stackable(v12, v10)
           Atom arm(v6)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true. Looking at the initial state, `v8` is of `type(v8, v17)`. So we can try to achieve `on(v8, v18)`.
           Currently, `v8` is at `atpose(v8, v9)` and `supported(v8, v9, v11)`. The object `v18` is a surface where objects can be stacked (`stackable(v8, v18)`). We need to pick up `v8` from `v11` and place it on `v18`.
           
           The robot arm `v4` is handempty (`handempty(v4)`) and currently at `ataconf(v4, v5)`. The base is at `atbconf(v3)`.
           
           1. **Pick v8:** The robot can pick `v8` from `v9` using arm `v4`. The action `pick(v4, v8, v9, #o1, #o3, #o4)` is available. This requires `kin(v4, v8, v9, #o1, #o3, #o4)` (which is true), `atpose(v8, v9)` (true), `handempty(v4)` (true), `atbconf(v3)` (true, but it needs to be `#o3` for the provided action. There is `basemotion(v3, #o0, #o3)` and `basemotion(#o3, #o0, v3)`), `negated unsafeapproach(v8, v9, #o1)` and `negated unsafeatraj(#o4)`.
              Since the `pick` actions specify `#o3` for the base configuration, the robot needs to move its base from `v3` to `#o3`.
              `move_base(v3, #o3, #o0)` is available. After this, `atbconf(#o3)` will be true.
           
           2. **Place v8:** After picking, the robot needs to place `v8` on `v18`. We have `supported(v8, #o2, v18)`, which means placing `v8` at `#o2` will make it `on(v8, v18)`. The action `place(v4, v8, #o2, #o1, #o3, #o4)` is available. This requires `kin(v4, v8, #o2, #o1, #o3, #o4)` (true), `atgrasp(v4, v8, #o1)` (will be true after pick), `atbconf(#o3)` (true after the base motion), `negated unsafepose(v8, #o2)`, `negated unsafeapproach(v8, #o2, #o1)`, and `negated unsafeatraj(#o4)`.
           
           Let's re-evaluate the base configuration. The `pick` action `(pick v4 v8 v9 #o1 #o3 #o4)` requires `atbconf(#o3)`. The initial state has `atbconf(v3)`. So, a `move_base` action from `v3` to `#o3` is needed.
           After `pick`, `v8` is held by `v4`. Then, to place `v8` on `v18`, we use `place(v4, v8, #o2, #o1, #o3, #o4)`. This also requires `atbconf(#o3)`, which is consistent.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

