User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom canmove()
           Atom pose(v8, v9)
           Atom pose(v15, v16)
           Atom controllable(v4)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom graspable(v15)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom atpose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom stackable(v12, v10)
           Atom arm(v6)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v22, #o3, #o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom kin(v4, v8, v9, v21, #o3, #o4)
           Atom supported(v12, #o2, v18)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #o3 #o4))
           ((place v4 v8 v19 v22 #o3 #o4))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v21 #o3 #o4))
           ((place v4 v8 v9 v21 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the conjunction `on(?green, v18)` and `type(?green, v17)`. In the initial state, `v8` is of `type(v8, v17)` (which is equivalent to `type(?green, v17)` if `v8` is `?green`), and `v18` is a surface. We need to achieve `on(v8, v18)`. Currently, `v8` is at `atpose(v8, v9)` and `supported(v8, v9, v11)`. So we need to pick up `v8` and place it on `v18` at a new pose `v19`.
           
           Looking at the available actions:
           - `v4` is an arm and `handempty(v4)`.
           - `v8` is `graspable(v8)`.
           - There are `kin` relations for `v4` with `v8` at `v9` using `v21` grasp and at `v19` using any of `v20, v21, v22, v23` grasps, moving to `bconf #o3`.
           - `v8` is currently at `atpose(v8, v9)`.
           
           The plan will be:
           1. Move the base to a configuration `o3` that allows picking `v8`.
           2. Pick `v8` using arm `v4`, current pose `v9`, grasp `v21`, and base configuration `#o3`.
           3. Place `v8` using arm `v4`, new pose `v19`, grasp `v21`, and base configuration `#o3`. This will put `v8` on `v18` since `supported(v8, v19, v18)` is given.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v21 #o3 #o4)
           (place v4 v8 v19 v21 #o3 #o4)

