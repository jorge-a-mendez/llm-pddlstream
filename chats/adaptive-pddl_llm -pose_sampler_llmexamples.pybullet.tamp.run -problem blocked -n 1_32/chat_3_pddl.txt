User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom canmove()
           Atom pose(v8, v9)
           Atom pose(v15, v16)
           Atom controllable(v4)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom graspable(v15)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom atpose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom stackable(v12, v10)
           Atom arm(v6)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #g0)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, #p0, #g0, #q1, #t1)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t1))
           ((place v4 v8 #p0 #g0 #q1 #t1))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which states that `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know `type(v8, v17)`. Thus, we need to make `on(v8, v18)`. The object `v8` is currently at `atpose(v8, v9)` and `supported(v8, v9, v11)`. The robot arm `v4` is `handempty(v4)` and at `ataconf(v4, v5)`. The base is at `atbconf(v3)`.
           
           To achieve `on(v8, v18)`, we need to pick up `v8` from its current pose `v9` and place it onto `v18` at some pose `p0`.
           
           The available actions allow picking up `v8` with `v4` at pose `v9` using grasp `#g0`, at base configuration `q0` with trajectory `t0`.
           `pick v4 v8 v9 #g0 #q0 #t0`
           
           After picking up, we need to place `v8` onto `v18`. We have a `supported(v8, #p0, v18)` fact, so `#p0` is a valid pose on `v18`. We also have a `kin` for placing `v8` at `#p0` with grasp `#g0` using base configuration `q1` and trajectory `t1`.
           `place v4 v8 #p0 #g0 #q1 #t1`
           
           However, the pick action requires the robot to be at `atbconf(#q0)` but the robot is currently at `atbconf(v3)`. So, we need to move the base from `v3` to `q0` before picking up.
           `move_base v3 #q0 #t2`
           
           After picking, the robot will be at `atbconf(#q0)`. To place, it needs to be at `atbconf(#q1)`. So, we need to move the base from `q0` to `q1`.
           `move_base #q0 #q1 #o0`
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v8 #p0 #g0 #q1 #t1)

