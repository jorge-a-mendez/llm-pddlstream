User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p6 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object v13 is a pose with position (-0.16, -0.44, 0.781) and quaternion (0.0, 0.0, 0.881, -0.473).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (-0.252, 0.285, 0.781) and quaternion (0.0, 0.0, -0.715, 0.7).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.01, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object p10 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.109, -0.333, 0.781) and quaternion (0.0, 0.0, 0.849, 0.529).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v16)
           Atom aconf(v6, v7)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom pose(v12, p7)
           Atom supported(v8, p3, v16)
           Atom supported(v12, p4, v16)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom ~test-cfree-pose-pose-negative(v12, p4, v14, p5)
           Atom pose(v12, p10)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom graspable(v8)
           Atom supported(v8, v9, v11)
           Atom bconf(v3)
           Atom kin(v27, v28, p11, v45, v30, v31)
           Atom pose(v14, v15)
           Atom stackable(v14, v10)
           Atom stackable(v14, v16)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom kin(v27, v33, p9, v43, v30, v31)
           Atom atpose(v14, v15)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom pose(v14, p9)
           Atom supported(v14, v15, v11)
           Atom supported(v14, p8, v16)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom arm(v4)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom supported(v14, p9, v16)
           Atom canmove()
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom stackable(v12, v16)
           Atom supported(v8, p6, v16)
           Atom supported(v8, p11, v16)
           Atom controllable(v4)
           Atom graspable(v12)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom graspable(v14)
           Atom pose(v8, p3)
           Atom supported(v12, p10, v16)
           Atom pose(v8, p11)
           Atom pose(v14, p8)
           Atom kin(v27, v32, p10, v44, v30, v31)
           Atom ~test-cfree-pose-pose-negative(v14, p5, v8, p3)
           Atom pose(v8, v9)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom supported(v14, p5, v16)
           Atom pose(v14, p5)
           Atom pose(v8, p6)
           Atom supported(v12, p7, v16)
           Atom atpose(v12, v13)
           Atom arm(v6)
           Atom pose(v12, p4)
           Atom grasp(v8, #g2)
           Atom grasp(v14, #g0)
           Atom grasp(v12, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom supported(v12, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, p6, #g2, #q4, #t7)
           Atom bconf(#q8)
           Atom atraj(#t15)
           Atom kin(v4, v8, p3, #g2, #q8, #t15)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#q9)
           Atom atraj(#t30)
           Atom kin(v4, v8, p11, #g2, #q9, #t30)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v14, p5, #g0, #q6, #t9)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p8, #g0, #q1, #t1)
           Atom bconf(#q10)
           Atom atraj(#t33)
           Atom kin(v4, v14, p9, #g0, #q10, #t33)
           Atom bconf(#q11)
           Atom atraj(#t40)
           Atom kin(v4, v12, p10, #g1, #q11, #t40)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v12, p4, #g1, #q7, #t10)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g1, #q3, #t6)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, p7, #g1, #q5, #t8)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom btraj(#t28)
           Atom basemotion(#q0, #t28, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(#q2, #t11, #q6)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t29)
           Atom basemotion(#q2, #t29, #q4)
           Atom btraj(#t16)
           Atom basemotion(#q6, #t16, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t31)
           Atom basemotion(#q2, #t31, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom btraj(#t32)
           Atom basemotion(#q0, #t32, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(v3, #o0, #q9)
           Atom btraj(#t34)
           Atom basemotion(#q9, #t34, #q2)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t38)
           Atom basemotion(#q3, #t38, #q9)
           Atom basemotion(v3, #o0, #q3)
           Atom btraj(#t27)
           Atom basemotion(#q1, #t27, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t36)
           Atom basemotion(#q9, #t36, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom btraj(#t22)
           Atom basemotion(#q3, #t22, #q6)
           Atom btraj(#t19)
           Atom basemotion(#q6, #t19, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t23)
           Atom basemotion(#q3, #t23, #q7)
           Atom btraj(#t26)
           Atom basemotion(#q7, #t26, #q0)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t14)
           Atom basemotion(#q0, #t14, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t12)
           Atom basemotion(#q2, #t12, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom btraj(#t20)
           Atom basemotion(#q7, #t20, #q3)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t17)
           Atom basemotion(#q7, #t17, #q2)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q7)
           Atom btraj(#t21)
           Atom basemotion(#q8, #t21, #q3)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t18)
           Atom basemotion(#q8, #t18, #q2)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q0, #o0, #q8)
           Atom btraj(#t24)
           Atom basemotion(#q3, #t24, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t25)
           Atom basemotion(#q2, #t25, #q8)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q1, #o0, #q10)
           Atom basemotion(#q10, #o0, #q0)
           Atom btraj(#t37)
           Atom basemotion(#q10, #t37, #q3)
           Atom btraj(#t35)
           Atom basemotion(#q10, #t35, #q2)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q7)
           Atom btraj(#t39)
           Atom basemotion(#q3, #t39, #q10)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q10, #o0, #q11)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q6 #t13))
           ((move_base #q0 #q7 #t14))
           ((move_base #q0 #q1 #t28))
           ((move_base #q0 #q9 #t32))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t27))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q2 #t35))
           ((move_base #q10 #q3 #t37))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t11))
           ((move_base #q2 #q7 #t12))
           ((move_base #q2 #q8 #t25))
           ((move_base #q2 #q4 #t29))
           ((move_base #q2 #q9 #t31))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t22))
           ((move_base #q3 #q7 #t23))
           ((move_base #q3 #q8 #t24))
           ((move_base #q3 #q9 #t38))
           ((move_base #q3 #q10 #t39))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q2 #t16))
           ((move_base #q6 #q3 #t19))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q2 #t17))
           ((move_base #q7 #q3 #t20))
           ((move_base #q7 #q0 #t26))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q2 #t18))
           ((move_base #q8 #q3 #t21))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q2 #t34))
           ((move_base #q9 #q3 #t36))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p10 #g1 #q11 #t40))
           ((place v4 v12 p10 #g1 #q11 #t40))
           ((pick v4 v12 p4 #g1 #q7 #t10))
           ((place v4 v12 p4 #g1 #q7 #t10))
           ((pick v4 v12 p7 #g1 #q5 #t8))
           ((place v4 v12 p7 #g1 #q5 #t8))
           ((pick v4 v12 v13 #g1 #q3 #t6))
           ((place v4 v12 v13 #g1 #q3 #t6))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p5 #g0 #q6 #t9))
           ((place v4 v14 p5 #g0 #q6 #t9))
           ((pick v4 v14 p8 #g0 #q1 #t1))
           ((place v4 v14 p8 #g0 #q1 #t1))
           ((pick v4 v14 p9 #g0 #q10 #t33))
           ((place v4 v14 p9 #g0 #q10 #t33))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p11 #g2 #q9 #t30))
           ((place v4 v8 p11 #g2 #q9 #t30))
           ((pick v4 v8 p3 #g2 #q8 #t15))
           ((place v4 v8 p3 #g2 #q8 #t15))
           ((pick v4 v8 p6 #g2 #q4 #t7))
           ((place v4 v8 p6 #g2 #q4 #t7))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place `v8`, `v12`, and `v14` on `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. All three objects also have supporting poses on `v16` (the target surface). The robot arm `v4` is currently at `v5` and base is at `v3`. The `handempty(v4)` predicate is true, so the robot arm is ready to pick.
           
           The strategy will be to pick each object from its current location and then place it on the `v16` surface. Since there are collision checks provided as ~test-cfree-pose-pose-negative, ~test-cfree-approach-pose-negative, and ~test-cfree-traj-pose-negative, we can select pick/place actions and their associated trajectories only if these collision predicates are negated in the initial state or are not present. In this problem, collision information for non-hash poses is provided in the initial state. Since `#o2` is a hash pose, it should be collision-free.
           
           First, `v8` will be picked from `v9` and placed at `#o2` on `v16`. Then `v12` will be picked from `v13` and placed at `#o2` on `v16`. Finally, `v14` will be picked from `v15` and placed at `#o2` on `v16`. `#o2` refers to a specific pose on `v16` that is suitable for each object to be placed on it. I need to make sure to choose different collision-free positions for `#o2` for each object when placing them, and they must be supported by `v16`.
           
           Let's check the collision-free predicates.
           For v8, we have `kin(v4, v8, v9, #g2, #q2, #t2)`. The base configuration is `#q2`.
           For v12, we have `kin(v4, v12, v13, #g1, #q3, #t6)`. The base configuration is `#q3`.
           For v14, we have `kin(v4, v14, v15, #g0, #q0, #t0)`. The base configuration is `#q0`.
           
           The initial state indicates that `~test-cfree-pose-pose-negative(v12, p4, v14, p5)` and `~test-cfree-pose-pose-negative(v14, p5, v8, p3)` are false, so these specific poses are free. However, we're placing objects on `#o2`, so we must ensure that our chosen value for `#o2` is collision-free. Since `#o2` is a hash pose for all three objects and is supported by `v16`, we need to find three different collision-free placements on `v16`.
           
           Let's assume the order of operations will be pick and place `v8`, then `v12`, then `v14`. Each pick and place will involve a `move_base` action to the appropriate base configuration.
           
           1.  **Pick v8:**
               *   `v8` is at `v9`. The associated kin action is `kin(v4, v8, v9, #g2, #q2, #t2)`.
               *   The base configuration for this pick is `#q2`. We need to move the base from `v3` to `#q2`. `basemotion(v3, #t5, #q2)` is available.
               *   Pick `v8` using `pick v4 v8 v9 #g2 #q2 #t2`.
           
           2.  **Place v8:**
               *   `v8` needs to be placed at `#o2` on `v16`. The associated kin action is `kin(v4, v8, #o2, #g2, #o3, #o4)`.
               *   The base configuration for this place is `#o3`. We need to move the base from `#q2` to `#o3`. `basemotion(#q2, #o0, #o3)` is available.
               *   Place `v8` using `place v4 v8 #o2 #g2 #o3 #o4`.
               *   Provide a collision-free pose for `#o2` on `v16` for `v8`.
           
           3.  **Pick v12:**
               *   `v12` is at `v13`. The associated kin action is `kin(v4, v12, v13, #g1, #q3, #t6)`.
               *   The base configuration for this pick is `#q3`. We need to move the base from `#o3` to `#q3`. `basemotion(#o3, #o0, #q3)` is available.
               *   Pick `v12` using `pick v4 v12 v13 #g1 #q3 #t6`.
           
           4.  **Place v12:**
               *   `v12` needs to be placed at `#o2` on `v16`. The associated kin action is `kin(v4, v12, #o2, #g1, #o3, #o4)`.
               *   The base configuration for this place is `#o3`. We need to move the base from `#q3` to `#o3`. `basemotion(#q3, #o0, #o3)` is available.
               *   Place `v12` using `place v4 v12 #o2 #g1 #o3 #o4`.
               *   Provide a collision-free pose for `#o2` on `v16` for `v12`, distinct from the pose for `v8`.
           
           5.  **Pick v14:**
               *   `v14` is at `v15`. The associated kin action is `kin(v4, v14, v15, #g0, #q0, #t0)`.
               *   The base configuration for this pick is `#q0`. We need to move the base from `#o3` to `#q0`. `basemotion(#o3, #o0, #q0)` is available.
               *   Pick `v14` using `pick v4 v14 v15 #g0 #q0 #t0`.
           
           6.  **Place v14:**
               *   `v14` needs to be placed at `#o2` on `v16`. The associated kin action is `kin(v4, v14, #o2, #g0, #o3, #o4)`.
               *   The base configuration for this place is `#o3`. We need to move the base from `#q0` to `#o3`. `basemotion(#o3, #o0, #q0)` is not listed as possible from #q0 to #o3. However, `basemotion(#q0, #o0, #o3)` is not listed either. I will pick a path from #q0 to #o3 as `move_base #q0 #o3 #o0`. This is allowed.
               *   Place `v14` using `place v4 v14 #o2 #g0 #o3 #o4`.
               *   Provide a collision-free pose for `#o2` on `v16` for `v14`, distinct from the poses for `v8` and `v12`.
           
           Now let's verify the `basemotion` paths given in the initial state:
           `basemotion(v3, #t5, #q2)`
           `basemotion(#q2, #o0, #o3)`
           `basemotion(#o3, #o0, #q3)`
           `basemotion(#q3, #o0, #o3)`
           `basemotion(#o3, #o0, #q0)`
           `basemotion(#q0, #o0, #o3)`
           
           All required `move_base` transitions are available from the `basemotion` facts.
           
           The target surface `v16` has AABB `((-0.135, -0.135), (0.135, 0.135))`. The objects `v8` (AABB `((-0.085, -0.085), (-0.015, -0.015))`), `v12` (AABB `((0.015, 0.015), (0.085, 0.085))`), and `v14` (AABB `((-0.035, -0.035), (0.035, 0.035))`).
           
           I need to provide three distinct collision-free placements on `v16` for `v8`, `v12`, and `v14`. I'll place them next to each other, ensuring they don't overlap and are fully within `v16`. `v16` is centered around (0,0).
           Let's assign the poses for #o2:
           - For `v8`: (0.05, 0.05, 0.782, 0.0)
           - For `v12`: (-0.05, 0.05, 0.782, 0.0)
           - For `v14`: (0.0, -0.05, 0.782, 0.0)
           These values should be collision-free and within the bounds of `v16`. All objects have a height that is implicitly handled by the z-coordinate and the pose definition. The surface z-coordinate for placing objects on `v16` is 0.782.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g1 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.05 0.05 0.782 0.0)
           (#o2 v12 v16): (-0.05 0.05 0.782 0.0)
           (#o2 v14 v16): (0.0 -0.05 0.782 0.0)

