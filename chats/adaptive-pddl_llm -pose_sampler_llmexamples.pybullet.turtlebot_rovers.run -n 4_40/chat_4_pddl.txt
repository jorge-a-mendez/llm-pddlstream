User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom store(v16)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom objective(v19)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom rover(v14)
           Atom rock(v4)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q12, #y7, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v3)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q11, #y6, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q8, #t11, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t4, v15)
           Atom motion(v14, #q6, #t16, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t20, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t8, #q6)
           Atom motion(v14, v15, #t3, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #t24, #q6)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q11, #t22, #q6)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q6, #t21, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q4, #t12, #q3)
           Atom motion(v12, #q3, #t18, #q4)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #t9, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q9, #t25, #q3)
           Atom motion(v12, #q0, #t10, #q3)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #t14, #q3)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, v13, #t6, #q1)
           Atom motion(v12, #q3, #t15, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #t17, #q3)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q3, #t13, #q7)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #t23, #q6)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #t2, #q3)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t0, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q2))
           ((move v12 #q0 #t10 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t14 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t13 #q7))
           ((move v12 #q3 #t15 #q1))
           ((move v12 #q3 #t18 #q4))
           ((move v12 #q3 #t9 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t12 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t25 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t20 #q9))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q1))
           ((move v12 v13 #t7 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t24 #q6))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t22 #q6))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t23 #q6))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t8 #q6))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #t16 #q8))
           ((move v14 #q6 #t21 #q11))
           ((move v14 #q6 #t4 v15))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q6))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t3 #q5))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #q11 #y6 v18 v10))
           ((calibrate v14 #q12 #y7 v20 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q11 #y6 v18 v10 v11))
           ((take_image v14 #q12 #y7 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera (v10). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is also a lander (v9) for communication and a store (v16) for samples. The goal `new-axiom@0()` implies that we need to achieve a state where:
           1. Both rovers (v12, v14) are at some configuration. This is already true in the initial state.
           2. Both rovers have a free store (v16). This is already true for v12 and v14.
           3. Images of all four objectives (v17, v18, v19, v20) are received with mode v11.
           4. All rocks (v1, v3, v4, v5, v7, v8) are analyzed (which implies sampled) and their analyses are received, specifically that 'stone' type objects (v1, v3, v4) and 'soil' type objects (v5, v7, v8) are received.
           
           Let's break down the plan into sub-goals:
           
           **Sub-goal 1: Receive images of all objectives (v17, v18, v19, v20).**
           This requires:
               a. Calibrating the camera (v10) on a rover.
               b. Taking an image of the objective.
               c. Sending the image to the lander (v9).
           
           We can use either rover v12 or v14 for this. Let's use v12 for v17, v18, v19, v20, as it is currently at v13, which is a good starting point for moving to relevant configurations for these objectives.
           
           * For v20: `calibrate v12 #q0 #y0 v20 v10`, then `take_image v12 #q0 #y0 v20 v10 v11`, then `move v12 #q0 #t10 #q3`, then `send_image v12 #q3 #y2 v9 v20 v11`.
           * For v17: `calibrate v12 #q1 #y1 v17 v10`, then `take_image v12 #q1 #y1 v17 v10 v11`, then `move v12 #q1 #t14 #q3`, then `send_image v12 #q3 #y2 v9 v17 v11`.
           * For v18: `calibrate v12 #q4 #y3 v18 v10`, then `take_image v12 #q4 #y3 v18 v10 v11`, then `move v12 #q4 #t12 #q3`, then `send_image v12 #q3 #y2 v9 v18 v11`.
           * For v19: `calibrate v12 #q7 #y5 v19 v10`, then `take_image v12 #q7 #y5 v19 v10 v11`, then `move v12 #q7 #t17 #q3`, then `send_image v12 #q3 #y2 v9 v19 v11`.
           
           **Sub-goal 2: Receive analysis of all rocks (v1, v3, v4, v5, v7, v8).**
           This requires:
               a. Sampling the rock.
               b. Sending the analysis to the lander (v9).
           
           Again, we can use either rover. Let's make rover v12 handle some rocks and rover v14 handle others to be efficient.
           
           Let rover v12 handle rocks v1, v3, v4, v5, v7, v8 for sampling. Rover v12 needs to move to appropriate configurations.
           * For v3: `sample_rock v12 #o5 v3 v16`, then `move v12 #o5 #o2 #q3`, then `send_analysis v12 #q3 #y2 v9 v3`.
           * For v4: `sample_rock v12 #o5 v4 v16`, then `move v12 #o5 #o2 #q3`, then `send_analysis v12 #q3 #y2 v9 v4`.
           * For v5: `sample_rock v12 #q2 v5 v16`, then `move v12 #q2 #t2 #q3`, then `send_analysis v12 #q3 #y2 v9 v5`.
           * For v7: `sample_rock v12 #o5 v7 v16`, then `move v12 #o5 #o2 #q3`, then `send_analysis v12 #q3 #y2 v9 v7`.
           * For v8: `sample_rock v12 #o5 v8 v16`, then `move v12 #o5 #o2 #q3`, then `send_analysis v12 #q3 #y2 v9 v8`.
           * For v1: `sample_rock v12 #q9 v1 v16`, then `move v12 #q9 #t25 #q3`, then `send_analysis v12 #q3 #y2 v9 v1`.
           
           The rover v12 must drop the rock after sampling and sending analysis to free the store (v16) for the next rock.
           Since v12 has only one store, after each sample and send_analysis, it has to drop the rock to sample another one. This makes the plan longer.
           Let's optimize by sampling all rocks that rover v12 can reach without moving to the communication config, then moving to the communication config once to send all analyses. This is not possible because the `free` predicate.
           
           An alternative for sampling would be to use rover v14 as well since it has an independent store (v16).
           Let's combine the actions to be efficient. We will assume that rover v12 is responsible for all image-related tasks and rover v14 is responsible for all rock-related tasks. This also helps to avoid the "full" store issue.
           
           **Rover v12: Image Collection and Transmission**
           1. Calibrate camera for v20, take image, move to comms, send image.
           2. Calibrate camera for v17, take image, move to comms, send image.
           3. Calibrate camera for v18, take image, move to comms, send image.
           4. Calibrate camera for v19, take image, move to comms, send image.
           
           Since calibration invalidates the camera, we need to recalibrate for each image or strategically group them. However, since the goal states that `receivedimage` is true for each objective, and `calibrated` becomes false after `take_image`, we must recalibrate for each image.
           All sending of images can happen from #q3.
           
           **Rover v14: Rock Sampling and Transmission**
           1. Sample rock v5, move to comms, send analysis.
           2. Sample rock v4, move to comms, send analysis.
           3. Sample rock v3, move to comms, send analysis.
           4. Sample rock v8, move to comms, send analysis.
           5. Sample rock v1, move to comms, send analysis.
           6. Sample rock v7, move to comms, send analysis.
           
           Let's try to achieve the goal for v17, v18, v19, v20, and all rocks.
           
           Initial state: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`
           
           Goals:
           `receivedimage(v17, v11)`
           `receivedimage(v18, v11)`
           `receivedimage(v19, v11)`
           `receivedimage(v20, v11)`
           `receivedanalysis(v1)`
           `receivedanalysis(v3)`
           `receivedanalysis(v4)`
           `receivedanalysis(v5)`
           `receivedanalysis(v7)`
           `receivedanalysis(v8)`
           
           Let's start with rover v12 for images and v14 for rocks.
           
           **Rover v12 actions:**
           - Move v12 to #q0 (for v20)
           - Calibrate for v20
           - Take image of v20
           - Move v12 to #q3 (comms config)
           - Send image of v20
           - Move v12 to #q1 (for v17)
           - Calibrate for v17
           - Take image of v17
           - Move v12 to #q3 (comms config)
           - Send image of v17
           - Move v12 to #q4 (for v18)
           - Calibrate for v18
           - Take image of v18
           - Move v12 to #q3 (comms config)
           - Send image of v18
           - Move v12 to #q7 (for v19)
           - Calibrate for v19
           - Take image of v19
           - Move v12 to #q3 (comms config)
           - Send image of v19
           
           **Rover v14 actions:**
           - Move v14 to #q8 (for v5)
           - Sample v5
           - Move v14 to #q6 (comms config)
           - Send analysis of v5
           - Drop v5 (to free store)
           - Move v14 to #o5 (for v4)
           - Sample v4
           - Move v14 to #q6 (comms config)
           - Send analysis of v4
           - Drop v4
           - Move v14 to #o5 (for v3)
           - Sample v3
           - Move v14 to #q6 (comms config)
           - Send analysis of v3
           - Drop v3
           - Move v14 to #q10 (for v8)
           - Sample v8
           - Move v14 to #q6 (comms config)
           - Send analysis of v8
           - Drop v8
           - Move v14 to #q5 (for v1)
           - Sample v1
           - Move v14 to #q6 (comms config)
           - Send analysis of v1
           - Drop v1
           - Move v14 to #o5 (for v7)
           - Sample v7
           - Move v14 to #q6 (comms config)
           - Send analysis of v7
           - Drop v7
           
           This plan will involve a lot of moving back and forth to the communication configuration. Let's optimize movements.
           
           **Optimized Plan**
           
           **Rover v12 (Images):**
           1. Calibrate, take image, then move to comms, send image for v20.
           2. From comms position, move to next image config, calibrate, take image, move back to comms, send image for v17.
           3. Repeat for v18.
           4. Repeat for v19.
           
           **Rover v14 (Rocks):**
           1. Move to sampling location #q8 for v5, sample v5.
           2. Move to sampling location #o5 for v4, sample v4.
           3. Move to sampling location #o5 for v3, sample v3.
           4. Move to sampling location #q10 for v8, sample v8.
           5. Move to sampling location #q5 for v1, sample v1.
           6. Move to sampling location #o5 for v7, sample v7.
           After all samples, move to comms config #q6 once and send all analyses. This is not possible because `store` is only one. `full` predicate. A rover cannot sample a second rock until the first one is dropped. So it is always `sample -> send analysis -> drop rock`.
           
           Let's try to generate the plan step by step with correct preconditions.
           
           Initial states of interest:
           `atconf(v12, v13)`
           `atconf(v14, v15)`
           `free(v12, v16)`
           `free(v14, v16)`
           
           **Start with Rover v12 for objectives:**
           
           1.  Goal: `receivedimage(v20, v11)`
               Current `atconf(v12, v13)`. Need `atconf(v12, #q0)`.
               `move v12 v13 #t5 #q0`
               `calibrate v12 #q0 #y0 v20 v10`
               `take_image v12 #q0 #y0 v20 v10 v11` (Camera is no longer calibrated)
               Current `atconf(v12, #q0)`. Need `atconf(v12, #q3)` for `comvisible`.
               `move v12 #q0 #t10 #q3`
               `send_image v12 #q3 #y2 v9 v20 v11`
           
           2.  Goal: `receivedimage(v17, v11)`
               Current `atconf(v12, #q3)`. Need `atconf(v12, #q1)`.
               `move v12 #q3 #t15 #q1`
               `calibrate v12 #q1 #y1 v17 v10`
               `take_image v12 #q1 #y1 v17 v10 v11`
               Current `atconf(v12, #q1)`. Need `atconf(v12, #q3)`.
               `move v12 #q1 #t14 #q3`
               `send_image v12 #q3 #y2 v9 v17 v11`
           
           3.  Goal: `receivedimage(v18, v11)`
               Current `atconf(v12, #q3)`. Need `atconf(v12, #q4)`.
               `move v12 #q3 #t18 #q4`
               `calibrate v12 #q4 #y3 v18 v10`
               `take_image v12 #q4 #y3 v18 v10 v11`
               Current `atconf(v12, #q4)`. Need `atconf(v12, #q3)`.
               `move v12 #q4 #t12 #q3`
               `send_image v12 #q3 #y2 v9 v18 v11`
           
           4.  Goal: `receivedimage(v19, v11)`
               Current `atconf(v12, #q3)`. Need `atconf(v12, #q7)`.
               `move v12 #q3 #t13 #q7`
               `calibrate v12 #q7 #y5 v19 v10`
               `take_image v12 #q7 #y5 v19 v10 v11`
               Current `atconf(v12, #q7)`. Need `atconf(v12, #q3)`.
               `move v12 #q7 #t17 #q3`
               `send_image v12 #q3 #y2 v9 v19 v11`
           
           **Now, Rover v14 for rocks:**
           
           1.  Goal: `receivedanalysis(v5)`
               Current `atconf(v14, v15)`. Need `atconf(v14, #q8)` for `above(v14, #q8, v5)`.
               `move v14 v15 #o2 #q8` (assuming this is a valid move, let's check action list. Yes, it is `motion(v14, v15, #o2, #q8)`)
               `sample_rock v14 #q8 v5 v16` (Now `full(v14, v16)` and `analyzed(v14, v5)`)
               Current `atconf(v14, #q8)`. Need `atconf(v14, #q6)` for `comvisible`.
               `move v14 #q8 #t11 #q6`
               `send_analysis v14 #q6 #y4 v9 v5`
               `drop_rock v14 v16` (Now `free(v14, v16)`)
           
           2.  Goal: `receivedanalysis(v4)`
               Current `atconf(v14, #q6)`. Need `atconf(v14, #o5)` for `above(v14, #o5, v4)`.
               `move v14 #q6 #o2 #o5`
               `sample_rock v14 #o5 v4 v16`
               Current `atconf(v14, #o5)`. Need `atconf(v14, #q6)`.
               `move v14 #o5 #o2 #q6`
               `send_analysis v14 #q6 #y4 v9 v4`
               `drop_rock v14 v16`
           
           3.  Goal: `receivedanalysis(v3)`
               Current `atconf(v14, #q6)`. Need `atconf(v14, #o5)` for `above(v14, #o5, v3)`. Already there, `move v14 #o5 #o2 #o5` no-op. So need to move to #o5.
               `move v14 #q6 #o2 #o5` (already at #o5 from previous action for v4, but we need to ensure current state is `atconf(v14, #o5)`)
               `sample_rock v14 #o5 v3 v16`
               `move v14 #o5 #o2 #q6`
               `send_analysis v14 #q6 #y4 v9 v3`
               `drop_rock v14 v16`
           
           4.  Goal: `receivedanalysis(v8)`
               Current `atconf(v14, #q6)`. Need `atconf(v14, #q10)` for `above(v14, #q10, v8)`.
               `move v14 #q6 #o2 #q10`
               `sample_rock v14 #q10 v8 v16`
               `move v14 #q10 #t24 #q6`
               `send_analysis v14 #q6 #y4 v9 v8`
               `drop_rock v14 v16`
           
           5.  Goal: `receivedanalysis(v1)`
               Current `atconf(v14, #q6)`. Need `atconf(v14, #q5)` for `above(v14, #q5, v1)`.
               `move v14 #q6 #o2 #q5`
               `sample_rock v14 #q5 v1 v16`
               `move v14 #q5 #t8 #q6`
               `send_analysis v14 #q6 #y4 v9 v1`
               `drop_rock v14 v16`
           
           6.  Goal: `receivedanalysis(v7)`
               Current `atconf(v14, #q6)`. Need `atconf(v14, #o5)` for `above(v14, #o5, v7)`.
               `move v14 #q6 #o2 #o5`
               `sample_rock v14 #o5 v7 v16`
               `move v14 #o5 #o2 #q6`
               `send_analysis v14 #q6 #y4 v9 v7`
               `drop_rock v14 v16`
           
           This completes all parts of the goal. The moves between configs are chosen from the available `motion` predicates.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v20 v10)
           (take_image v12 #q0 #y0 v20 v10 v11)
           (move v12 #q0 #t10 #q3)
           (send_image v12 #q3 #y2 v9 v20 v11)
           (move v12 #q3 #t15 #q1)
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (move v12 #q1 #t14 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v12 #q3 #t18 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t12 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v12 #q3 #t13 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t17 #q3)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v14 v15 #o2 #q8)
           (sample_rock v14 #q8 v5 v16)
           (move v14 #q8 #t11 #q6)
           (send_analysis v14 #q6 #y4 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #t24 #q6)
           (send_analysis v14 #q6 #y4 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q5)
           (sample_rock v14 #q5 v1 v16)
           (move v14 #q5 #t8 #q6)
           (send_analysis v14 #q6 #y4 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v7)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom represents a complex set of conditions including all `receivedimage` for objectives and `receivedanalysis` for rocks, as well as the rovers being at certain configurations and having free stores. My reasoning for the individual components of the goal was sound, but it seems there was an issue with the overall final state check or a misunderstanding of how the axiom is evaluated. The previous plan *should* have achieved all the conditions within `new-axiom@0()` based on the steps taken.
           
           Let's re-verify the components of the `new-axiom@0()` goal to ensure all are explicitly covered:
           
           `atconf(v12, v13)`: This needs to be true for rover v12. The final position of v12 in the previous plan was `#q3`. We need to move it back to `v13` if that is a strict requirement for the axiom, or realize that the axiom uses variables and any `atconf` will satisfy it.
           `atconf(v14, v15)`: This needs to be true for rover v14. The final position of v14 in the previous plan was `#q6`. Similar to v12, we might need to move it back to `v15` or any `atconf` is fine.
           `free(v12, v16)`: This was achieved at the end of rover v12's actions if it sampled, but it didn't sample. It was initially free and remained free.
           `free(v14, v16)`: This was achieved at the end of rover v14's actions as it dropped all sampled rocks.
           `receivedimage(v17, v11)`
           `receivedimage(v18, v11)`
           `receivedimage(v19, v11)`
           `receivedimage(v20, v11)`: All these were explicitly targeted and achieved.
           `type(?stone, v2)`: This is a type definition, and `rock(v1), type(v1, v2)`, `rock(v3), type(v3, v2)`, `rock(v4), type(v4, v2)` are in the initial state.
           `receivedanalysis(?stone)`: This means `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` must be true. These were explicitly targeted.
           `type(?soil, v6)`: This is a type definition, and `rock(v5), type(v5, v6)`, `rock(v7), type(v7, v6)`, `rock(v8), type(v8, v6)` are in the initial state.
           `receivedanalysis(?soil)`: This means `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` must be true. These were explicitly targeted.
           
           The variable parts of the axiom (`atconf(v12, v13)`, `atconf(v14, v15)`) might be the issue. The axiom states `atconf(v12, v13)` and `atconf(v14, v15)`. This implies that `v12` must be at `v13` and `v14` must be at `v15` *at the end of the plan*. My previous plan left them at `#q3` and `#q6` respectively. I need to add final moves to get them back to their initial configurations to satisfy these specific conditions in the axiom.
           
           Let's correct this by adding a final move for each rover back to its starting configuration.
           
           **Rover v12 final move:**
           Current `atconf(v12, #q3)`. Need `atconf(v12, v13)`.
           `move v12 #q3 #t9 v13`
           
           **Rover v14 final move:**
           Current `atconf(v14, #q6)`. Need `atconf(v14, v15)`.
           `move v14 #q6 #t4 v15`
           
           This should resolve the `atconf` requirements of the axiom. The `free(v12, v16)` and `free(v14, v16)` conditions are already satisfied at the end of the previous plan. All other goals related to images and analyses were covered.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v20 v10)
           (take_image v12 #q0 #y0 v20 v10 v11)
           (move v12 #q0 #t10 #q3)
           (send_image v12 #q3 #y2 v9 v20 v11)
           (move v12 #q3 #t15 #q1)
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (move v12 #q1 #t14 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v12 #q3 #t18 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t12 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v12 #q3 #t13 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t17 #q3)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v14 v15 #o2 #q8)
           (sample_rock v14 #q8 v5 v16)
           (move v14 #q8 #t11 #q6)
           (send_analysis v14 #q6 #y4 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #t24 #q6)
           (send_analysis v14 #q6 #y4 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q5)
           (sample_rock v14 #q5 v1 v16)
           (move v14 #q5 #t8 #q6)
           (send_analysis v14 #q6 #y4 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q6)
           (send_analysis v14 #q6 #y4 v9 v7)
           (drop_rock v14 v16)
           (move v12 #q3 #t9 v13)
           (move v14 #q6 #t4 v15)

