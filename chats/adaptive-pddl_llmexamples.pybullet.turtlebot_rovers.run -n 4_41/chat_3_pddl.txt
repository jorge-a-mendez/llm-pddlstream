User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom objective(v17)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom rock(v1)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom rock(v8)
           Atom rover(v14)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q10, #y7, v9)
           Atom comrange(v12, #q10, v9)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q11, #y8, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y8)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q12, #y9, v17)
           Atom imagerange(v12, #q12, v17)
           Atom conf(v12, #q12)
           Atom ray(#y9)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v12, #q9, #y6, v20)
           Atom imagerange(v12, #q9, v20)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom imagevisible(v14, #q5, #y3, v20)
           Atom imagerange(v14, #q5, v20)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom motion(v14, v15, #t9, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, v13, #t12, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t13, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, v13, #t15, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t6, #q3)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, v13, #t14, #q11)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #t4, #q4)
           Atom motion(v14, #q0, #t3, #q2)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #t1, #q0)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q4, #t8, #q0)
           Atom motion(v14, #q2, #t7, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #t0, #q0)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #t16, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #t11, #q10)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q7, #t10, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #t16 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q10))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q7))
           ((move v12 v13 #t13 #q9))
           ((move v12 v13 #t14 #q11))
           ((move v12 v13 #t15 #q12))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q0 #t3 #q2))
           ((move v14 #q0 #t4 #q4))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t0 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t7 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t1 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q0))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t5 #q1))
           ((move v14 v15 #t6 #q3))
           ((move v14 v15 #t9 #q2))
           ((calibrate v12 #q11 #y8 v18 v10))
           ((calibrate v12 #q12 #y9 v17 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v12 #q9 #y6 v20 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q5 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q11 #y8 v18 v10 v11))
           ((take_image v12 #q12 #y9 v17 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v12 #q9 #y6 v20 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q10 #y7 v9 v3))
           ((send_analysis v12 #q10 #y7 v9 v4))
           ((send_analysis v12 #q10 #y7 v9 v5))
           ((send_analysis v12 #q10 #y7 v9 v7))
           ((send_analysis v12 #q10 #y7 v9 v8))
           ((send_analysis v12 #q10 #y7 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q10 #y7 v9 v18 v11))
           ((send_image v12 #q10 #y7 v9 v17 v11))
           ((send_image v12 #q10 #y7 v9 v19 v11))
           ((send_image v12 #q10 #y7 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The problem requires satisfying the `new-axiom@0` axiom, which means achieving a state where:
           1. `atconf` for `v12` and `v14` are true (already true).
           2. `free` for `v12` and `v14` with `v16` are true (already true).
           3. `receivedimage` for objectives `v17`, `v18`, `v19`, `v20` with mode `v11` are true.
           4. `receivedanalysis` for rocks `?stone` (type `v2`) and `?soil` (type `v6`) are true.
           
           We have two rovers, `v12` and `v14`, both currently at their respective initial configurations (`v13` and `v15`). Both rovers have the camera `v10` onboard which supports mode `v11`, and both have a free storage unit `v16`.
           
           The objectives are `v17`, `v18`, `v19`, `v20`. The rocks are `v1`, `v3`, `v4` (type `v2` - stone), and `v5`, `v7`, `v8` (type `v6` - soil).
           
           To achieve the goal, we need to:
           1. Take images of all four objectives (`v17`, `v18`, `v19`, `v20`) with mode `v11` and send them to the lander `v9`.
           2. Sample and analyze at least one rock of type `v2` (stone) and one rock of type `v6` (soil), and send their analyses to the lander `v9`.
           
           Let's prioritize what each rover can do.
           
           **Rover v14:**
           * Can see objective `v19` at `#q3` with ray `#y2`.
           * Can see objective `v18` at `#q1` with ray `#y1`.
           * Can see objective `v17` at `#q6` with ray `#y4`.
           * Can see objective `v20` at `#q5` with ray `#y3`.
           * Can sample rocks `v1` (stone) at `#q4`, `v5` (soil) at `#q2`, `v7` (soil) at `#o5`, `v8` (soil) at `#o5`, `v3` (stone) at `#o5`, `v4` (stone) at `#o5`.
           * Can communicate with `v9` from `#q0` using ray `#y0`.
           
           **Rover v12:**
           * Can see objective `v19` at `#q7` with ray `#y5`.
           * Can see objective `v18` at `#q11` with ray `#y8`.
           * Can see objective `v17` at `#q12` with ray `#y9`.
           * Can see objective `v20` at `#q9` with ray `#y6`.
           * Can sample rocks `v1` (stone) at `#q8`, `v7` (soil) at `#o5`, `v8` (soil) at `#o5`, `v5` (soil) at `#o5`, `v3` (stone) at `#o5`, `v4` (stone) at `#o5`.
           * Can communicate with `v9` from `#q10` using ray `#y7`.
           
           Since both rovers can achieve all image and analysis tasks, we can split the work.
           
           **For images (receivedimage):**
           Rover `v14` can take images of `v19`, `v18`, `v17`, `v20` from various positions, and send them from `#q0`.
           Rover `v12` can take images of `v19`, `v18`, `v17`, `v20` from various positions, and send them from `#q10`.
           
           Let's have `v14` handle the images.
           1. `v14` moves to `#q3`, calibrates, takes image of `v19`.
           2. `v14` moves to `#q1`, calibrates, takes image of `v18`.
           3. `v14` moves to `#q6`, calibrates, takes image of `v17`.
           4. `v14` moves to `#q5`, calibrates, takes image of `v20`.
           5. `v14` moves to `#q0` and sends all four images.
           
           **For analysis (receivedanalysis):**
           We need to sample and analyze one stone (type `v2`) and one soil (type `v6`).
           Rover `v12` is at `v13`. It can move to `#o5` and sample `v3` (stone) and `v5` (soil).
           Then it can move to `#q10` and send the analysis.
           
           Let's make sure the preconditions for each action are met.
           - `take_image`: Requires `calibrated`. So, `calibrate` must happen first.
           - `send_image`: Requires `haveimage`. So, `take_image` must happen first.
           - `sample_rock`: Requires `above` and `free`. `free` is true. We need to move to the right `q` for `above`.
           - `send_analysis`: Requires `analyzed`. So, `sample_rock` must happen first.
           
           Since both rovers start at their initial configurations and have onboard cameras and free stores, we can begin taking images and sampling.
           
           **Plan for Rover v14 (Images):**
           1. Calibrate for `v19` at `#q3`.
           2. Take image of `v19`.
           3. Move to `#q1`.
           4. Calibrate for `v18` at `#q1`.
           5. Take image of `v18`.
           6. Move to `#q6`.
           7. Calibrate for `v17` at `#q6`.
           8. Take image of `v17`.
           9. Move to `#q5`.
           10. Calibrate for `v20` at `#q5`.
           11. Take image of `v20`.
           12. Move to `#q0` (communication point).
           13. Send images of `v19`, `v18`, `v17`, `v20`.
           
           **Plan for Rover v12 (Analysis):**
           1. Sample `v3` (stone) at `#o5`.
           2. Sample `v5` (soil) at `#o5`. (Needs two samples, so assumes `drop_rock` can be done or two stores exist, but here `v16` is the only store and is free. The problem states `free(v12, v16)` and `full(v12, v16)` are mutually exclusive. We can only sample one, then drop, then sample again. Or the goal `receivedanalysis` does not require *all* rocks to be analyzed, just *a* rock of each type. So, sample one of each type).
           Let's modify: `sample_rock v12 #o5 v3 v16` then `drop_rock v12 v16` then `sample_rock v12 #o5 v5 v16`.
           3. Move to `#q10` (communication point).
           4. Send analysis of `v3`.
           5. Send analysis of `v5`.
           
           Let's check the given valid actions.
           Rover `v12` is at `v13`. `above(v12, #o5, v3)` is true. So `v12` should move to `#o5` to sample `v3`.
           `(move v12 v13 #o2 #o5)` is a valid move.
           
           Rover `v14` is at `v15`.
           `(move v14 v15 #t6 #q3)` is a valid move.
           `(calibrate v14 #q3 #y2 v19 v10)` is valid.
           `(take_image v14 #q3 #y2 v19 v10 v11)` is valid.
           
           Then for `v18`: `(move v14 #q3 #o2 #q1)` is valid.
           `(calibrate v14 #q1 #y1 v18 v10)` is valid.
           `(take_image v14 #q1 #y1 v18 v10 v11)` is valid.
           
           Then for `v17`: `(move v14 #q1 #o2 #q6)` is valid.
           `(calibrate v14 #q6 #y4 v17 v10)` is valid.
           `(take_image v14 #q6 #y4 v17 v10 v11)` is valid.
           
           Then for `v20`: `(move v14 #q6 #o2 #q5)` is valid.
           `(calibrate v14 #q5 #y3 v20 v10)` is valid.
           `(take_image v14 #q5 #y3 v20 v10 v11)` is valid.
           
           Then send images: `(move v14 #q5 #o2 #q0)` is valid.
           `(send_image v14 #q0 #y0 v9 v19 v11)` is valid.
           `(send_image v14 #q0 #y0 v9 v18 v11)` is valid.
           `(send_image v14 #q0 #y0 v9 v17 v11)` is valid.
           `(send_image v14 #q0 #y0 v9 v20 v11)` is valid.
           
           For analysis by `v12`:
           Initial `atconf(v12, v13)`. We want to sample rock `v3` (type `v2`) and `v5` (type `v6`).
           `above(v12, #o5, v3)` is true.
           `above(v12, #o5, v5)` is true.
           So `v12` should move to `#o5`.
           `(move v12 v13 #o2 #o5)` is valid.
           `(sample_rock v12 #o5 v3 v16)` is valid. This makes `full(v12, v16)` and `analyzed(v12, v3)`.
           Since `v16` is now `full`, we must `drop_rock` before sampling `v5`.
           `(drop_rock v12 v16)` is valid. This makes `free(v12, v16)` again.
           `(sample_rock v12 #o5 v5 v16)` is valid. This makes `full(v12, v16)` and `analyzed(v12, v5)`.
           
           Now send analyses. `v12` needs to move to `#q10`.
           `(move v12 #o5 #o2 #q10)` is valid.
           `(send_analysis v12 #q10 #y7 v9 v3)` is valid. This makes `receivedanalysis(v3)`.
           `(send_analysis v12 #q10 #y7 v9 v5)` is valid. This makes `receivedanalysis(v5)`.
           
           This plan covers all parts of `new-axiom@0()`.
           
           --Plan--:
           (move v14 v15 #t6 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #o2 #q1)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (move v14 #q1 #o2 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q5)
           (calibrate v14 #q5 #y3 v20 v10)
           (take_image v14 #q5 #y3 v20 v10 v11)
           (move v14 #q5 #o2 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q10)
           (send_analysis v12 #q10 #y7 v9 v3)
           (send_analysis v12 #q10 #y7 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the final state did not satisfy `new-axiom@0()`. Let's re-examine the conditions of `new-axiom@0()`:
           
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: These are true initially, and the plan does not change them to these specific values, but ensures they are at some valid configuration. The `move` actions change `atconf`, so `atconf(v12, v13)` and `atconf(v14, v15)` will *not* be true after the rovers move. The axiom *requires* these exact configurations. This is a critical misunderstanding of the axiom. The axiom `new-axiom@0()` implies a conjunction of facts that must be true *simultaneously* at the end. My previous plan ended with `v14` at `#q0` and `v12` at `#q10`. They need to return to `v13` and `v15` respectively for this condition to be met.
           
           2.  `free(v12, v16)` and `free(v14, v16)`: Rover `v12` samples two rocks, `v3` and `v5`. After sampling `v5`, `full(v12, v16)` would be true, and `free(v12, v16)` would be false. To satisfy `free(v12, v16)` at the end, `v12` must `drop_rock` its second sample. Similarly, `v14` did not sample anything, so `free(v14, v16)` remains true.
           
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: My plan achieved this by `v14` taking images and sending them.
           
           4.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Achieved by sampling and sending analysis of `v3` (type `v2`).
           5.  `type(?soil, v6)` and `receivedanalysis(?soil)`: Achieved by sampling and sending analysis of `v5` (type `v6`).
           
           The crucial issues are point 1 (rovers must return to initial configurations) and point 2 (rover `v12` must end with a free store).
           
           Let's refine the plan to address these:
           
           **Revised Plan:**
           
           **Rover v14 (Images and return to v15):**
           1.  Move to `#q3` to take image of `v19`.
           2.  Calibrate camera for `v19`.
           3.  Take image of `v19`.
           4.  Move to `#q1` to take image of `v18`.
           5.  Calibrate camera for `v18`.
           6.  Take image of `v18`.
           7.  Move to `#q6` to take image of `v17`.
           8.  Calibrate camera for `v17`.
           9.  Take image of `v17`.
           10. Move to `#q5` to take image of `v20`.
           11. Calibrate camera for `v20`.
           12. Take image of `v20`.
           13. Move to `#q0` (communication point).
           14. Send all four images to lander `v9`.
           15. **Return to initial configuration `v15`.**
           
           **Rover v12 (Analysis and return to v13, with free store):**
           1.  Move to `#o5` to sample `v3` (stone).
           2.  Sample `v3`.
           3.  Drop `v3` from store `v16` to make it free again.
           4.  Sample `v5` (soil).
           5.  Move to `#q10` (communication point).
           6.  Send analysis of `v3`.
           7.  Send analysis of `v5`.
           8.  **Drop `v5` from store `v16` to make it free again.**
           9.  **Return to initial configuration `v13`.**
           
           Let's check `move` actions for returning to `v13` and `v15`.
           For `v14` to return to `v15` from `#q0`: `(move v14 #q0 #t2 v15)` is a valid action.
           For `v12` to return to `v13` from `#q10`: `(move v12 #q10 #t16 v13)` is a valid action.
           
           All `free` conditions will be met, all `receivedimage` and `receivedanalysis` will be met, and all `atconf` will be met by returning to initial configurations.
           
           --Plan--:
           (move v14 v15 #t6 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #o2 #q1)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (move v14 #q1 #o2 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q5)
           (calibrate v14 #q5 #y3 v20 v10)
           (take_image v14 #q5 #y3 v20 v10 v11)
           (move v14 #q5 #o2 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v14 #q0 #t2 v15)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q10)
           (send_analysis v12 #q10 #y7 v9 v3)
           (send_analysis v12 #q10 #y7 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q10 #t16 v13)

