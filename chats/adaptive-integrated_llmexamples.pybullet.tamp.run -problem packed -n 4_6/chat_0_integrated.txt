User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v17 is a pose with position (0.048, -0.322, 0.781) and quaternion (0.0, 0.0, 0.367, 0.93).
           Object v15 is a pose with position (0.078, 0.239, 0.781) and quaternion (0.0, 0.0, 0.99, -0.143).
           Object v13 is a pose with position (-0.046, 0.435, 0.781) and quaternion (0.0, 0.0, 0.892, -0.453).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.292, -0.325), (-0.194, -0.227)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.002, -0.372), (0.097, -0.273)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, 0.196), (0.122, 0.283)).
           Object v9 is a pose with position (-0.243, -0.276, 0.781) and quaternion (0.0, 0.0, 0.949, -0.315).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.095, 0.386), (0.003, 0.484)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, v9)
           Atom stackable(v14, v18)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom supported(v16, v17, v11)
           Atom handempty(v6)
           Atom supported(v12, v13, v11)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom pose(v12, v13)
           Atom ataconf(v6, v7)
           Atom pose(v16, v17)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom ataconf(v4, v5)
           Atom atpose(v16, v17)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom arm(v6)
           Atom stackable(v12, v10)
           Atom pose(v14, v15)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom graspable(v16)
           Atom arm(v4)
           Atom controllable(v4)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom graspable(v14)
           Atom stackable(v16, v18)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom canmove()
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v14, #o1)
           Atom grasp(v16, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene consists of four graspable objects (v8, v12, v14, v16) and a surface (v11) on which they are currently supported. The goal is to place all four objects on object v18. Object v18 is stated as stackable for all four objects. There are also specific poses for each object on v11 (v9 for v8, v13 for v12, v15 for v14, v17 for v16).
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action doesn't change the robot's base configuration or manipulate any objects. Since the goal requires moving objects onto a new surface, and there are no pick/place actions available, the goal is unreachable.
           
           The `on` predicate requires `supported` and `atpose`. The initial state has `atpose(v8, v9)`, `atpose(v12, v13)`, `atpose(v14, v15)`, and `atpose(v16, v17)`. The goal requires `on(v8, v18)`, `on(v12, v18)`, `on(v14, v18)`, and `on(v16, v18)`, which implies changing the pose of all four objects so they are supported by `v18`. Since no pick or place actions are available, the robot cannot change the poses of the objects, and thus cannot achieve the goal.

