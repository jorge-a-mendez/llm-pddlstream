User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom rock(v7)
           Atom store(v16)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom objective(v17)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom camera(v10)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #t26, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t4, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, v15, #t6, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #t16, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q4, #t8, #q1)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v12, #q3, #t20, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #t22, #q3)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t12, #q3)
           Atom motion(v12, #q3, #t13, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #t23, #q3)
           Atom motion(v14, v15, #t11, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t19, #q8)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q12, #t24, #q1)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t25, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #t3, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #t10, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #t14, #q3)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q3, #t21, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q0, #t15, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #t18, #q3)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q0, #t17, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v14, #q6, #t9, #q2)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t7, #q1)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q2, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t10 #q7))
           ((move v12 #q0 #t15 #q5))
           ((move v12 #q0 #t17 #q9))
           ((move v12 #q0 #t3 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t23 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t13 #q7))
           ((move v12 #q3 #t20 #q10))
           ((move v12 #q3 #t21 #q5))
           ((move v12 #q3 #t4 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t14 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t18 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t24 #q1))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t7 #q1))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q1))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t19 #q8))
           ((move v14 #q6 #t9 #q2))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q6))
           ((move v14 v15 #t25 #q12))
           ((move v14 v15 #t26 #q13))
           ((move v14 v15 #t5 #q2))
           ((move v14 v15 #t6 #q4))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied by a number of conditions, but a common one is to have two rovers (`v12`, `v14`) both with `free` `store` `v16`, and to have `receivedimage` for two objectives (`v17`, `v18`) in `mode` `v11`, and to have `receivedanalysis` for a rock of type `v2` (e.g., `v1`, `v3`, `v4`) and for a rock of type `v6` (e.g., `v5`, `v7`, `v8`).
           
           Here's a breakdown of the steps to achieve the goal:
           
           1.  **Analyze rocks**: We need to analyze rocks of type `v2` and `v6`. Let's pick `v1` (type `v2`) and `v7` (type `v6`).
               *   Rover `v12` is at `v13` and can move to `#q9` to sample `v1`.
               *   Rover `v14` is at `v15` and can move to `#q8` to sample `v7`.
           2.  **Send analysis**: After sampling, the rovers need to send the analysis to the lander.
               *   Rover `v12` needs to move to `#q3` to be `comvisible` with the `lander` `v9` and send the analysis of `v1`.
               *   Rover `v14` needs to move to `#q1` to be `comvisible` with the `lander` `v9` and send the analysis of `v7`.
           3.  **Take images**: We need `receivedimage` for objectives `v17` and `v18` in `mode` `v11`.
               *   Rover `v12` can take an image of `v18` from `#q0` using `v10` in `v11` mode. It also can take an image of `v17` from `#q5`.
               *   Rover `v14` can take an image of `v18` from `#o3` and `v17` from `#q6`.
               *   Before taking an image, the camera `v10` needs to be `calibrated`.
           4.  **Send images**: After taking images, the rovers need to send the images to the lander.
               *   Rover `v12` needs to move to `#q3` to be `comvisible` with the `lander` `v9` and send images of `v17` and `v18`.
               *   Rover `v14` needs to move to `#q1` to be `comvisible` with the `lander` `v9` and send images of `v17` and `v18`.
           5.  **Ensure free stores**: Both rovers (`v12`, `v14`) start with `free` `v16`. After sampling, the store becomes `full`. We need to drop the rock to make the store `free` again. Since `free(v12, v16)` and `free(v14, v16)` are already true in the initial state, and we only sample once for each rover, we don't need to drop rocks if we only want to satisfy the conditions for the `new-axiom@0()` once. The axiom states `free(v12, v16)` and `free(v14, v16)`, which are already true, so we don't need to drop rocks for this specific axiom.
           
           Let's prioritize what's needed for the `new-axiom@0()`.
           The goal requires:
           *   `free(v12, v16)` (true initially)
           *   `free(v14, v16)` (true initially)
           *   `receivedimage(v17, v11)` (need to take and send image of `v17` in mode `v11`)
           *   `receivedimage(v18, v11)` (need to take and send image of `v18` in mode `v11`)
           *   `type(?stone, v2)` and `receivedanalysis(?stone)` (need to sample and send analysis of a rock of type `v2`)
           *   `type(?soil, v6)` and `receivedanalysis(?soil)` (need to sample and send analysis of a rock of type `v6`)
           
           We can use `v1` (type `v2`) and `v7` (type `v6`).
           
           **Rover v12 actions:**
           1.  Move to `#q9` to be above `v1`.
           2.  Sample `v1`.
           3.  Move to `#q3` for communication.
           4.  Send analysis of `v1`.
           5.  Move to `#q0` for imaging `v18`.
           6.  Calibrate camera `v10`.
           7.  Take image of `v18`.
           8.  Move to `#q5` for imaging `v17`.
           9.  Calibrate camera `v10` (again, as taking image invalidates calibration).
           10. Take image of `v17`.
           11. Move to `#q3` for communication.
           12. Send image of `v18`.
           13. Send image of `v17`.
           
           **Rover v14 actions:**
           1.  Move to `#q8` to be above `v7`.
           2.  Sample `v7`.
           3.  Move to `#q1` for communication.
           4.  Send analysis of `v7`.
           5.  Move to `#o3` for imaging `v18`.
           6.  Calibrate camera `v10`.
           7.  Take image of `v18`.
           8.  Move to `#q6` for imaging `v17`.
           9.  Calibrate camera `v10`.
           10. Take image of `v17`.
           11. Move to `#q1` for communication.
           12. Send image of `v18`.
           13. Send image of `v17`.
           
           Let's combine these efficiently. Since `receivedimage` and `receivedanalysis` are not tied to a specific rover, we can have one rover achieve one part and another rover achieve another part of the goal for images/analysis. However, both rovers need to retain free storage, which they do by default initially and we plan only one sample per rover to fulfill the analysis goal.
           
           Let's use `v12` for all image-related goals, and `v14` for all analysis-related goals. This might be more efficient in terms of movement.
           
           **Rover v12 (images):**
           1.  `move v12 v13 #t0 #q0` (move to `q0` for `v18`)
           2.  `calibrate v12 #q0 #y0 v18 v10`
           3.  `take_image v12 #q0 #y0 v18 v10 v11`
           4.  `move v12 #q0 #t15 #q5` (move to `q5` for `v17`)
           5.  `calibrate v12 #q5 #y3 v17 v10` (camera needs recalibration)
           6.  `take_image v12 #q5 #y3 v17 v10 v11`
           7.  `move v12 #q5 #t14 #q3` (move to `q3` for comms)
           8.  `send_image v12 #q3 #y2 v9 v18 v11`
           9.  `send_image v12 #q3 #y2 v9 v17 v11`
           
           **Rover v14 (analysis):**
           1.  `move v14 v15 #t5 #q2` (move to `q2` for `v1` - type `v2`)
           2.  `sample_rock v14 #q2 v1 v16`
           3.  `move v14 #q2 #t7 #q1` (move to `q1` for comms)
           4.  `send_analysis v14 #q1 #y1 v9 v1`
           5.  `move v14 #q1 #o2 #q8` (move to `q8` for `v7` - type `v6`)
           6.  `sample_rock v14 #q8 v7 v16`
           7.  `move v14 #q8 #t16 #q1` (move to `q1` for comms)
           8.  `send_analysis v14 #q1 #y1 v9 v7`
           
           This plan ensures all the `receivedimage` and `receivedanalysis` conditions are met, and the `free` store conditions are maintained because we start with them and only sample once per rover, which is compatible with the "new-axiom@0()" definition (which doesn't require the stores to be free *after* analysis, but just that they are free. The initial state satisfies `free(v12, v16)` and `free(v14, v16)`).
           
           --Plan--:
           (move v12 v13 #t0 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t15 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t14 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v14 v15 #t5 #q2)
           (sample_rock v14 #q2 v1 v16)
           (move v14 #q2 #t7 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (move v14 #q1 #o2 #q8)
           (sample_rock v14 #q8 v7 v16)
           (move v14 #q8 #t16 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies. The previous plan failed to satisfy `Atom new-axiom@0()`, which is a complex axiom involving several conditions, not just the raw `receivedimage` and `receivedanalysis` facts. The axiom states:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           My previous interpretation for `free(v12, v16)` and `free(v14, v16)` was incorrect. While they are true initially, `sample_rock` makes them `full`. Therefore, to satisfy the axiom, the stores `v16` for both rovers `v12` and `v14` must be `free` *at the time the goal is checked*. This means if we sample a rock, we must drop it afterward.
           
           Let's revise the plan to ensure all parts of `new-axiom@0()` are met at the final state.
           
           **Required final state:**
           1.  `atconf(v12, v13)`: Rover `v12` must end up at `v13`.
           2.  `atconf(v14, v15)`: Rover `v14` must end up at `v15`.
           3.  `free(v12, v16)`: Rover `v12` must have `v16` free.
           4.  `free(v14, v16)`: Rover `v14` must have `v16` free.
           5.  `receivedimage(v17, v11)`: Image of `v17` in `v11` mode received.
           6.  `receivedimage(v18, v11)`: Image of `v18` in `v11` mode received.
           7.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type `v2` received. We will use `v1`.
           8.  `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type `v6` received. We will use `v7`.
           
           Let's try to make rover `v12` handle `v1` analysis and all image sending, and rover `v14` handle `v7` analysis.
           
           **Rover v12 Plan:**
           1.  **Analyze `v1` (type `v2`):**
               *   Move to `#q9` (above `v1`).
               *   Sample `v1`.
               *   Move to `#q3` (coms range).
               *   Send analysis of `v1`.
               *   Drop `v1` to free `v16`.
               *   Move back to `v13`.
           2.  **Take and send images (`v17`, `v18` in `v11` mode):**
               *   Move to `#q0` (image range for `v18`).
               *   Calibrate `v10`.
               *   Take image of `v18`.
               *   Move to `#q5` (image range for `v17`).
               *   Calibrate `v10`.
               *   Take image of `v17`.
               *   Move to `#q3` (coms range).
               *   Send image of `v18`.
               *   Send image of `v17`.
               *   Move back to `v13`.
           
           **Rover v14 Plan:**
           1.  **Analyze `v7` (type `v6`):**
               *   Move to `#q8` (above `v7`).
               *   Sample `v7`.
               *   Move to `#q1` (coms range).
               *   Send analysis of `v7`.
               *   Drop `v7` to free `v16`.
               *   Move back to `v15`.
           
           Let's make sure the final `atconf` positions are correct as well.
           
           **Detailed Combined Plan:**
           
           1.  **Rover v12: Sample `v1` and send analysis, then drop, then take and send images, then return to `v13`.**
               *   (move v12 v13 #o2 #q9) - move from `v13` to `#q9` (above `v1`)
               *   (sample_rock v12 #q9 v1 v16)
               *   (move v12 #q9 #t18 #q3) - move from `#q9` to `#q3` (coms for `v9`)
               *   (send_analysis v12 #q3 #y2 v9 v1)
               *   (drop_rock v12 v16) - Free store
               *   (move v12 #q3 #t4 v13) - Return to `v13` (intermediate for goal `atconf(v12, v13)`)
               *   (move v12 v13 #t0 #q0) - move to `#q0` (image range for `v18`)
               *   (calibrate v12 #q0 #y0 v18 v10)
               *   (take_image v12 #q0 #y0 v18 v10 v11)
               *   (move v12 #q0 #t15 #q5) - move to `#q5` (image range for `v17`)
               *   (calibrate v12 #q5 #y3 v17 v10)
               *   (take_image v12 #q5 #y3 v17 v10 v11)
               *   (move v12 #q5 #t14 #q3) - move to `#q3` (coms for `v9`)
               *   (send_image v12 #q3 #y2 v9 v18 v11)
               *   (send_image v12 #q3 #y2 v9 v17 v11)
               *   (move v12 #q3 #t4 v13) - Return to `v13` for final goal state
           
           2.  **Rover v14: Sample `v7` and send analysis, then drop, then return to `v15`.**
               *   (move v14 v15 #o2 #q8) - move from `v15` to `#q8` (above `v7`)
               *   (sample_rock v14 #q8 v7 v16)
               *   (move v14 #q8 #t16 #q1) - move from `#q8` to `#q1` (coms for `v9`)
               *   (send_analysis v14 #q1 #y1 v9 v7)
               *   (drop_rock v14 v16) - Free store
               *   (move v14 #q1 #t2 v15) - Return to `v15` for final goal state
           
           All `atconf` and `free` conditions will be met at the end of this plan, along with the `receivedimage` and `receivedanalysis` conditions.
           
           --Plan--:
           (move v12 v13 #o2 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t18 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #t4 v13)
           (move v12 v13 #t0 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t15 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t14 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v12 #q3 #t4 v13)
           (move v14 v15 #o2 #q8)
           (sample_rock v14 #q8 v7 v16)
           (move v14 #q8 #t16 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t2 v15)

