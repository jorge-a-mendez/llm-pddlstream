User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom objective(v20)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom rock(v7)
           Atom rock(v3)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom camera(v10)
           Atom objective(v18)
           Atom rock(v5)
           Atom rock(v1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #q14, v8)
           Atom conf(v14, #q14)
           Atom imagevisible(v14, #q13, #y9, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q3, v8)
           Atom conf(v12, #q3)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q0, v4)
           Atom conf(v12, #q0)
           Atom imagevisible(v14, #q10, #y7, v20)
           Atom imagerange(v14, #q10, v20)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y8, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #t21, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #t13, v15)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #t20, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v14, v15, #t18, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #t19, #q4)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v14, v15, #t22, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #t24, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t12, #q5)
           Atom motion(v12, #q1, #t11, #q4)
           Atom motion(v12, #q1, #t0, v13)
           Atom motion(v12, #q1, #t9, #q6)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q6, #t10, #q1)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #t14, #q1)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, v13, #t15, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t3, #q1)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q1, #t8, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t16, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t2, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #t7, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #t23, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v4 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q3 v8 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q14 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t0 v13))
           ((move v12 #q1 #t11 #q4))
           ((move v12 #q1 #t12 #q5))
           ((move v12 #q1 #t7 #q0))
           ((move v12 #q1 #t8 #q3))
           ((move v12 #q1 #t9 #q6))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t19 #q4))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t21 #q6))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t23 #q0))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q1))
           ((move v12 #q6 #t20 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t15 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t24 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #t13 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t18 #q10))
           ((move v14 v15 #t22 #q14))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q10 #y7 v20 v10))
           ((calibrate v14 #q11 #y8 v19 v10))
           ((calibrate v14 #q13 #y9 v17 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q10 #y7 v20 v10 v11))
           ((take_image v14 #q11 #y8 v19 v10 v11))
           ((take_image v14 #q13 #y9 v17 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for Achieving new-axiom@0() in the rovers Domain**
           
           Okay, here's the game plan. The goal is to satisfy the conditions laid out in the `new-axiom@0()` definition.  This means we need to get images of four specific objectives (v17, v18, v19, v20) and analyses of one stone and one soil sample.  I've decided on a division of labor to make this efficient.
           
           Rover v12 will be the image specialist. It starts at configuration v13 and will need to move to the various image capture locations and communicate back to lander v9. Here's what v12 will do:
           
           1.  Move to position #q2, calibrate, take image of v17, move to comms at #q1, send the image.
           2.  Move to position #q4, calibrate, take image of v18, move to comms at #q1, send the image.
           3.  Move to position #q6, calibrate, take image of v19, move to comms at #q1, send the image.
           4.  Move to position #q5, calibrate, take image of v20, move to comms at #q1, send the image.
           
           Rover v14 will focus on the sample analysis. It starts at configuration v15 and its store v16 is initially free. We will analyze stone v4 and soil v8. Here's the plan:
           
           1.  Move to the location of v4, sample it, move to comms at #q7, send the analysis to the lander v9, and drop the sample so v14 can sample again.
           2.  Move to location to sample soil v8, sample it, move to comms, send the analysis.
           
           We know that we are not blocking any rays, so we do not have to worry about those constraints. And that takes care of all conditions in the axiom!
           
)

Model:     **Finalized Plan for Achieving new-axiom@0() in the rovers Domain**
           
           Okay, here's the game plan. The goal is to satisfy the conditions laid out in the `new-axiom@0()` definition.  This means we need to get images of four specific objectives (v17, v18, v19, v20) and analyses of one stone and one soil sample.  I've decided on a division of labor to make this efficient.
           
           Rover v12 will be the image specialist. It starts at configuration v13 and will need to move to the various image capture locations and communicate back to lander v9. Here's what v12 will do:
           
           1.  Move to position #q2, calibrate, take image of v17, move to comms at #q1, send the image.
           2.  Move to position #q4, calibrate, take image of v18, move to comms at #q1, send the image.
           3.  Move to position #q6, calibrate, take image of v19, move to comms at #q1, send the image.
           4.  Move to position #q5, calibrate, take image of v20, move to comms at #q1, send the image.
           
           Rover v14 will focus on the sample analysis. It starts at configuration v15 and its store v16 is initially free. We will analyze stone v4 and soil v8. Here's the plan:
           
           1.  Move to the location of v4, sample it, move to comms at #q7, send the analysis to the lander v9, and drop the sample so v14 can sample again.
           2.  Move to location to sample soil v8, sample it, move to comms, send the analysis.
           
           We know that we are not blocking any rays, so we do not have to worry about those constraints. And that takes care of all conditions in the axiom!
           

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

(Thoughts: **The Root Cause Analysis and Proposed Solution**
           
           Okay, so I've pinpointed the problem. The previous plan failed because it didn't fully satisfy the goal `new-axiom@0()`. This goal is a complex conjunction of 20 atoms, and I didn't realize the importance of the initial configurations of the rovers.
           
           My analysis reveals that the core issue lies in the final positions of the rovers.  The plan needed to ensure they *returned* to their starting locations.  My previous plan correctly tackled the imaging and analysis tasks, as well as maintaining `free` status. It was the rovers' final resting spots that were the problem.
           
           Here's my updated plan, which meticulously addresses the return-to-origin requirement:
           
           **Rover v12 (Image Collection & Return)**
           
           1.  Move, calibrate, image, move, send (x4) for objectives v17, v18, v19, v20.
           2.  **CRITICAL:**  Return v12 from `#q1` *back* to its initial configuration `v13`.
           
           **Rover v14 (Rock Analysis & Return)**
           
           1.  Move to rock location, sample, move to comm location, send, drop rock (x2) for rocks v4 and v8.
           2.  **CRITICAL:** Return v14 from `#q7` *back* to its initial configuration `v15`.
           
           **The Detailed Plan**
           
           I've constructed a step-by-step plan:
           
           **Rover v12**
           
           1.  `(move v12 v13 #t1 #q2)`: Move to #q2 to collect v17 image.
           2.  `(calibrate v12 #q2 #y1 v17 v10)`: Calibrate.
           3.  `(take_image v12 #q2 #y1 v17 v10 v11)`: Take image.
           4.  `(move v12 #q2 #t4 #q1)`: Move to comms.
           5.  `(send_image v12 #q1 #y0 v9 v17 v11)`: Send.
           6.  `(move v12 #q1 #t11 #q4)`: Move to #q4 to collect v18 image.
           7.  `(calibrate v12 #q4 #y2 v18 v10)`: Calibrate.
           8.  `(take_image v12 #q4 #y2 v18 v10 v11)`: Take image.
           9.  `(move v12 #q4 #t5 #q1)`: Move to comms.
           10. `(send_image v12 #q1 #y0 v9 v18 v11)`: Send.
           11. `(move v12 #q1 #t9 #q6)`: Move to #q6 to collect v19 image.
           12. `(calibrate v12 #q6 #y4 v19 v10)`: Calibrate.
           13. `(take_image v12 #q6 #y4 v19 v10 v11)`: Take image.
           14. `(move v12 #q6 #t10 #q1)`: Move to comms.
           15. `(send_image v12 #q1 #y0 v9 v19 v11)`: Send.
           16. `(move v12 #q1 #t12 #q5)`: Move to #q5 to collect v20 image.
           17. `(calibrate v12 #q5 #y3 v20 v10)`: Calibrate.
           18. `(take_image v12 #q5 #y3 v20 v10 v11)`: Take image.
           19. `(move v12 #q5 #t6 #q1)`: Move to comms.
           20. `(send_image v12 #q1 #y0 v9 v20 v11)`: Send.
           21. `(move v12 #q1 #t0 v13)`:  **Return to v13**
           
           **Rover v14**
           
           1.  `(move v14 v15 #o2 #o5)`: Move to #o5 for rock v4.
           2.  `(sample_rock v14 #o5 v4 v16)`: Sample.
           3.  `(move v14 #o5 #o2
)

Model:     **The Root Cause Analysis and Proposed Solution**
           
           Okay, so I've pinpointed the problem. The previous plan failed because it didn't fully satisfy the goal `new-axiom@0()`. This goal is a complex conjunction of 20 atoms, and I didn't realize the importance of the initial configurations of the rovers.
           
           My analysis reveals that the core issue lies in the final positions of the rovers.  The plan needed to ensure they *returned* to their starting locations.  My previous plan correctly tackled the imaging and analysis tasks, as well as maintaining `free` status. It was the rovers' final resting spots that were the problem.
           
           Here's my updated plan, which meticulously addresses the return-to-origin requirement:
           
           **Rover v12 (Image Collection & Return)**
           
           1.  Move, calibrate, image, move, send (x4) for objectives v17, v18, v19, v20.
           2.  **CRITICAL:**  Return v12 from `#q1` *back* to its initial configuration `v13`.
           
           **Rover v14 (Rock Analysis & Return)**
           
           1.  Move to rock location, sample, move to comm location, send, drop rock (x2) for rocks v4 and v8.
           2.  **CRITICAL:** Return v14 from `#q7` *back* to its initial configuration `v15`.
           
           **The Detailed Plan**
           
           I've constructed a step-by-step plan:
           
           **Rover v12**
           
           1.  `(move v12 v13 #t1 #q2)`: Move to #q2 to collect v17 image.
           2.  `(calibrate v12 #q2 #y1 v17 v10)`: Calibrate.
           3.  `(take_image v12 #q2 #y1 v17 v10 v11)`: Take image.
           4.  `(move v12 #q2 #t4 #q1)`: Move to comms.
           5.  `(send_image v12 #q1 #y0 v9 v17 v11)`: Send.
           6.  `(move v12 #q1 #t11 #q4)`: Move to #q4 to collect v18 image.
           7.  `(calibrate v12 #q4 #y2 v18 v10)`: Calibrate.
           8.  `(take_image v12 #q4 #y2 v18 v10 v11)`: Take image.
           9.  `(move v12 #q4 #t5 #q1)`: Move to comms.
           10. `(send_image v12 #q1 #y0 v9 v18 v11)`: Send.
           11. `(move v12 #q1 #t9 #q6)`: Move to #q6 to collect v19 image.
           12. `(calibrate v12 #q6 #y4 v19 v10)`: Calibrate.
           13. `(take_image v12 #q6 #y4 v19 v10 v11)`: Take image.
           14. `(move v12 #q6 #t10 #q1)`: Move to comms.
           15. `(send_image v12 #q1 #y0 v9 v19 v11)`: Send.
           16. `(move v12 #q1 #t12 #q5)`: Move to #q5 to collect v20 image.
           17. `(calibrate v12 #q5 #y3 v20 v10)`: Calibrate.
           18. `(take_image v12 #q5 #y3 v20 v10 v11)`: Take image.
           19. `(move v12 #q5 #t6 #q1)`: Move to comms.
           20. `(send_image v12 #q1 #y0 v9 v20 v11)`: Send.
           21. `(move v12 #q1 #t0 v13)`:  **Return to v13**
           
           **Rover v14**
           
           1.  `(move v14 v15 #o2 #o5)`: Move to #o5 for rock v4.
           2.  `(sample_rock v14 #o5 v4 v16)`: Sample.
           3.  `(move v14 #o5 #o2

