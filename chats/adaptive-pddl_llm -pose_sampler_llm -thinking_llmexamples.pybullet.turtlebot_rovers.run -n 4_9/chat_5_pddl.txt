User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom objective(v20)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom rock(v7)
           Atom rock(v3)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom camera(v10)
           Atom objective(v18)
           Atom rock(v5)
           Atom rock(v1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q13, #y9, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q3, v8)
           Atom conf(v12, #q3)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q0, v4)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q10, #y7, v20)
           Atom imagerange(v14, #q10, v20)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y8, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #t21, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t18, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #t20, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q7, #t13, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v12, #q1, #t0, v13)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q1, #t12, #q5)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q6, #t10, #q1)
           Atom motion(v12, #q1, #t11, #q4)
           Atom motion(v12, #q1, #t9, #q6)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, v13, #t15, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #t14, #q1)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q1, #t8, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t3, #q1)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #t16, #q7)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v12, #q0, #t2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q1, #t7, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t19, #q4)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q7, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v4 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q3 v8 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t0 v13))
           ((move v12 #q1 #t11 #q4))
           ((move v12 #q1 #t12 #q5))
           ((move v12 #q1 #t7 #q0))
           ((move v12 #q1 #t8 #q3))
           ((move v12 #q1 #t9 #q6))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t19 #q4))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t21 #q6))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q1))
           ((move v12 #q6 #t20 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t15 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #t13 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t18 #q10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q10 #y7 v20 v10))
           ((calibrate v14 #q11 #y8 v19 v10))
           ((calibrate v14 #q13 #y9 v17 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q10 #y7 v20 v10 v11))
           ((take_image v14 #q11 #y8 v19 v10 v11))
           ((take_image v14 #q13 #y9 v17 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break down this plan to achieve the goal `Atom new-axiom@0()`:**
           
           My core objective is to ensure that I fulfill all the conditions laid out in `new-axiom@0()`. This means I need to get images of four distinct objects (v17, v18, v19, v20) to the lander (v9), and then get a sample analysis of a stone and a soil type rock to the lander as well.
           
           Here's the plan I've meticulously crafted:
           
           **Rover v12:**
           
           *   **Image Capture Sequence:** I'll begin by using the `v10` camera to capture images of all the objectives. This part of the mission is the most complex as, to be able to take an image, first I need to find the correct configuration `q` that is in line with the object and lander; second I need to `calibrate` the camera; then I can `take_image`. The details of this are as follows:
               *   **Objective v17:**
                   *   Move to `#q2`
                   *   Calibrate the camera for `#y1`
                   *   Take image.
               *   **Objective v18:**
                   *   Move to `#q4`
                   *   Calibrate for `#y2`
                   *   Take image.
               *   **Objective v19:**
                   *   Move to `#q6`
                   *   Calibrate for `#y4`
                   *   Take image.
               *   **Objective v20:**
                   *   Move to `#q5`
                   *   Calibrate for `#y3`
                   *   Take image.
           
           *   **Soil Sample + Drop + Analysis Submission:** After I have all the images, I move onto the final analysis and communication. The key is to obtain samples and submit them to the lander. So I will
               *   Move to `#q0`, which is adjacent to the soil sample I can collect, rock `v4`.
               *   Then, I will get the sample, `sample_rock v12 #q0 v4 v16`.
               *   Because I must free `v16` so that my conditions are met, `drop_rock v12 v16`.
               *   After the sample is free, then I will need to move to the `send` pose, `#q1`, `move v12 #q0 #t2 #q1`.
               *   From this final pose, I will send all images as well as sample analysis:
           
           *   **Lander Communication:** Now I send to the lander all the images and the sample. So
               *   send `v17, v18, v19, v20` images to lander using `mode=v11` at `#y0`.
               *   Submit analysis for the stone `v4`.
               *   In order to ensure that I end in the `atconf` state specified in my original goal,
               *   Move `v12` back to its initial location `v13`.
           
           **Rover v14:**
           
           My colleague rover is doing a similar task, focusing on the second sample and analysis submission. So,
           *   I will move to `#o5`, where my sample soil sample is `v8`, from the location `v15`.
           *   As per my colleagues, I will obtain the sample, `sample_rock v14 #o5 v8 v16`.
           *   Drop my sample, so I can fulfill the goal condition, `drop_rock v14 v16`.
           *   Move to `#q7` pose, that is the `send` pose.
           *   Submit analysis to the lander. This is the very last step.
           *   Once done, I will return to my start, `move v14 #q7 #t13 v15`.
           
           **In short, my complete plan should:**
           1.  Use `v12` to take images and report images and the stone.
           2.  Use `v14` to obtain and report the soil sample.
           3.  Each rover must return to the initial positions, ensuring my goal predicates are achieved!
           
           That's my strategic plan! If there are issues, I will let you know.
           
)

Model:     **Alright, let's break down this plan to achieve the goal `Atom new-axiom@0()`:**
           
           My core objective is to ensure that I fulfill all the conditions laid out in `new-axiom@0()`. This means I need to get images of four distinct objects (v17, v18, v19, v20) to the lander (v9), and then get a sample analysis of a stone and a soil type rock to the lander as well.
           
           Here's the plan I've meticulously crafted:
           
           **Rover v12:**
           
           *   **Image Capture Sequence:** I'll begin by using the `v10` camera to capture images of all the objectives. This part of the mission is the most complex as, to be able to take an image, first I need to find the correct configuration `q` that is in line with the object and lander; second I need to `calibrate` the camera; then I can `take_image`. The details of this are as follows:
               *   **Objective v17:**
                   *   Move to `#q2`
                   *   Calibrate the camera for `#y1`
                   *   Take image.
               *   **Objective v18:**
                   *   Move to `#q4`
                   *   Calibrate for `#y2`
                   *   Take image.
               *   **Objective v19:**
                   *   Move to `#q6`
                   *   Calibrate for `#y4`
                   *   Take image.
               *   **Objective v20:**
                   *   Move to `#q5`
                   *   Calibrate for `#y3`
                   *   Take image.
           
           *   **Soil Sample + Drop + Analysis Submission:** After I have all the images, I move onto the final analysis and communication. The key is to obtain samples and submit them to the lander. So I will
               *   Move to `#q0`, which is adjacent to the soil sample I can collect, rock `v4`.
               *   Then, I will get the sample, `sample_rock v12 #q0 v4 v16`.
               *   Because I must free `v16` so that my conditions are met, `drop_rock v12 v16`.
               *   After the sample is free, then I will need to move to the `send` pose, `#q1`, `move v12 #q0 #t2 #q1`.
               *   From this final pose, I will send all images as well as sample analysis:
           
           *   **Lander Communication:** Now I send to the lander all the images and the sample. So
               *   send `v17, v18, v19, v20` images to lander using `mode=v11` at `#y0`.
               *   Submit analysis for the stone `v4`.
               *   In order to ensure that I end in the `atconf` state specified in my original goal,
               *   Move `v12` back to its initial location `v13`.
           
           **Rover v14:**
           
           My colleague rover is doing a similar task, focusing on the second sample and analysis submission. So,
           *   I will move to `#o5`, where my sample soil sample is `v8`, from the location `v15`.
           *   As per my colleagues, I will obtain the sample, `sample_rock v14 #o5 v8 v16`.
           *   Drop my sample, so I can fulfill the goal condition, `drop_rock v14 v16`.
           *   Move to `#q7` pose, that is the `send` pose.
           *   Submit analysis to the lander. This is the very last step.
           *   Once done, I will return to my start, `move v14 #q7 #t13 v15`.
           
           **In short, my complete plan should:**
           1.  Use `v12` to take images and report images and the stone.
           2.  Use `v14` to obtain and report the soil sample.
           3.  Each rover must return to the initial positions, ensuring my goal predicates are achieved!
           
           That's my strategic plan! If there are issues, I will let you know.
           

