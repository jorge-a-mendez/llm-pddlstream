(define (domain pick-and-place)
  (:requirements :strips)
  (:predicates
    (Conf ?q)
    (Block ?b)
    (Pose ?p)
    (Kin ?q ?p)
    (Motion ?q1 ?t ?q2)
    (AtPose ?p ?q)
    (AtConf ?q)
    (Holding ?b)
    (HandEmpty)
    (Observable ?p)
    (Latent ?p)
    (Initial)
  )
  (:action move
    :parameters (?q1 ?t ?q2)
    :precondition (and (Motion ?q1 ?t ?q2) ; (Initial)
                       (AtConf ?q1))
    :effect (and (AtConf ?q2)
                 (not (AtConf ?q1)) (not (Initial)))
  )
  (:action pick
    :parameters (?b ?p ?q)
    :precondition (and (Block ?b) (Kin ?q ?p)
                       (AtConf ?q) (Observable ?p) (AtPose ?b ?p) (HandEmpty))
    :effect (and (Holding ?b)
                 (not (AtPose ?b ?p)) (not (HandEmpty)) (not (Initial)))
  )
  ; (:action place
  ;  :parameters (?b ?p ?q)
  ;  :precondition (and (Block ?b) (Kin ?q ?p)
  ;                     (AtConf ?q) (Observable ?p) (Holding ?b))
  ;  :effect (and (AtPose ?b ?p) (HandEmpty)
  ;               (not (Holding ?b)) (not (Initial)))
  ;)
   (:action phone
    :parameters (?b ?p)
    :precondition (and (Block ?b) (Pose ?p))
    :effect (and (Observable ?p)
                 (not (Latent ?p)) (not (Initial)))
  )
)